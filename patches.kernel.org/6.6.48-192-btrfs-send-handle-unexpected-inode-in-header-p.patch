From: David Sterba <dsterba@suse.com>
Date: Tue, 6 Feb 2024 22:47:13 +0100
Subject: [PATCH] btrfs: send: handle unexpected inode in header
 process_recorded_refs()
References: bsc#1218260
Patch-mainline: 6.6.48
Git-commit: 5d2288711ccc483feca73151c46ee835bda17839

[ Upstream commit 5d2288711ccc483feca73151c46ee835bda17839 ]

Change BUG_ON to proper error handling when an unexpected inode number
is encountered. As the comment says this should never happen.

Signed-off-by: David Sterba <dsterba@suse.com>
Signed-off-by: Sasha Levin <sashal@kernel.org>
Signed-off-by: Robert Frohl <rfrohl@suse.com>
---
 fs/btrfs/send.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/fs/btrfs/send.c b/fs/btrfs/send.c
index b153f6a96fc8..9da3c72eb615 100644
--- a/fs/btrfs/send.c
+++ b/fs/btrfs/send.c
@@ -4195,7 +4195,13 @@ static int process_recorded_refs(struct send_ctx *sctx, int *pending_move)
 	 * This should never happen as the root dir always has the same ref
 	 * which is always '..'
 	 */
-	BUG_ON(sctx->cur_ino <= BTRFS_FIRST_FREE_OBJECTID);
+	if (unlikely(sctx->cur_ino <= BTRFS_FIRST_FREE_OBJECTID)) {
+		btrfs_err(fs_info,
+			  "send: unexpected inode %llu in process_recorded_refs()",
+			  sctx->cur_ino);
+		ret = -EINVAL;
+		goto out;
+	}
 
 	valid_path = fs_path_alloc();
 	if (!valid_path) {
-- 
2.46.0

