From: Takashi Iwai <tiwai@suse.de>
Subject: kABI workaround for struct mtk_base_afe changes
Patch-mainline: Never, kABI workaround
References: git-fixes

The patch ASoC-mediatek-use-reserved-memory-or-enable-buffer-p.patch
added a new field to struct mtk_base_afe, which broke kABI.
Move and wrap it in a hole as a standard workaround.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 sound/soc/mediatek/common/mtk-base-afe.h |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/sound/soc/mediatek/common/mtk-base-afe.h
+++ b/sound/soc/mediatek/common/mtk-base-afe.h
@@ -117,11 +117,13 @@ struct mtk_base_afe {
 	struct mtk_base_afe_irq *irqs;
 	int irqs_size;
 	int memif_32bit_supported;
-	bool preallocate_buffers;
 
 	struct list_head sub_dais;
 	struct snd_soc_dai_driver *dai_drivers;
 	unsigned int num_dai_drivers;
+#ifndef __GENKSYMS__
+	bool preallocate_buffers;
+#endif
 
 	const struct snd_pcm_hardware *mtk_afe_hardware;
 	int (*memif_fs)(struct snd_pcm_substream *substream,
