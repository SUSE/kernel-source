From: Steffen Jaeckel <sjaeckel@suse.de>
Subject: kABI fix for net: Remove RTNL dance for SIOCBRADDIF and SIOCBRDELIF.
Patch-mainline: Never, kABI workaround
References: CVE-2025-22111 bsc#1241572

Upstream commit ed3ba9b6e280 ("net: Remove RTNL dance for
SIOCBRADDIF and SIOCBRDELIF.") changed the signature of the `hook`
argument passed to `brioctl_set()` and thereby breaking kABI. Revert
that change.

Signed-off-by: Steffen Jaeckel <sjaeckel@suse.de>

---
 include/linux/if_bridge.h |  6 ++++--
 net/bridge/br_ioctl.c     | 15 ++++++++-------
 net/bridge/br_private.h   |  3 ++-
 net/socket.c              | 13 ++++++++-----
 4 files changed, 22 insertions(+), 15 deletions(-)

diff --git a/include/linux/if_bridge.h b/include/linux/if_bridge.h
index c5fe3b2a53e82..3ff96ae31bf6d 100644
--- a/include/linux/if_bridge.h
+++ b/include/linux/if_bridge.h
@@ -65,9 +65,11 @@ struct br_ip_list {
 #define BR_DEFAULT_AGEING_TIME	(300 * HZ)
 
 struct net_bridge;
-void brioctl_set(int (*hook)(struct net *net, unsigned int cmd,
+void brioctl_set(int (*hook)(struct net *net, struct net_bridge *br,
+			     unsigned int cmd, struct ifreq *ifr,
 			     void __user *uarg));
-int br_ioctl_call(struct net *net, unsigned int cmd, void __user *uarg);
+int br_ioctl_call(struct net *net, struct net_bridge *br, unsigned int cmd,
+		  struct ifreq *ifr, void __user *uarg);
 
 #if IS_ENABLED(CONFIG_BRIDGE) && IS_ENABLED(CONFIG_BRIDGE_IGMP_SNOOPING)
 int br_multicast_list_adjacent(struct net_device *dev,
diff --git a/net/bridge/br_ioctl.c b/net/bridge/br_ioctl.c
index 6bc0a11f2ed3e..e6e4caece2da3 100644
--- a/net/bridge/br_ioctl.c
+++ b/net/bridge/br_ioctl.c
@@ -394,10 +394,11 @@ static int old_deviceless(struct net *net, void __user *data)
 	return -EOPNOTSUPP;
 }
 
-int br_ioctl_stub(struct net *net, unsigned int cmd, void __user *uarg)
+int br_ioctl_stub(struct net *net, struct net_bridge *br, unsigned int cmd,
+                  struct ifreq *ifr, void __user *uarg)
 {
 	int ret = -EOPNOTSUPP;
-	struct ifreq ifr;
+	struct ifreq ifr_;
 
 	if (cmd == SIOCBRADDIF || cmd == SIOCBRDELIF) {
 		void __user *data;
@@ -406,11 +407,11 @@ int br_ioctl_stub(struct net *net, unsigned int cmd, void __user *uarg)
 		if (!ns_capable(net->user_ns, CAP_NET_ADMIN))
 			return -EPERM;
 
-		if (get_user_ifreq(&ifr, &data, uarg))
+		if (get_user_ifreq(&ifr_, &data, uarg))
 			return -EFAULT;
 
-		ifr.ifr_name[IFNAMSIZ - 1] = 0;
-		colon = strchr(ifr.ifr_name, ':');
+		ifr_.ifr_name[IFNAMSIZ - 1] = 0;
+		colon = strchr(ifr_.ifr_name, ':');
 		if (colon)
 			*colon = 0;
 	}
@@ -449,7 +450,7 @@ int br_ioctl_stub(struct net *net, unsigned int cmd, void __user *uarg)
 	{
 		struct net_device *dev;
 
-		dev = __dev_get_by_name(net, ifr.ifr_name);
+		dev = __dev_get_by_name(net, ifr_.ifr_name);
 		if (!dev || !netif_device_present(dev)) {
 			ret = -ENODEV;
 			break;
@@ -459,7 +460,7 @@ int br_ioctl_stub(struct net *net, unsigned int cmd, void __user *uarg)
 			break;
 		}
 
-		ret = add_del_if(netdev_priv(dev), ifr.ifr_ifindex, cmd == SIOCBRADDIF);
+		ret = add_del_if(netdev_priv(dev), ifr_.ifr_ifindex, cmd == SIOCBRADDIF);
 	}
 		break;
 	}
diff --git a/net/bridge/br_private.h b/net/bridge/br_private.h
index 644319a0ed37b..8920a80b307b0 100644
--- a/net/bridge/br_private.h
+++ b/net/bridge/br_private.h
@@ -941,7 +941,8 @@ br_port_get_check_rtnl(const struct net_device *dev)
 /* br_ioctl.c */
 int br_dev_siocdevprivate(struct net_device *dev, struct ifreq *rq,
 			  void __user *data, int cmd);
-int br_ioctl_stub(struct net *net, unsigned int cmd, void __user *uarg);
+int br_ioctl_stub(struct net *net, struct net_bridge *br, unsigned int cmd,
+		  struct ifreq *ifr, void __user *uarg);
 
 /* br_multicast.c */
 #ifdef CONFIG_BRIDGE_IGMP_SNOOPING
diff --git a/net/socket.c b/net/socket.c
index 0cbac5b75ac9e..2f2bd3c6700e6 100644
--- a/net/socket.c
+++ b/net/socket.c
@@ -1138,10 +1138,12 @@ static ssize_t sock_write_iter(struct kiocb *iocb, struct iov_iter *from)
  */
 
 static DEFINE_MUTEX(br_ioctl_mutex);
-static int (*br_ioctl_hook)(struct net *net, unsigned int cmd,
+static int (*br_ioctl_hook)(struct net *net, struct net_bridge *br,
+			    unsigned int cmd, struct ifreq *ifr,
 			    void __user *uarg);
 
-void brioctl_set(int (*hook)(struct net *net, unsigned int cmd,
+void brioctl_set(int (*hook)(struct net *net, struct net_bridge *br,
+			     unsigned int cmd, struct ifreq *ifr,
 			     void __user *uarg))
 {
 	mutex_lock(&br_ioctl_mutex);
@@ -1150,7 +1152,8 @@ void brioctl_set(int (*hook)(struct net *net, unsigned int cmd,
 }
 EXPORT_SYMBOL(brioctl_set);
 
-int br_ioctl_call(struct net *net, unsigned int cmd, void __user *uarg)
+int br_ioctl_call(struct net *net, struct net_bridge *br, unsigned int cmd,
+		  struct ifreq *ifr, void __user *uarg)
 {
 	int err = -ENOPKG;
 
@@ -1159,7 +1162,7 @@ int br_ioctl_call(struct net *net, unsigned int cmd, void __user *uarg)
 
 	mutex_lock(&br_ioctl_mutex);
 	if (br_ioctl_hook)
-		err = br_ioctl_hook(net, cmd, uarg);
+		err = br_ioctl_hook(net, br, cmd, ifr, uarg);
 	mutex_unlock(&br_ioctl_mutex);
 
 	return err;
@@ -1258,7 +1261,7 @@ static long sock_ioctl(struct file *file, unsigned cmd, unsigned long arg)
 		case SIOCBRDELBR:
 		case SIOCBRADDIF:
 		case SIOCBRDELIF:
-			err = br_ioctl_call(net, cmd, argp);
+			err = br_ioctl_call(net, NULL, cmd, NULL, argp);
 			break;
 		case SIOCGIFVLAN:
 		case SIOCSIFVLAN:
-- 
2.49.0

