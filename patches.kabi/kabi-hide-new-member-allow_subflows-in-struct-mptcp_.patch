From: Michal Kubecek <mkubecek@suse.cz>
Date: Thu, 25 Sep 2025 07:50:27 +0200
Subject: kabi: hide new member allow_subflows in struct mptcp_sock
Patch-mainline: Never, kabi workaround
References: CVE-2025-38552 bsc#1248230

Backport of mainline commit 70ca0fbc163d ("mptcp: plug races between
subflow fail and subflow creation") adds a new member allow_subflows into
struct mptcp_sock. This new member is inserted into a 3-byte hole thanks to
32-bit alignment of the next member setsockopt_seq.

Add a build time check that offset of the next member stays the same as in
the original structure layout.

Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
---
 net/mptcp/protocol.h | 5 +++++
 1 file changed, 5 insertions(+)

--- a/net/mptcp/protocol.h
+++ b/net/mptcp/protocol.h
@@ -401,7 +401,9 @@ struct mptcp_sock {
 		u64	rtt_us; /* last maximum rtt of subflows */
 	} rcvq_space;
 	u8		scaling_ratio;
+#ifndef __GENKSYMS__
 	bool		allow_subflows;
+#endif
 
 	u32 setsockopt_seq;
 	char		ca_name[TCP_CA_NAME_MAX];
@@ -412,6 +414,9 @@ struct mptcp_sock {
  */
 suse_kabi_static_assert(sizeof(struct mptcp_sock) == sizeof(struct __orig_mptcp_sock));
 suse_kabi_static_assert(offsetof(struct mptcp_sock, last_snd) == offsetof(struct __orig_mptcp_sock, last_snd));
+suse_kabi_static_assert(offsetof(struct mptcp_sock, setsockopt_seq) ==
+			offsetof(struct __orig_mptcp_sock, setsockopt_seq));
+
 
 #define mptcp_data_lock(sk) spin_lock_bh(&(sk)->sk_lock.slock)
 #define mptcp_data_unlock(sk) spin_unlock_bh(&(sk)->sk_lock.slock)
