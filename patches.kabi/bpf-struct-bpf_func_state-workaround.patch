From: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Subject: kABI: bpf: struct bpf_func_state kABI workaround
Patch-mainline: never, kabi
References: CVE-2024-47703 bsc#1231946

Upstream commit 8fa4ecd49b81 "bpf: enforce exact retval range on
subprog/callback exit" replaced "struct tnum callback_ret_range" field in
"struct bpf_func_state" with "struct bpf_retval_range callback_ret_range".
Luckily the new field occupies less space than the previous one; so preserve
kABI simply by using an anonymous union that contains the original field.

Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 include/linux/bpf_verifier.h |    7 +++++++
 1 file changed, 7 insertions(+)

--- a/include/linux/bpf_verifier.h
+++ b/include/linux/bpf_verifier.h
@@ -303,7 +303,14 @@ struct bpf_func_state {
 	 */
 	u32 async_entry_cnt;
 	bool in_callback_fn;
+#ifndef __GENKSYMS__
+	union {
 	struct bpf_retval_range callback_ret_range;
+	struct tnum __unused_callback_ret_range;
+	};
+#else
+	struct tnum callback_ret_range;
+#endif
 	bool in_async_callback_fn;
 
 	/* The following fields should be last. See copy_func_state() */
