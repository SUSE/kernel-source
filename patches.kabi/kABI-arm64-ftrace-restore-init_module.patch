From: "Ivan T. Ivanov" <iivanov@suse.de>
Date: Tue, 16 Sep 2025 06:01:47 +0300
Subject: [PATCH] kABI: arm64: ftrace: Restore init_module behavior
Patch-mainline: Never, kABI workaround
References: git-fixes

Fixes kABI breakage because of:

a7ed7b9d0ebb0 "arm64: ftrace: fix unreachable PLT for ftrace_caller in	init_module with CONFIG_DYNAMIC_FTRACE"

Signed-off-by: "Ivan T. Ivanov" <iivanov@suse.de>
Reviewed-by: Petr Pavlu <petr.pavlu@suse.com>
---
 arch/arm64/include/asm/module.h |    1 -
 arch/arm64/kernel/ftrace.c      |    5 ++++-
 arch/arm64/kernel/module.c      |   11 ++++++++---
 include/linux/module.h          |    6 +++++-
 4 files changed, 17 insertions(+), 6 deletions(-)

--- a/arch/arm64/include/asm/module.h
+++ b/arch/arm64/include/asm/module.h
@@ -19,7 +19,6 @@ struct mod_arch_specific {
 
 	/* for CONFIG_DYNAMIC_FTRACE */
 	struct plt_entry	*ftrace_trampolines;
-	struct plt_entry	*init_ftrace_trampolines;
 };
 
 u64 module_emit_plt_entry(struct module *mod, Elf64_Shdr *sechdrs,
--- a/arch/arm64/kernel/ftrace.c
+++ b/arch/arm64/kernel/ftrace.c
@@ -201,12 +201,15 @@ static struct plt_entry *get_ftrace_plt(
 	struct plt_entry *plt = NULL;
 
 	if (within_module_mem_type(addr, mod, MOD_INIT_TEXT))
-		plt = mod->arch.init_ftrace_trampolines;
+		plt = mod->arch_init_ftrace_trampolines;
 	else if (within_module_mem_type(addr, mod, MOD_TEXT))
 		plt = mod->arch.ftrace_trampolines;
 	else
 		return NULL;
 
+	if (!plt)
+		return NULL;
+
 	return &plt[FTRACE_PLT_IDX];
 #else
 	return NULL;
--- a/arch/arm64/kernel/module.c
+++ b/arch/arm64/kernel/module.c
@@ -454,15 +454,20 @@ static int module_init_ftrace_plt(const
 
 	mod->arch.ftrace_trampolines = plts;
 
+	mod->arch_init_ftrace_trampolines = NULL;
+
 	s = find_section(hdr, sechdrs, ".init.text.ftrace_trampoline");
-	if (!s)
-		return -ENOEXEC;
+	if (!s) {
+		pr_warn("%s: module is missing the section .init.text.ftrace_trampoline. Please rebuild the module against the latest kernel sources\n",
+			module_name(mod));
+		return 0;
+	}
 
 	plts = (void *)s->sh_addr;
 
 	__init_plt(&plts[FTRACE_PLT_IDX], FTRACE_ADDR);
 
-	mod->arch.init_ftrace_trampolines = plts;
+	mod->arch_init_ftrace_trampolines = plts;
 
 #endif
 	return 0;
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -601,7 +601,11 @@ struct module {
 #ifdef CONFIG_DYNAMIC_DEBUG_CORE
 	struct _ddebug_info dyndbg_info;
 #endif
-	void *suse_kabi_padding;
+#ifndef __GENKSYMS__
+	void *arch_init_ftrace_trampolines;
+#else
+ 	void *suse_kabi_padding;
+#endif
 } ____cacheline_aligned __randomize_layout;
 #ifndef MODULE_ARCH_INIT
 #define MODULE_ARCH_INIT {}
