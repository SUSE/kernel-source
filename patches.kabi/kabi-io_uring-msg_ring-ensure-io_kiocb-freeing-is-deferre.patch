From: Gabriel Krisman Bertazi <krisman@suse.de>
Subject: kABI: io_uring: msg_ring ensure io_kiocb freeing is deferred
Patch-mainline: Never, kABI workaround
references:  CVE-2025-38453 bsc#1247234

rcu_head is added by commit fc582cd26e88 ("io_uring/msg_ring: ensure
io_kiocb freeing is deferred for RCU") and upstream it also shares the
memory region with hlist_node.  In addition, hash_node and rcu_head have
the same size, so no memory layout changes are expected.

Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>

---
 include/linux/io_uring_types.h |    5 +++++
 1 file changed, 5 insertions(+)

--- a/include/linux/io_uring_types.h
+++ b/include/linux/io_uring_types.h
@@ -642,11 +642,16 @@ struct io_kiocb {
 	bool				cancel_seq_set;
 	struct io_task_work		io_task_work;
 	/* for polled requests, i.e. IORING_OP_POLL_ADD and async armed poll */
+#ifndef __GENKSYMS__
 	union {
 		struct hlist_node		hash_node;
 		/* for private io_kiocb freeing */
 		struct rcu_head 		rcu_head;
 	};
+#else
+	struct hlist_node		hash_node;
+#endif
+
 	/* internal polling, see IORING_FEAT_FAST_POLL */
 	struct async_poll		*apoll;
 	/* opcode allocated if it needs to store data for async defer */
