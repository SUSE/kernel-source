From b02df24dfdfd2fa8d52b7d2a0af3cb1058263e55 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Tue, 8 Jul 2025 13:41:41 +0200
References: git-fixes
Patch-mainline: Never (kABI fixup)
Subject: [PATCH] struct ucsi_operations: use padding for new operation

Introducing a structure of private operations.

Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/usb/typec/ucsi/ucsi.c |   10 ++++++----
 drivers/usb/typec/ucsi/ucsi.h |   13 ++++++++++---
 2 files changed, 16 insertions(+), 7 deletions(-)

--- a/drivers/usb/typec/ucsi/ucsi.c
+++ b/drivers/usb/typec/ucsi/ucsi.c
@@ -942,8 +942,9 @@ static void ucsi_handle_connector_change
 
 	trace_ucsi_connector_change(con->num, &con->status);
 
-	if (ucsi->ops->connector_status)
-		ucsi->ops->connector_status(con);
+	if (ucsi->ops->suse_operations)
+		if (ucsi->ops->suse_operations->connector_status)
+			ucsi->ops->suse_operations->connector_status(con);
 
 	role = !!(con->status.flags & UCSI_CONSTAT_PWR_DIR);
 
@@ -1335,8 +1336,9 @@ static int ucsi_register_port(struct ucs
 	}
 	ret = 0; /* ucsi_send_command() returns length on success */
 
-	if (ucsi->ops->connector_status)
-		ucsi->ops->connector_status(con);
+	if (ucsi->ops->suse_operations)
+		if (ucsi->ops->suse_operations->connector_status)
+			ucsi->ops->suse_operations->connector_status(con);
 
 	switch (UCSI_CONSTAT_PARTNER_TYPE(con->status.flags)) {
 	case UCSI_CONSTAT_PARTNER_TYPE_UFP:
--- a/drivers/usb/typec/ucsi/ucsi.h
+++ b/drivers/usb/typec/ucsi/ucsi.h
@@ -67,6 +67,12 @@ struct dentry;
  * Command Completion Event from the PPM before returning, and @async_write must
  * return immediately after sending the data to the PPM.
  */
+
+struct ucsi_operations_suse {
+	void (*connector_status)(struct ucsi_connector *con);
+	void (*update_connector)(struct ucsi_connector *con);
+};
+
 struct ucsi_operations {
 	int (*read)(struct ucsi *ucsi, unsigned int offset,
 		    void *val, size_t val_len);
@@ -76,10 +82,11 @@ struct ucsi_operations {
 			   const void *val, size_t val_len);
 	bool (*update_altmodes)(struct ucsi *ucsi, struct ucsi_altmode *orig,
 				struct ucsi_altmode *updated);
-	void (*update_connector)(struct ucsi_connector *con);
-	void (*connector_status)(struct ucsi_connector *con);
-
+#ifndef __GENKSYMS__
+	struct ucsi_operations_suse *suse_operations;
+#else
 	void *suse_kabi_padding;
+#endif
 };
 
 struct ucsi *ucsi_create(struct device *dev, const struct ucsi_operations *ops);
