From b82590a01aad39aaf62db90305afc48272494037 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Tue, 13 Feb 2024 13:55:00 +0100
Subject: [PATCH] usb: cdns: readd old API
Patch-mainline: Never (kABI fixup)
References: git-fixes

Rename the new sane API and readd the old with the old name.

Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/usb/cdns3/cdns3-plat.c |    2 +-
 drivers/usb/cdns3/cdnsp-pci.c  |    2 +-
 drivers/usb/cdns3/core.c       |   15 +++++++++++++--
 drivers/usb/cdns3/core.h       |    8 ++++++--
 4 files changed, 21 insertions(+), 6 deletions(-)

--- a/drivers/usb/cdns3/cdns3-plat.c
+++ b/drivers/usb/cdns3/cdns3-plat.c
@@ -256,7 +256,7 @@ static int cdns3_controller_resume(struc
 	cdns3_set_platform_suspend(cdns->dev, false, false);
 
 	spin_lock_irqsave(&cdns->lock, flags);
-	cdns_resume(cdns);
+	cdns_resume_suse(cdns);
 	cdns->in_lpm = false;
 	spin_unlock_irqrestore(&cdns->lock, flags);
 	cdns_set_active(cdns, !PMSG_IS_AUTO(msg));
--- a/drivers/usb/cdns3/cdnsp-pci.c
+++ b/drivers/usb/cdns3/cdnsp-pci.c
@@ -210,7 +210,7 @@ static int __maybe_unused cdnsp_pci_resu
 	int ret;
 
 	spin_lock_irqsave(&cdns->lock, flags);
-	ret = cdns_resume(cdns);
+	ret = cdns_resume_suse(cdns);
 	spin_unlock_irqrestore(&cdns->lock, flags);
 	cdns_set_active(cdns, 1);
 
--- a/drivers/usb/cdns3/core.c
+++ b/drivers/usb/cdns3/core.c
@@ -522,7 +522,7 @@ int cdns_suspend(struct cdns *cdns)
 }
 EXPORT_SYMBOL_GPL(cdns_suspend);
 
-int cdns_resume(struct cdns *cdns)
+int cdns_resume_suse(struct cdns *cdns)
 {
 	enum usb_role real_role;
 	bool role_changed = false;
@@ -557,7 +557,7 @@ int cdns_resume(struct cdns *cdns)
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(cdns_resume);
+EXPORT_SYMBOL_GPL(cdns_resume_suse);
 
 void cdns_set_active(struct cdns *cdns, u8 set_active)
 {
@@ -572,6 +572,17 @@ void cdns_set_active(struct cdns *cdns,
 	return;
 }
 EXPORT_SYMBOL_GPL(cdns_set_active);
+
+int cdns_resume(struct cdns *cdns, u8 set_active)
+{
+	int r;
+
+	r = cdns_resume_suse(cdns);
+	cdns_set_active(cdns, set_active);
+
+	return r;
+}
+EXPORT_SYMBOL_GPL(cdns_resume);
 #endif /* CONFIG_PM_SLEEP */
 
 MODULE_AUTHOR("Peter Chen <peter.chen@nxp.com>");
--- a/drivers/usb/cdns3/core.h
+++ b/drivers/usb/cdns3/core.h
@@ -125,11 +125,15 @@ int cdns_init(struct cdns *cdns);
 int cdns_remove(struct cdns *cdns);
 
 #ifdef CONFIG_PM_SLEEP
-int cdns_resume(struct cdns *cdns);
+int cdns_resume_suse(struct cdns *cdns);
 int cdns_suspend(struct cdns *cdns);
 void cdns_set_active(struct cdns *cdns, u8 set_active);
+
+int cdns_resume(struct cdns *cdns, u8 set_active);
 #else /* CONFIG_PM_SLEEP */
-static inline int cdns_resume(struct cdns *cdns)
+static inline int cdns_resume_suse(struct cdns *cdns)
+{ return 0; }
+static inline int cdns_resume(struct cdns *cdns, u8 set_active)
 { return 0; }
 static inline void cdns_set_active(struct cdns *cdns, u8 set_active) { }
 static inline int cdns_suspend(struct cdns *cdns)
