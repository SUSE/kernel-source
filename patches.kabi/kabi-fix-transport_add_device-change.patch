From: Lee Duncan <lduncan@suse.com>
Date: Tue 15 Nov 2022 11:38:36 AM PST
Subject: kabi: fix transport_add_device change
Patch-mainline: Never, kabi fixup
References: git-fixes

Hide the fact that transport_add_device() now returns a value,
since callers can continue to ignore the results, if they wish.
---
 drivers/base/transport_class.c  |    9 +++++++++
 include/linux/transport_class.h |    9 +++++++++
 2 files changed, 18 insertions(+)

--- a/drivers/base/transport_class.c
+++ b/drivers/base/transport_class.c
@@ -176,12 +176,21 @@ static int transport_add_class_device(st
  * routine is simply a trigger point used to add the device to the
  * system and register attributes for it.
  */
+#ifndef __GENKSYMS__
 int transport_add_device(struct device *dev)
 {
 	return attribute_container_device_trigger_safe(dev,
 					transport_add_class_device,
 					transport_remove_classdev);
 }
+#else	/* __GENKSYMS__ */
+void transport_add_device(struct device *dev)
+{
+	attribute_container_device_trigger_safe(dev,
+					transport_add_class_device,
+					transport_remove_classdev);
+}
+#endif	/* __GENKSYMS__ */
 EXPORT_SYMBOL_GPL(transport_add_device);
 
 static int transport_configure(struct attribute_container *cont,
--- a/include/linux/transport_class.h
+++ b/include/linux/transport_class.h
@@ -62,7 +62,11 @@ struct transport_container {
 	container_of(x, struct transport_container, ac)
 
 void transport_remove_device(struct device *);
+#ifndef __GENKSYMS__
 int transport_add_device(struct device *);
+#else
+void transport_add_device(struct device *);
+#endif
 void transport_setup_device(struct device *);
 void transport_configure_device(struct device *);
 void transport_destroy_device(struct device *);
@@ -71,7 +75,12 @@ static inline int
 transport_register_device(struct device *dev)
 {
 	transport_setup_device(dev);
+#ifndef __GENKSYMS__
 	return transport_add_device(dev);
+#else
+	transport_add_device(dev);
+	return 0;
+#endif
 }
 
 static inline void
