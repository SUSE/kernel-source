From: NeilBrown <neilb@suse.de>
Subject: kabi-fix for NFS: Fix another fsync() issue after a server reboot
Patch-mainline: Never, kabi
References: git-fixes, bsc#1217670

Union the new field - which applies to regular files only - with a field
that applies only to directories.

This requires we initialise rmdir_sem every time an inode is
allocated.  This means redirtied_pages isn't necessarily zero, but that
doesn't matter.  It is only changesd that matter.

---
 fs/nfs/inode.c         |    2 +-
 include/linux/nfs_fs.h |    8 +++++++-
 2 files changed, 8 insertions(+), 2 deletions(-)

--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@ -2330,6 +2330,7 @@ struct inode *nfs_alloc_inode(struct sup
 	nfsi->flags = 0UL;
 	nfsi->cache_validity = 0UL;
 	nfsi->ooo = NULL;
+	init_rwsem(&nfsi->rmdir_sem);
 #if IS_ENABLED(CONFIG_NFS_V4)
 	nfsi->nfs4_acl = NULL;
 #endif /* CONFIG_NFS_V4 */
@@ -2370,7 +2371,6 @@ static void init_once(void *foo)
 	atomic_long_set(&nfsi->nrequests, 0);
 	atomic_long_set(&nfsi->commit_info.ncommit, 0);
 	atomic_set(&nfsi->commit_info.rpcs_out, 0);
-	init_rwsem(&nfsi->rmdir_sem);
 	mutex_init(&nfsi->commit_mutex);
 	nfs4_init_once(nfsi);
 	nfsi->cache_change_attribute = 0;
--- a/include/linux/nfs_fs.h
+++ b/include/linux/nfs_fs.h
@@ -177,7 +177,6 @@ struct nfs_inode {
 	__be32			cookieverf[NFS_DIR_VERIFIER_SIZE];
 
 	atomic_long_t		nrequests;
-	atomic_long_t	redirtied_pages;
 	struct nfs_mds_commit_info commit_info;
 
 	/* Open contexts for shared mmap writes */
@@ -185,7 +184,14 @@ struct nfs_inode {
 
 	/* Readers: in-flight sillydelete RPC calls */
 	/* Writers: rmdir */
+#ifndef __GENKSYMS__
+	union {
+#endif
 	struct rw_semaphore	rmdir_sem;
+#ifndef __GENKSYMS__
+	atomic_long_t	redirtied_pages;
+	};
+#endif
 	struct mutex		commit_mutex;
 
 	/* Keep track of out-of-order replies.
