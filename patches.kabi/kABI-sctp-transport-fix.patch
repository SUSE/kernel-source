From: Pedro Falcato <pfalcato@suse.de>
Subject: kABI fix for sctp: detect and prevent references to a freed transport in sendmsg
Patch-mainline: Never, kABI workaround
References: git-fixes

Upstream commit f1a69a940de58b16e8249dff26f74c8cc59b32be
("sctp: detect and prevent references to a freed transport in sendmsg")
changed the layout of struct sctp_transport. Since we have a hole after
the bitfields, use that.

Signed-off-by: Pedro Falcato <pfalcato@suse.de>

---
 include/net/sctp/structs.h |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

--- a/include/net/sctp/structs.h
+++ b/include/net/sctp/structs.h
@@ -778,7 +778,6 @@ struct sctp_transport {
 
 	/* Reference counting. */
 	refcount_t refcnt;
-	__u32	dead:1,
 		/* RTO-Pending : A flag used to track if one of the DATA
 		 *		chunks sent to this address is currently being
 		 *		used to compute a RTT. If this flag is 0,
@@ -788,7 +787,7 @@ struct sctp_transport {
 		 *		calculation completes (i.e. the DATA chunk
 		 *		is SACK'd) clear this flag.
 		 */
-		rto_pending:1,
+	__u32   rto_pending:1,
 
 		/*
 		 * hb_sent : a flag that signals that we have a pending
@@ -803,6 +802,10 @@ struct sctp_transport {
 
 		/* Has this transport moved the ctsn since we last sacked */
 		sack_generation:1;
+#ifndef __GENKSYMS__
+	__u32	dead:1;
+#endif
+
 	u32 dst_cookie;
 
 	struct flowi fl;
