From fc4a8c6e36d26e3a491fc898c97a7781fa6bdd38 Mon Sep 17 00:00:00 2001
From: Nicolas Morey <nmorey@suse.com>
Date: Mon, 17 Feb 2025 14:49:05 +0100
Subject: [PATCH 1/1] kABI fix for mptcp: handle consistently DSS corruption
Patch-mainline: Never, kABI workaround
References: CVE-2024-50185 bsc#1233109

This patch patches.suse/mptcp-handle-consistently-DSS-corruption.patch
introduces 2 new values to to the MPTCP MIB enum causing mptcp_mib struct to
grow larger.

But:
- mpctcp_mib is only ever referenced as a pointer in netns_mib
- Its allocation is handled by the mpctcp module
- The struct and enum definition are only available internally to mptcp
  so no outside module should be accessing it directly.

Signed-off-by: Nicolas Morey <nmorey@suse.com>
Acked-by: Nicolas Morey <nmorey@suse.com>
---
 net/mptcp/mib.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/net/mptcp/mib.h b/net/mptcp/mib.h
index 7ccd1bcc3be6..c5a6f4fb09b6 100644
--- a/net/mptcp/mib.h
+++ b/net/mptcp/mib.h
@@ -17,8 +17,10 @@ enum linux_mptcp_mib_field {
 	MPTCP_MIB_JOINACKRX,		/* Received an ACK + MP_JOIN */
 	MPTCP_MIB_JOINACKMAC,		/* HMAC was wrong on ACK + MP_JOIN */
 	MPTCP_MIB_DSSNOMATCH,		/* Received a new mapping that did not match the previous one */
+#ifndef __GENKSYMS__
 	MPTCP_MIB_DSSCORRUPTIONFALLBACK,/* DSS corruption detected, fallback */
 	MPTCP_MIB_DSSCORRUPTIONRESET,	/* DSS corruption detected, MPJ subflow reset */
+#endif
 	MPTCP_MIB_INFINITEMAPTX,	/* Sent an infinite mapping */
 	MPTCP_MIB_INFINITEMAPRX,	/* Received an infinite mapping */
 	MPTCP_MIB_DSSTCPMISMATCH,	/* DSS-mapping did not map with TCP's sequence numbers */
-- 
2.45.2.1.g5c866cf9507b

