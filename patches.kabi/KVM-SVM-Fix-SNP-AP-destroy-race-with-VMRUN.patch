From: Juergen Gross <jgross@suse.com>
Subject: kABI fix after KVM: SVM: Fix SNP AP destroy race with VMRUN
Patch-mainline: Never, kABI workaround
References: git-fixes

Keep kvm_vcpu_kick() as an exported function instead of an inline
in order to preserve kABI.

Signed-off-by: Juergen Gross <jgross@suse.com>
---
diff --git a/include/linux/kvm_host.h b/include/linux/kvm_host.h
--- a/include/linux/kvm_host.h
+++ b/include/linux/kvm_host.h
@@ -1505,14 +1505,10 @@ bool kvm_vcpu_block(struct kvm_vcpu *vcpu);
 void kvm_arch_vcpu_blocking(struct kvm_vcpu *vcpu);
 void kvm_arch_vcpu_unblocking(struct kvm_vcpu *vcpu);
 bool kvm_vcpu_wake_up(struct kvm_vcpu *vcpu);
+void kvm_vcpu_kick(struct kvm_vcpu *vcpu);
 
 #ifndef CONFIG_S390
 void __kvm_vcpu_kick(struct kvm_vcpu *vcpu, bool wait);
-
-static inline void kvm_vcpu_kick(struct kvm_vcpu *vcpu)
-{
-	__kvm_vcpu_kick(vcpu, false);
-}
 #endif
 
 int kvm_vcpu_yield_to(struct kvm_vcpu *target);
diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
--- a/virt/kvm/kvm_main.c
+++ b/virt/kvm/kvm_main.c
@@ -3770,6 +3770,12 @@ void __kvm_vcpu_kick(struct kvm_vcpu *vcpu, bool wait)
 	put_cpu();
 }
 EXPORT_SYMBOL_GPL(__kvm_vcpu_kick);
+
+void kvm_vcpu_kick(struct kvm_vcpu *vcpu)
+{
+	__kvm_vcpu_kick(vcpu, false);
+}
+EXPORT_SYMBOL_GPL(kvm_vcpu_kick);
 #endif /* !CONFIG_S390 */
 
 int kvm_vcpu_yield_to(struct kvm_vcpu *target)
