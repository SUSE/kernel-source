From: Michal Koutný <mkoutny@suse.com>
Date: Thu, 13 Jun 2024 19:12:33 +0200
Subject: [PATCH] cgroup: preserve KABI of cgroup_root
Patch-mainline: Never, kABI workaround
References: bsc#1222254

struct cgroup_root is only created by cgroup core code (v1) or
statically (v2) but there may be some users who would read its data.
Preserve KABI by moving the the member at the end of the structure.

Cannot use kfree_rcu() because of cgroup_root.rcu offset.

Signed-off-by: Michal Koutný <mkoutny@suse.com>
---
 include/linux/cgroup-defs.h |    4 +++-
 kernel/cgroup/cgroup.c      |    9 ++++++++-
 2 files changed, 11 insertions(+), 2 deletions(-)

--- a/include/linux/cgroup-defs.h
+++ b/include/linux/cgroup-defs.h
@@ -520,7 +520,6 @@ struct cgroup_root {
 
 	/* A list running through the active hierarchies */
 	struct list_head root_list;
-	struct rcu_head rcu;
 
 	/* Hierarchy-specific flags */
 	unsigned int flags;
@@ -530,6 +529,9 @@ struct cgroup_root {
 
 	/* The name for this hierarchy - may be empty */
 	char name[MAX_CGROUP_ROOT_NAMELEN];
+#ifndef __GENKSYMS__
+	struct rcu_head rcu;
+#endif
 };
 
 /*
--- a/kernel/cgroup/cgroup.c
+++ b/kernel/cgroup/cgroup.c
@@ -1331,9 +1331,15 @@ static void cgroup_exit_root_id(struct c
 	idr_remove(&cgroup_hierarchy_idr, root->hierarchy_id);
 }
 
+static void cgroup_root_free_rcu(struct rcu_head *rcu)
+{
+	struct cgroup_root *root = container_of(rcu, struct cgroup_root, rcu);
+	kfree(root);
+}
+
 void cgroup_free_root(struct cgroup_root *root)
 {
-	kfree_rcu(root, rcu);
+	call_rcu(&root->rcu, cgroup_root_free_rcu);
 }
 
 static void cgroup_destroy_root(struct cgroup_root *root)
