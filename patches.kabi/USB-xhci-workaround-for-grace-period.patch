From f8a71a2396abe2667ee7284965a6e53835827b66 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Tue, 23 Jan 2024 16:51:07 +0100
Subject: [PATCH] USB: xhci: workaround for grace period
Patch-mainline: Never (kABI fixup)
References: git-fixes

make it a global variable. The worse that can happen
is in a system with multiple HCs that a suspension
is delayed.

Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/usb/host/xhci-hub.c | 8 +++++---
 drivers/usb/host/xhci.c     | 4 +++-
 drivers/usb/host/xhci.h     | 1 -
 3 files changed, 8 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/host/xhci-hub.c b/drivers/usb/host/xhci-hub.c
index 4619d5e89..3db4b97d7 100644
--- a/drivers/usb/host/xhci-hub.c
+++ b/drivers/usb/host/xhci-hub.c
@@ -16,6 +16,8 @@
 #include "xhci.h"
 #include "xhci-trace.h"
 
+unsigned long suse_run_graceperiod = 0;
+
 #define	PORT_WAKE_BITS	(PORT_WKOC_E | PORT_WKDISC_E | PORT_WKCONN_E)
 #define	PORT_RWC_BITS	(PORT_CSC | PORT_PEC | PORT_WRC | PORT_OCC | \
 			 PORT_RC | PORT_PLC | PORT_PE)
@@ -1652,11 +1654,11 @@ int xhci_hub_status_data(struct usb_hcd *hcd, char *buf)
 	 * SS devices are only visible to roothub after link training completes.
 	 * Keep polling roothubs for a grace period after xHC start
 	 */
-	if (xhci->run_graceperiod) {
-		if (time_before(jiffies, xhci->run_graceperiod))
+	if (suse_run_graceperiod) {
+		if (time_before(jiffies, suse_run_graceperiod))
 			status = 1;
 		else
-			xhci->run_graceperiod = 0;
+			suse_run_graceperiod = 0;
 	}
 
 	mask = PORT_CSC | PORT_PEC | PORT_OCC | PORT_PLC | PORT_WRC | PORT_CEC;
diff --git a/drivers/usb/host/xhci.c b/drivers/usb/host/xhci.c
index 18efa9d2d..7c3eeb374 100644
--- a/drivers/usb/host/xhci.c
+++ b/drivers/usb/host/xhci.c
@@ -40,6 +40,8 @@ static unsigned long long quirks;
 module_param(quirks, ullong, S_IRUGO);
 MODULE_PARM_DESC(quirks, "Bit flags for quirks to be enabled as default");
 
+extern unsigned long suse_run_graceperiod;
+
 static bool td_on_ring(struct xhci_td *td, struct xhci_ring *ring)
 {
 	struct xhci_segment *seg = ring->first_seg;
@@ -154,7 +156,7 @@ int xhci_start(struct xhci_hcd *xhci)
 	if (!ret) {
 		/* clear state flags. Including dying, halted or removing */
 		xhci->xhc_state = 0;
-		xhci->run_graceperiod = jiffies + msecs_to_jiffies(500);
+		suse_run_graceperiod = jiffies + msecs_to_jiffies(500);
 	}
 
 	return ret;
diff --git a/drivers/usb/host/xhci.h b/drivers/usb/host/xhci.h
index 7987ee39f..f5064d975 100644
--- a/drivers/usb/host/xhci.h
+++ b/drivers/usb/host/xhci.h
@@ -1824,7 +1824,6 @@ struct xhci_hcd {
 
 	/* Host controller watchdog timer structures */
 	unsigned int		xhc_state;
-	unsigned long		run_graceperiod;
 	struct s3_save		s3;
 /* Host controller is dying - not responding to commands. "I'm not dead yet!"
  *
-- 
2.43.0

