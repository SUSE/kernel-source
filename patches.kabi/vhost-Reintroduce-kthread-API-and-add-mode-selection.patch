From: Juergen Gross <jgross@suse.com>
Subject: kABI fix after vhost: Reintroduce kthread API and add mode selection
Patch-mainline: Never, kABI workaround
References: git-fixes

In vhost.c hide the newly included cgroup.h from GENKSYMS.

In struct vhost_worker move the added members to the end of the struct.
The struct has aan allocation function, so making it larger is no kABI
relevant problem.

Hide the new member in struct vhost_dev from GENKSYSMS. It is located
in a padding hole, so no problem either.

Signed-off-by: Juergen Gross <jgross@suse.com>
---

diff --git a/drivers/vhost/vhost.c b/drivers/vhost/vhost.c
--- a/drivers/vhost/vhost.c
+++ b/drivers/vhost/vhost.c
@@ -22,7 +22,9 @@
 #include <linux/slab.h>
 #include <linux/vmalloc.h>
 #include <linux/kthread.h>
+#ifndef __GENKSYMS__
 #include <linux/cgroup.h>
+#endif
 #include <linux/module.h>
 #include <linux/sort.h>
 #include <linux/sched/mm.h>
--- a/drivers/vhost/vhost.h
+++ b/drivers/vhost/vhost.h
@@ -37,7 +37,6 @@
 };
 
 struct vhost_worker {
-	struct task_struct *kthread_task;
 	struct vhost_task	*vtsk;
 	struct vhost_dev	*dev;
 	/* Used to serialize device wide flushing with worker swapping. */
@@ -47,7 +46,10 @@
 	u32			id;
 	int			attachment_cnt;
 	bool			killed;
+#ifndef __GENKSYMS__
 	const struct vhost_worker_ops *ops;
+	struct task_struct *kthread_task;
+#endif
 };
 
 /* Poll a file (eventfd or socket) */
@@ -197,7 +199,9 @@
 	 * here we use true as default value.
 	 * The default value is set by fork_from_owner_default
 	 */
+#ifndef __GENKSYMS__
 	bool fork_owner;
+#endif
 	int (*msg_handler)(struct vhost_dev *dev, u32 asid,
 			   struct vhost_iotlb_msg *msg);
 };
