From: Takashi Iwai <tiwai@suse.de>
Subject: partial revert of the commit e7bc47b16622 for kABI workaround
Patch-mainline: Never, kABI workaround
References: bsc#1226502

Revert the commit e7bc47b16622 backport
  patches.suse/s390-Stop-using-weak-symbols-for-__iowrite64_copy.patch
partially for making kABI happier, in conjunction with another kABI
workaround patch
  patches.kabi/kabi-Use-__iowriteXX_copy_inlined-for-in-kernel-modu.patch

Only the additional definition of __iowrite64_copy() in
arch/s390/include/asm/io.h is kept and the rest are reverted.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 arch/s390/pci/pci.c |    6 ++++++
 include/linux/io.h  |    3 ---
 lib/iomap_copy.c    |    7 ++++---
 3 files changed, 10 insertions(+), 6 deletions(-)

--- a/arch/s390/pci/pci.c
+++ b/arch/s390/pci/pci.c
@@ -249,6 +249,12 @@ resource_size_t pcibios_align_resource(v
 	return 0;
 }
 
+/* combine single writes by using store-block insn */
+void __iowrite64_copy(void __iomem *to, const void *from, size_t count)
+{
+	zpci_memcpy_toio(to, from, count * 8);
+}
+
 static void __iomem *__ioremap(phys_addr_t addr, size_t size, pgprot_t prot)
 {
 	unsigned long offset, vaddr;
--- a/include/linux/io.h
+++ b/include/linux/io.h
@@ -18,10 +18,7 @@ struct resource;
 
 __visible void __iowrite32_copy(void __iomem *to, const void *from, size_t count);
 void __ioread32_copy(void *to, const void __iomem *from, size_t count);
-
-#ifndef __iowrite64_copy
 void __iowrite64_copy(void __iomem *to, const void *from, size_t count);
-#endif
 
 #ifdef CONFIG_MMU
 int ioremap_page_range(unsigned long addr, unsigned long end,
--- a/lib/iomap_copy.c
+++ b/lib/iomap_copy.c
@@ -60,8 +60,9 @@ EXPORT_SYMBOL_GPL(__ioread32_copy);
  * time.  Order of access is not guaranteed, nor is a memory barrier
  * performed afterwards.
  */
-#ifndef __iowrite64_copy
-void __iowrite64_copy(void __iomem *to, const void *from, size_t count)
+void __attribute__((weak)) __iowrite64_copy(void __iomem *to,
+					    const void *from,
+					    size_t count)
 {
 #ifdef CONFIG_64BIT
 	u64 __iomem *dst = to;
@@ -74,5 +75,5 @@ void __iowrite64_copy(void __iomem *to,
 	__iowrite32_copy(to, from, count * 2);
 #endif
 }
+
 EXPORT_SYMBOL_GPL(__iowrite64_copy);
-#endif
