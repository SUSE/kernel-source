From: Steffen Jaeckel <sjaeckel@suse.de>
Subject: kABI fix for net: vlan: fix VLAN 0 refcount imbalance of toggling
 filtering during runtime
Patch-mainline: Never, kABI workaround
References: CVE-2025-38470 bsc#1247288

Upstream commit 579d4f9ca9a9 ("net: vlan: fix VLAN 0 refcount
imbalance of toggling filtering during runtime") added a new field to
`struct vlan_info`. It is luckily placed in a hole, so we can simply
hide it from the kABI checker.

```
        unsigned int               nr_vids;              /*   176     4 */

        /* XXX 4 bytes hole, try to pack */

        struct callback_head       rcu __attribute__((__aligned__(8))); /*   184    16 */
```

Signed-off-by: Steffen Jaeckel <sjaeckel@suse.de>
Reviewed-by: Petr Pavlu <petr.pavlu@suse.com>
---
 net/8021q/vlan.h | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/net/8021q/vlan.h b/net/8021q/vlan.h
index c7ffe591d5936..843cb62edd8d7 100644
--- a/net/8021q/vlan.h
+++ b/net/8021q/vlan.h
@@ -33,10 +33,28 @@ struct vlan_info {
 	struct vlan_group	grp;
 	struct list_head	vid_list;
 	unsigned int		nr_vids;
+#ifndef __GENKSYMS__
 	bool			auto_vid0;
+#endif
 	struct rcu_head		rcu;
 };
 
+struct __orig_vlan_info {
+	struct net_device	*real_dev; /* The ethernet(like) device
+					    * the vlan is attached to.
+					    */
+	struct vlan_group	grp;
+	struct list_head	vid_list;
+	unsigned int		nr_vids;
+	struct rcu_head		rcu;
+};
+
+suse_kabi_static_assert(sizeof(struct vlan_info) == sizeof(struct __orig_vlan_info));
+suse_kabi_static_assert(offsetof(struct vlan_info, nr_vids) ==
+                        offsetof(struct __orig_vlan_info, nr_vids));
+suse_kabi_static_assert(offsetof(struct vlan_info, rcu) ==
+                        offsetof(struct __orig_vlan_info, rcu));
+
 static inline int vlan_proto_idx(__be16 proto)
 {
 	switch (proto) {
-- 
2.50.1

