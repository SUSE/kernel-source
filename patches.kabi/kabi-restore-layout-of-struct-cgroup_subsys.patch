From: Michal Koutný <mkoutny@suse.com
Date: Thue, 26 Jun 2025 13:11:31 +0200
Subject: kabi: restore layout of struct cgroup_subsys
Patch-mainline: Never, kabi workaround
References: bsc#1241166

(i) 3rd party modules shouldn't implement their own cgroup_subsys (see enum
cgroup_subsys_id). (ii) There may be modules that would access members of
cgroup_subsys (hopefully not). Restore the KABI by moving the new member at the
end of the struct. It is safe to dereference it in
kernel/cgroup/cgroup.c:kill_css because of (i). Only hide it from GENKSYMS.

There might be solution to the original bug w/out introduction of new callback
but it doesn't exist yet.

Link: https://lore.kernel.org/r/Z-60Ec41f8cQayOg@slm.duckdns.org/
Signed-off-by: Michal Koutný <mkoutny@suse.com

---
 include/linux/cgroup-defs.h |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

--- a/include/linux/cgroup-defs.h
+++ b/include/linux/cgroup-defs.h
@@ -718,7 +718,6 @@ struct cgroup_subsys {
 	void (*css_released)(struct cgroup_subsys_state *css);
 	void (*css_free)(struct cgroup_subsys_state *css);
 	void (*css_reset)(struct cgroup_subsys_state *css);
-	void (*css_killed)(struct cgroup_subsys_state *css);
 	void (*css_rstat_flush)(struct cgroup_subsys_state *css, int cpu);
 	int (*css_extra_stat_show)(struct seq_file *seq,
 				   struct cgroup_subsys_state *css);
@@ -798,6 +797,9 @@ struct cgroup_subsys {
 	 * specifies the mask of subsystems that this one depends on.
 	 */
 	unsigned int depends_on;
+#ifndef __GENKSYMS__
+	void (*css_killed)(struct cgroup_subsys_state *css);
+#endif
 };
 
 extern struct percpu_rw_semaphore cgroup_threadgroup_rwsem;
