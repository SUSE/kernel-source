From: Davide Benini <davide.benini@suse.com>
Subject: kABI workaround struct rcu_head and ax25_ptr
Patch-mainline: Never, kABI workaround
References: CVE-2025-21812 bsc#1238471

Patch ax25: rcu protect dev->ax25_ptr introduced a kABI breakage, adding
a `struct rcu_head` in `struct ax25_dev`.

Let's hide it with the standard __GENKSYMS__ trick for kABI compatibility, as
the struct is kmalloced internally in ax25 core itself.

Also, avoid genksyms tool see any change to ax25_ptr

---
 include/linux/netdevice.h |    4 ++++
 include/net/ax25.h        |    2 ++
 2 files changed, 6 insertions(+)

--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2315,7 +2315,11 @@ struct net_device {
 	void 			*atalk_ptr;
 #endif
 #if IS_ENABLED(CONFIG_AX25)
+#ifndef __GENKSYMS__
 	struct ax25_dev	__rcu	*ax25_ptr;
+#else
+	void                    *ax25_ptr;
+#endif
 #endif
 #if IS_ENABLED(CONFIG_CFG80211)
 	struct wireless_dev	*ieee80211_ptr;
--- a/include/net/ax25.h
+++ b/include/net/ax25.h
@@ -229,7 +229,9 @@ typedef struct ax25_dev {
 #endif
 	refcount_t		refcount;
 	bool device_up;
+#ifndef __GENKSYMS__
 	struct rcu_head		rcu;
+#endif
 } ax25_dev;
 
 typedef struct ax25_cb {
