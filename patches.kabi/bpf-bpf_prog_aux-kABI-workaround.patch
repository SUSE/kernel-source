From: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Subject: kABI: bpf: struct bpf_prog_aux kABI workaround
Patch-mainline: never, kabi
References: jsc#PED-6811 bsc#1220251

Commit 19bfcdf9498a "bpf: Relax tracing prog recursive attach rules" added a
attach_tracing_prog field to struct bpf_prog_aux that breaks kABI, which was
backported mainly for the selftest needed by bsc#1220251, but also for adding
a feature that may help with tracing in SLE15-SP6 (jsc#PED-6811).

Workaround the kABI breakge by simply moving the new field to the end of
struct bpf_prog_aux since the structure was always accessed behind a pointer.
(Thus the SUSE-specific wasn't really needed here)

Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 include/linux/bpf.h |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/include/linux/bpf.h
+++ b/include/linux/bpf.h
@@ -1406,7 +1406,6 @@ struct bpf_prog_aux {
 	bool dev_bound; /* Program is bound to the netdev. */
 	bool offload_requested; /* Program is bound and offloaded to the netdev. */
 	bool attach_btf_trace; /* true if attaching to BTF-enabled raw tp */
-	bool attach_tracing_prog; /* true if tracing another tracing program */
 	bool func_proto_unreliable;
 	bool sleepable;
 	bool tail_call_reachable;
@@ -1469,7 +1468,11 @@ struct bpf_prog_aux {
 		struct work_struct work;
 		struct rcu_head	rcu;
 	};
+#ifndef __GENKSYMS__
+	bool attach_tracing_prog; /* true if tracing another tracing program */
+#else
 	void *suse_kabi_padding;
+#endif
 };
 
 struct bpf_prog {
