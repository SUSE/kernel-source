From: NeilBrown <neilb@suse.de>
Subject: kabi fix for sunrpc: add a struct rpc_stats arg to rpc_create_args
Patch-mainline: Never, kabi
References: git-fixes

Move the new field to the end of the struct, hide from kabi, and only
expect it if a new flag is set to confirm the struct has a meaningful
value.

---
 include/linux/sunrpc/clnt.h |    7 ++++++-
 net/sunrpc/clnt.c           |    8 +++++++-
 2 files changed, 13 insertions(+), 2 deletions(-)

--- a/include/linux/sunrpc/clnt.h
+++ b/include/linux/sunrpc/clnt.h
@@ -130,7 +130,6 @@ struct rpc_create_args {
 	const char		*servername;
 	const char		*nodename;
 	const struct rpc_program *program;
-	struct rpc_stat		*stats;
 	u32			prognumber;	/* overrides program->number */
 	u32			version;
 	rpc_authflavor_t	authflavor;
@@ -139,6 +138,10 @@ struct rpc_create_args {
 	char			*client_name;
 	struct svc_xprt		*bc_xprt;	/* NFSv4.1 backchannel */
 	const struct cred	*cred;
+#ifndef __GENKSYMS__
+	/* Only present if RPC_CLNT_CREATE_STATS set */
+	struct rpc_stat		*stats;
+#endif
 };
 
 struct rpc_add_xprt_test {
@@ -162,6 +165,8 @@ struct rpc_add_xprt_test {
 #define RPC_CLNT_CREATE_REUSEPORT	(1UL << 11)
 #define RPC_CLNT_CREATE_CONNECTED	(1UL << 12)
 
+#define RPC_CLNT_CREATE_STATS		(1UL << 20)
+
 struct rpc_clnt *rpc_create(struct rpc_create_args *args);
 struct rpc_clnt	*rpc_bind_new_program(struct rpc_clnt *,
 				const struct rpc_program *, u32);
--- a/net/sunrpc/clnt.c
+++ b/net/sunrpc/clnt.c
@@ -398,7 +398,10 @@ static struct rpc_clnt * rpc_new_client(
 	clnt->cl_maxproc  = version->nrprocs;
 	clnt->cl_prog     = args->prognumber ? : program->number;
 	clnt->cl_vers     = version->number;
-	clnt->cl_stats    = args->stats ? : program->stats;
+	if ((args->flags & RPC_CLNT_CREATE_STATS) && args->stats)
+		clnt->cl_stats    = args->stats;
+	else
+		clnt->cl_stats    = program->stats;
 	clnt->cl_metrics  = rpc_alloc_iostats(clnt);
 	rpc_init_pipe_dir_head(&clnt->cl_pipedir_objects);
 	err = -ENOMEM;
@@ -677,6 +680,7 @@ struct rpc_clnt *rpc_clone_client(struct
 		.authflavor	= clnt->cl_auth->au_flavor,
 		.cred		= clnt->cl_cred,
 		.stats		= clnt->cl_stats,
+		.flags		= RPC_CLNT_CREATE_STATS,
 	};
 	return __rpc_clone_client(&args, clnt);
 }
@@ -700,6 +704,7 @@ rpc_clone_client_set_auth(struct rpc_cln
 		.authflavor	= flavor,
 		.cred		= clnt->cl_cred,
 		.stats		= clnt->cl_stats,
+		.flags		= RPC_CLNT_CREATE_STATS,
 	};
 	return __rpc_clone_client(&args, clnt);
 }
@@ -983,6 +988,7 @@ struct rpc_clnt *rpc_bind_new_program(st
 		.authflavor	= old->cl_auth->au_flavor,
 		.cred		= old->cl_cred,
 		.stats		= old->cl_stats,
+		.flags		= RPC_CLNT_CREATE_STATS,
 		.timeout	= old->cl_timeout,
 	};
 	struct rpc_clnt *clnt;
