From f00f54f1dfcac9e369fb39092a07fe8d220561fe Mon Sep 17 00:00:00 2001
From: Denis Kirjanov <denis.kirjanov@suse.com>
Date: Wed, 5 Jun 2024 11:53:33 +0300
Subject: [PATCH] net: preserve kabi for sk_buff
Patch-mainline: Never, kABI workaround
References: CVE-2024-26921 bsc#1223138 

Signed-off-by: Denis Kirjanov <denis.kirjanov@suse.com>
---
 include/linux/skbuff.h | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/include/linux/skbuff.h b/include/linux/skbuff.h
index d1aef7848a88..e5ed1f966371 100644
--- a/net/ipv4/inet_fragment.c
+++ b/net/ipv4/inet_fragment.c
@@ -24,6 +24,10 @@
 #include <net/ip.h>
 #include <net/ipv6.h>
 
+#ifndef __GENKSYMS__
+#include <net/tcp.h>
+#endif
+
 /* Use skb->cb to track consecutive/adjacent fragments coming at
  * the end of the queue. Nodes in the rb-tree queue will
  * contain "runs" of one or more adjacent fragments.
--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -739,8 +739,14 @@ struct sk_buff {
 		struct llist_node	ll_node;
 	};
 
+#ifndef __GENKSYMS__
 	struct sock             *sk;
-
+#else
+	union {
+		struct sock             *sk;
+		int                     ip_defrag_offset;
+	};
+#endif
 	union {
 		ktime_t		tstamp;
 		u64		skb_mstamp_ns; /* earliest departure time */
-- 
2.16.4

