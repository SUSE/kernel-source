From: Olaf Hering <ohering@suse.de>
Date: Thu, 24 Aug 2023 01:07:10 -0700
Patch-mainline: never, kABI
Subject: kabi: x86/hyperv: Use TDX GHCI to access some MSRs in a TDX VM with the paravisor
References: bsc#1206453

--- a/arch/x86/hyperv/ivm.c
+++ b/arch/x86/hyperv/ivm.c
@@ -186,7 +186,7 @@ bool hv_ghcb_negotiate_protocol(void)
 	return true;
 }
 
-static void hv_ghcb_msr_write(u64 msr, u64 value)
+void hv_ghcb_msr_write(u64 msr, u64 value)
 {
 	union hv_ghcb *hv_ghcb;
 	void **ghcb_base;
@@ -214,8 +214,9 @@ static void hv_ghcb_msr_write(u64 msr, u
 
 	local_irq_restore(flags);
 }
+EXPORT_SYMBOL_GPL(hv_ghcb_msr_write); /* kABI */
 
-static void hv_ghcb_msr_read(u64 msr, u64 *value)
+void hv_ghcb_msr_read(u64 msr, u64 *value)
 {
 	union hv_ghcb *hv_ghcb;
 	void **ghcb_base;
@@ -245,6 +246,7 @@ static void hv_ghcb_msr_read(u64 msr, u6
 			| ((u64)lower_32_bits(hv_ghcb->ghcb.save.rdx) << 32);
 	local_irq_restore(flags);
 }
+EXPORT_SYMBOL_GPL(hv_ghcb_msr_read); /* kABI */
 
 /* Only used in a fully enlightened SNP VM, i.e. without the paravisor */
 static u8 ap_start_input_arg[PAGE_SIZE] __bss_decrypted __aligned(PAGE_SIZE);
--- a/arch/x86/include/asm/mshyperv.h
+++ b/arch/x86/include/asm/mshyperv.h
@@ -268,6 +268,8 @@ int hv_map_ioapic_interrupt(int ioapic_i
 int hv_unmap_ioapic_interrupt(int ioapic_id, struct hv_interrupt_entry *entry);
 
 #ifdef CONFIG_AMD_MEM_ENCRYPT
+void hv_ghcb_msr_write(u64 msr, u64 value); /* kABI */
+void hv_ghcb_msr_read(u64 msr, u64 *value); /* kABI */
 bool hv_ghcb_negotiate_protocol(void);
 void __noreturn hv_ghcb_terminate(unsigned int set, unsigned int reason);
 int hv_snp_boot_ap(int cpu, unsigned long start_ip);
