From: Fernando Fernandez Mancera <fmancera@suse.de>
Date: Fri, 20 Jun 2025 12:20:54 +0200
Subject: kabi: place tstamp needed for nftables set in a hole
Patch-mainline: never, kABI workaround
References: CVE-2024-27397 bsc#1224095

Upstream commit 7395dfacfff65e9938ac0889dafa1ab01e987d15 requires tstamp to be
placed under `nftables_pernet struct`. As that patch wasn't backported, we
place it directly under `net struct`. There is a hole where we can fit it.


```
	/* --- cacheline 56 boundary (3584 bytes) --- */
	struct net_generic *       gen;                  /*  3584     8 */
	struct bpf_prog *          flow_dissector_prog;  /*  3592     8 */
	struct llist_node          defer_free_list;      /*  3600     8 */

	/* XXX 40 bytes hole, try to pack */
```

Signed-off-by: Fernando Fernandez Mancera <fmancera@suse.de>
---
 include/net/net_namespace.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/include/net/net_namespace.h
+++ b/include/net/net_namespace.h
@@ -141,7 +141,6 @@ struct net {
 #if defined(CONFIG_NF_CONNTRACK) || defined(CONFIG_NF_CONNTRACK_MODULE)
 	struct netns_ct		ct;
 #endif
-	u64			tstamp;
 #if defined(CONFIG_NF_TABLES) || defined(CONFIG_NF_TABLES_MODULE)
 	struct netns_nftables	nft;
 #endif
@@ -167,6 +166,7 @@ struct net {
 
 #ifndef __GENKSYMS__
 	struct llist_node defer_free_list;
+	u64		  tstamp;
 #endif
 
 	/* Note : following structs are cache line aligned */
