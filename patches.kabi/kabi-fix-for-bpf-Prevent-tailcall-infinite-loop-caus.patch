From: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Subject: kABI: bpf: Prevent tailcall infinite loop caused by freplace kABI workaround
Patch-mainline: never, kabi
References: bsc#1235712 CVE-2024-47794

Upstream commit `d6083f040d5d` "bpf: Prevent tailcall infinite loop caused by
freplace" added several fields to struct bpf_prog_aux that breaks kABI. Since
the structure was always accessed behind a pointer, workaround the kABI breakge
by simply moving the new field to the end of struct bpf_prog_aux and wrap them
with the __GENKSYMS__ macro.

Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 include/linux/bpf.h |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

--- a/include/linux/bpf.h
+++ b/include/linux/bpf.h
@@ -1453,9 +1453,6 @@ struct bpf_prog_aux {
 	bool sleepable;
 	bool tail_call_reachable;
 	bool xdp_has_frags;
-	bool is_extended; /* true if extended by freplace program */
-	u64 prog_array_member_cnt; /* counts how many times as member of prog_array */
-	struct mutex ext_mutex; /* mutex for is_extended and prog_array_member_cnt */
 	/* BTF_KIND_FUNC_PROTO for valid attach_btf_id */
 	const struct btf_type *attach_func_proto;
 	/* function name for valid attach_btf_id */
@@ -1516,7 +1513,13 @@ struct bpf_prog_aux {
 		struct work_struct work;
 		struct rcu_head	rcu;
 	};
+#ifndef __GENKSYMS__
+	bool is_extended; /* true if extended by freplace program */
+	u64 prog_array_member_cnt; /* counts how many times as member of prog_array */
+	struct mutex ext_mutex; /* mutex for is_extended and prog_array_member_cnt */
+#else
 	void *suse_kabi_padding;
+#endif
 };
 
 struct bpf_prog {
