From: Petr Pavlu <petr.pavlu@suse.com>
Date: Tue, 10 Jun 2025 14:34:24 +0200
Subject: kABI: Fix the is_signed and needs_test members in trace_event_fields
Patch-mainline: Never, kABI workaround
References: git-fixes

The patch tracing-Check-s-dereference-via-the-field-and-not-the-TP_p.patch
changed the member trace_events_fields.is_signed from 'const int is_signed;' to
'const unsigned int is_signed:1;' and added a new member
trace_events_fields.needs_test as 'unsigned int needs_test:1;', both of which
are packed into the same int.

The is_signed member is a flag that can be either 0 or 1. Its value is
constant, ensuring it can only be set during initialization. This means
that no subsequent write operations occur that would alter the entire
4-byte value once the member is initialized.

The needs_test member is used only by newly compiled code. The compiler
knows it is a bitfield packed with is_signed and will generate appropriate
code to preserve the adjacent field.

Therefore, this change is ok from the kABI perspective.

Signed-off-by: Petr Pavlu <petr.pavlu@suse.com>
---
 include/linux/trace_events.h |    4 ++++
 1 file changed, 4 insertions(+)

--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@ -275,8 +275,12 @@ struct trace_event_fields {
 			const char *name;
 			const int  size;
 			const int  align;
+#ifndef __GENKSYMS__
 			const unsigned int is_signed:1;
 			unsigned int needs_test:1;
+#else
+			const int is_signed;
+#endif
 			const int  filter_type;
 			const int  len;
 		};
