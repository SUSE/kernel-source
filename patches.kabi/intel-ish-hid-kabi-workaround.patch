From: Takashi Iwai <tiwai@suse.de>
Subject: kABI workaround for intel-ish-hid
Patch-mainline: Never, kABI workaround
References: git-fixes

The patch
  patches.suse/HID-intel-ish-hid-Send-clock-sync-message-immediatel.patch
introduced a new field prev_sync to struct ishtp_device.
Unfortunately the struct can't be resized due to the flex data at the
bottom.  However, since the field is accessed only internally in ipc.c,
we can hide it by moving to the end of the extra data internally, too.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/hid/intel-ish-hid/ipc/ipc.c         |   17 +++++++++++++----
 drivers/hid/intel-ish-hid/ishtp/ishtp-dev.h |    2 --
 2 files changed, 13 insertions(+), 6 deletions(-)

--- a/drivers/hid/intel-ish-hid/ipc/ipc.c
+++ b/drivers/hid/intel-ish-hid/ipc/ipc.c
@@ -486,6 +486,11 @@ out:
 #define TIMEOUT_FOR_FW_RDY_MS			2000
 #define TIMEOUT_FOR_INPUT_RDY_MS		2000
 
+static inline unsigned long *ishtp_dev_prev_syncp(struct ishtp_device *ish)
+{
+	return (unsigned long *)(ish->hw + sizeof(struct ish_hw));
+}
+
 /**
  * ish_fw_reset_handler() - FW reset handler
  * @dev: ishtp device pointer
@@ -519,7 +524,7 @@ static int ish_fw_reset_handler(struct i
 		return	-EPIPE;
 
 	/* Send clock sync at once after reset */
-	ishtp_dev->prev_sync = 0;
+	*ishtp_dev_prev_syncp(ishtp_dev) = 0;
 
 	/*
 	 * Set HOST2ISH.ILUP. Apparently we need this BEFORE sending
@@ -581,11 +586,12 @@ static void fw_reset_work_fn(struct work
 static void _ish_sync_fw_clock(struct ishtp_device *dev)
 {
 	struct ipc_time_update_msg time = {};
+	unsigned long prev_sync = *ishtp_dev_prev_syncp(dev);
 
-	if (dev->prev_sync && time_before(jiffies, dev->prev_sync + 20 * HZ))
+	if (prev_sync && time_before(jiffies, prev_sync + 20 * HZ))
 		return;
 
-	dev->prev_sync = jiffies;
+	*ishtp_dev_prev_syncp(dev) = jiffies;
 	/* The fields of time would be updated while sending message */
 	ipc_send_mng_msg(dev, MNG_SYNC_FW_CLOCK, &time, sizeof(time));
 }
@@ -945,8 +951,11 @@ struct ishtp_device *ish_dev_init(struct
 	int	i;
 	int	ret;
 
+	// FIXME: allocate an extra pref_sync field here instead of defining
+	// in struct ishtp_device for kABI workaround
 	dev = devm_kzalloc(&pdev->dev,
-			   sizeof(struct ishtp_device) + sizeof(struct ish_hw),
+			   sizeof(struct ishtp_device) + sizeof(struct ish_hw)
+			   + sizeof(unsigned long),
 			   GFP_KERNEL);
 	if (!dev)
 		return NULL;
--- a/drivers/hid/intel-ish-hid/ishtp/ishtp-dev.h
+++ b/drivers/hid/intel-ish-hid/ishtp/ishtp-dev.h
@@ -212,8 +212,6 @@ struct ishtp_device {
 	unsigned int	ipc_tx_cnt;
 	unsigned long long	ipc_tx_bytes_cnt;
 
-	/* Time of the last clock sync */
-	unsigned long prev_sync;
 	const struct ishtp_hw_ops *ops;
 	size_t	mtu;
 	uint32_t	ishtp_msg_hdr;
