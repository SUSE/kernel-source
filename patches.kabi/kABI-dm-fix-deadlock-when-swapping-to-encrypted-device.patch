From: Coly Li <colyli@suse.de>
Date: Thu, 02 Sep 2021 23:10:29 +0800
Subject: [Patch] kABI: dm: fix deadlock when swapping to encrypted device
Patch-mainline: Never, kABI fix
References: bsc#1186332

This is the kABI fix for patch,
dm: fix deadlock when swapping to encrypted device (bsc#1186332)
- patches.suse/0001-dm-fix-deadlock-when-swapping-to-encrypted-device.patch

Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/md/dm-core.h          |   10 ++++++----
 drivers/md/dm.c               |    2 ++
 include/linux/device-mapper.h |    2 ++
 3 files changed, 10 insertions(+), 4 deletions(-)

--- a/drivers/md/dm-core.h
+++ b/drivers/md/dm-core.h
@@ -106,10 +106,6 @@ struct mapped_device {
 
 	struct block_device *bdev;
 
-	int swap_bios;
-	struct semaphore swap_bios_semaphore;
-	struct mutex swap_bios_lock;
-
 	struct dm_stats stats;
 
 	/* for blk-mq request-based DM support */
@@ -117,6 +113,12 @@ struct mapped_device {
 	bool init_tio_pdu:1;
 
 	struct srcu_struct io_barrier;
+
+#ifndef __GENKSYMS__
+	int swap_bios;
+	struct semaphore swap_bios_semaphore;
+	struct mutex swap_bios_lock;
+#endif
 };
 
 void disable_discard(struct mapped_device *md);
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@ -3312,8 +3312,10 @@ MODULE_PARM_DESC(reserved_bio_based_ios,
 module_param(dm_numa_node, int, S_IRUGO | S_IWUSR);
 MODULE_PARM_DESC(dm_numa_node, "NUMA node for DM device memory allocations");
 
+#ifndef __GENKSYMS__
 module_param(swap_bios, int, S_IRUGO | S_IWUSR);
 MODULE_PARM_DESC(swap_bios, "Maximum allowed inflight swap IOs");
+#endif
 
 MODULE_DESCRIPTION(DM_NAME " driver");
 MODULE_AUTHOR("Joe Thornber <dm-devel@redhat.com>");
--- a/include/linux/device-mapper.h
+++ b/include/linux/device-mapper.h
@@ -321,10 +321,12 @@ struct dm_target {
 	 */
 	bool discards_supported:1;
 
+#ifndef __GENKSYMS__
 	/*
 	 * Set if we need to limit the number of in-flight bios when swapping.
 	 */
 	bool limit_swap_bios:1;
+#endif
 };
 
 void *dm_per_bio_data(struct bio *bio, size_t data_size);
