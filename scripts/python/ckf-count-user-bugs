#!/usr/bin/python3
import bugzilla, sys, os, json, time
from bugzilla.utils import get_bugzilla_api, create_cache_dir

if len(sys.argv) < 2 or len(sys.argv[1]) < 9 or "@suse" not in sys.argv[1]:
    sys.exit(1)

def ask_bugzilla(email):
    bzapi = get_bugzilla_api()
    query = bzapi.build_query(status=['NEW', 'IN_PROGRESS', 'CONFIRMED'],
                              assigned_to=email,
                              include_fields=["id"])
    bugs = bzapi.query(query)
    return len(bugs)

class BugzillaCache:
    def __init__(self, cache_file, expiry):
        self.file = cache_file
        self.json = {}
        self.expiry = expiry

    def _load(self):
        if os.path.exists(self.file):
            with open(self.file, 'r') as f:
                self.json = json.load(f)
                return

    def _save(self):
        with open(self.file, 'w') as f:
            json.dump(self.json, f)

    def get_data(self, email):
        self._load()
        if self.json and email in self.json and self.json[email]['expiry'] > int(time.time()):
            return self.json[email]['number_of_bugs']
        ret = ask_bugzilla(email)
        self.json[email] = { 'expiry': int(time.time()) + self.expiry, 'number_of_bugs': ret }
        self._save()
        return ret;

def main(argv):
    try:
        ckf_dir = create_cache_dir('check-kernel-fix')
        cache_file = ckf_dir + os.sep + 'bugzilla_cache.json'
        cache = BugzillaCache(cache_file, 2 * 60 * 60)
        print(cache.get_data(argv[1]))
    except:
        print(0)
        sys.exit(5)

main(sys.argv)
