#!/bin/bash

[ -z "$KSOURCE_GIT" ] && KSOURCE_GIT="."

for branch in $(git -C $KSOURCE_GIT branch -l users/$USER/*/for-next | sed 's@.*users@users@')
do
	upstream_branch="origin/$(echo $branch | sed 's@users/'$USER'/\(.*\)/for-next@\1@')"
	if ! git -C $KSOURCE_GIT rev-parse --verify $upstream_branch >/dev/null 2>/dev/null
	then
		echo No upstream branch for $branch >&2
		continue
	fi

	remote_head="$(git -C $KSOURCE_GIT rev-parse --verify origin/$branch 2>/dev/null)"
	if [ -z "$remote_head" ]
        then
		echo $branch not pushed to origin >&2
                continue
        fi

	local_head="$(git -C $KSOURCE_GIT rev-parse --verify $branch 2>/dev/null)"
	if [ $local_head != $remote_head ]
	then
		echo $branch differs from origin/$branch >&2
		continue
	fi
	
	if ! git -C $KSOURCE_GIT merge-base --is-ancestor origin/$branch $upstream_branch
	then
		echo -n $branch not merged into $upstream_branch >&2

		read base merge state < <(ssh appolonius.suse.de "cat /srv/kbuild/user-tests/results/$branch{,.status} 2>/dev/null| tr '\n' ' '")

		if [ "$base" != "$remote_head" ]
		then
			d=$(date -d "$(git show --pretty=%aD $branch | head -n1)" +%s)
			now=$(date +%s)
			age=$((($now - $d)/3600))
			[ $age -gt 0 ] && echo -n " still pending test ${age}h" >&2
		else
			if [ "$state" -eq 1 ]
			then
				echo -n " failed the test" >&2
			else
				d=$(date -d "$(git show --pretty=%aD $branch | head -n1)" +%s)
				now=$(date +%s)
				age=$((($now - $d)/(24*3600)))
				[ $age -gt 1 ] && echo -n " $age days old" >&2
			fi
		fi
		echo

		continue
	fi
done
