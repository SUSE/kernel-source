From a8b931be5046b24d0951ee854d94ffbdbffcf350 Mon Sep 17 00:00:00 2001
From: David Disseldorp <ddiss@suse.de>
Date: Tue, 7 Feb 2023 23:48:37 +0100
Subject: [PATCH 2/5] io_uring: fix tw losing poll events
Patch-mainline: v6.1-rc6
Git-commit: 539bcb57da2f58886d7d5c17134236b0ec9cd15d
References: bsc#1207511 CVE-2023-0468

We may never try to process a poll wake and its mask if there was
multiple wake ups racing for queueing up a tw. Force
io_poll_check_events() to update the mask by vfs_poll().

Cc: stable@vger.kernel.org
Fixes: aa43477b04025 ("io_uring: poll rework")
Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
Link: https://lore.kernel.org/r/00344d60f8b18907171178d7cf598de71d127b0b.1668710222.git.asml.silence@gmail.com
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: David Disseldorp <ddiss@suse.de>
---
 fs/io_uring.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/fs/io_uring.c b/fs/io_uring.c
index f7094c52af66b..5518a3132232b 100644
--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@ -6509,6 +6509,13 @@ static int io_poll_check_events(struct io_kiocb *req, bool *locked)
 			return 0;
 		if (v & IO_POLL_CANCEL_FLAG)
 			return -ECANCELED;
+		/*
+		 * cqe.res contains only events of the first wake up
+		 * and all others are be lost. Redo vfs_poll() to get
+		 * up to date state.
+		 */
+		if ((v & IO_POLL_REF_MASK) != 1)
+			req->cqe.res = 0;
 
 		if (!req->cqe.res) {
 			struct poll_table_struct pt = { ._key = req->apoll_events };
-- 
2.35.3

