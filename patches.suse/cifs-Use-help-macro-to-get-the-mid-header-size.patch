From: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Date: Tue, 23 Aug 2022 20:52:01 +0800
Subject: [PATCH] cifs: Use help macro to get the mid header size
Git-commit: b6b3624d016b980f917b46e6b964f943ac5ac56e
References: bsc#1193629
Patch-mainline: v6.0-rc3

It's better to use MID_HEADER_SIZE because the unfolded expression
too long. No actual functional changes, minor readability improvement.

Signed-off-by: Zhang Xiaoxu <zhangxiaoxu5@huawei.com>
Reviewed-by: Paulo Alcantara (SUSE) <pc@cjr.nz>
Signed-off-by: Steve French <stfrench@microsoft.com>
Acked-by: Paulo Alcantara <palcantara@suse.de>
---
 fs/cifs/cifsglob.h | 1 +
 fs/cifs/connect.c  | 9 +++------
 2 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/fs/cifs/cifsglob.h b/fs/cifs/cifsglob.h
index b15b84d03fb6..6c8293314530 100644
--- a/fs/cifs/cifsglob.h
+++ b/fs/cifs/cifsglob.h
@@ -558,6 +558,7 @@ struct smb_version_values {
 #define HEADER_SIZE(server) (server->vals->header_size)
 #define MAX_HEADER_SIZE(server) (server->vals->max_header_size)
 #define HEADER_PREAMBLE_SIZE(server) (server->vals->header_preamble_size)
+#define MID_HEADER_SIZE(server) (HEADER_SIZE(server) - 1 - HEADER_PREAMBLE_SIZE(server))
 
 /**
  * CIFS superblock mount flags (mnt_cifs_flags) to consider when
diff --git a/fs/cifs/connect.c b/fs/cifs/connect.c
index ccf7f32e0c3e..0123f41c26f5 100644
--- a/fs/cifs/connect.c
+++ b/fs/cifs/connect.c
@@ -1065,8 +1065,7 @@ standard_receive3(struct TCP_Server_Info *server, struct mid_q_entry *mid)
 
 	/* now read the rest */
 	length = cifs_read_from_socket(server, buf + HEADER_SIZE(server) - 1,
-				       pdu_length - HEADER_SIZE(server) + 1 +
-				       HEADER_PREAMBLE_SIZE(server));
+				       pdu_length - MID_HEADER_SIZE(server));
 
 	if (length < 0)
 		return length;
@@ -1198,8 +1197,7 @@ cifs_demultiplex_thread(void *p)
 		server->pdu_size = pdu_length;
 
 		/* make sure we have enough to get to the MID */
-		if (server->pdu_size < HEADER_SIZE(server) - 1 -
-		    HEADER_PREAMBLE_SIZE(server)) {
+		if (server->pdu_size < MID_HEADER_SIZE(server)) {
 			cifs_server_dbg(VFS, "SMB response too short (%u bytes)\n",
 				 server->pdu_size);
 			cifs_reconnect(server, true);
@@ -1209,8 +1207,7 @@ cifs_demultiplex_thread(void *p)
 		/* read down to the MID */
 		length = cifs_read_from_socket(server,
 			     buf + HEADER_PREAMBLE_SIZE(server),
-			     HEADER_SIZE(server) - 1 -
-			     HEADER_PREAMBLE_SIZE(server));
+			     MID_HEADER_SIZE(server));
 		if (length < 0)
 			continue;
 		server->total_read += length;
-- 
2.38.0


