From 6382cedf5fe73a9ff2e0cb66707fe38cece28aa3 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Thu, 26 Nov 2020 10:20:27 +0100
Subject: [PATCH] fpga: add kABI padding
Patch-mainline: Never (kABI padding)
References: jsc#SLE-13441

This adds spare elements to structures connected to the fpga
subsystem. This aids future backports for bug fixes and ECOs.

Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 include/linux/fpga/fpga-bridge.h |    4 ++++
 include/linux/fpga/fpga-mgr.h    |    6 ++++++
 include/linux/fpga/fpga-region.h |    2 ++
 3 files changed, 12 insertions(+)

--- a/include/linux/fpga/fpga-bridge.h
+++ b/include/linux/fpga/fpga-bridge.h
@@ -20,6 +20,8 @@ struct fpga_bridge_ops {
 	int (*enable_set)(struct fpga_bridge *bridge, bool enable);
 	void (*fpga_bridge_remove)(struct fpga_bridge *bridge);
 	const struct attribute_group **groups;
+
+	void *suse_kabi_padding;
 };
 
 /**
@@ -59,6 +61,8 @@ struct fpga_bridge {
 	struct fpga_image_info *info;
 	struct list_head node;
 	void *priv;
+
+	void *suse_kabi_padding;
 };
 
 #define to_fpga_bridge(d) container_of(d, struct fpga_bridge, dev)
--- a/include/linux/fpga/fpga-mgr.h
+++ b/include/linux/fpga/fpga-mgr.h
@@ -103,6 +103,8 @@ struct fpga_image_info {
 #ifdef CONFIG_OF
 	struct device_node *overlay;
 #endif
+
+	void *suse_kabi_padding;
 };
 
 /**
@@ -164,6 +166,8 @@ struct fpga_manager_ops {
 			      struct fpga_image_info *info);
 	void (*fpga_remove)(struct fpga_manager *mgr);
 	const struct attribute_group **groups;
+
+	void *suse_kabi_padding;
 };
 
 /* FPGA manager status: Partial/Full Reconfiguration errors */
@@ -193,6 +197,8 @@ struct fpga_manager {
 	const struct fpga_manager_ops *mops;
 	struct module *mops_owner;
 	void *priv;
+
+	void *suse_kabi_padding;
 };
 
 #define to_fpga_manager(d) container_of(d, struct fpga_manager, dev)
--- a/include/linux/fpga/fpga-region.h
+++ b/include/linux/fpga/fpga-region.h
@@ -50,6 +50,8 @@ struct fpga_region {
 	struct module *ops_owner;
 	void *priv;
 	int (*get_bridges)(struct fpga_region *region);
+
+	void *suse_kabi_padding;
 };
 
 #define to_fpga_region(d) container_of(d, struct fpga_region, dev)
