From f3ecdb734ad1f23dd096879897ce00682ae19d91 Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Wed, 28 Feb 2024 11:38:16 +0100
Subject: [PATCH 1/5] paddings: add paddings to TypeC stuff
Patch-mainline: Never, kabi padding
References: bsc#1220369

Straightforward additions to everything not determined
by hardware

Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/usb/typec/class.h     | 2 ++
 drivers/usb/typec/mux.h       | 2 ++
 drivers/usb/typec/pd.h        | 2 ++
 drivers/usb/typec/retimer.h   | 1 +
 drivers/usb/typec/ucsi/ucsi.h | 4 ++++
 include/linux/usb/typec.h     | 1 +
 scripts/bpf_doc.py            | 0
 scripts/link-vmlinux.sh       | 0
 scripts/pahole-flags.sh       | 0
 drivers/usb/typec/class.h     |    3 +++
 drivers/usb/typec/mux.h       |    2 ++
 drivers/usb/typec/pd.h        |    2 ++
 drivers/usb/typec/retimer.h   |    1 +
 drivers/usb/typec/ucsi/ucsi.h |    5 +++++
 include/linux/usb/typec.h     |    1 +
 6 files changed, 14 insertions(+)
 mode change 100644 => 100755 scripts/bpf_doc.py
 mode change 100644 => 100755 scripts/link-vmlinux.sh
 mode change 100644 => 100755 scripts/pahole-flags.sh

--- a/drivers/usb/typec/class.h
+++ b/drivers/usb/typec/class.h
@@ -15,6 +15,7 @@ struct typec_plug {
 	enum typec_plug_index		index;
 	struct ida			mode_ids;
 	int				num_altmodes;
+	void *suse_kabi_padding;
 };
 
 struct typec_cable {
@@ -24,6 +25,8 @@ struct typec_cable {
 	unsigned int			active:1;
 	u16				pd_revision; /* 0300H = "3.0" */
 	enum usb_pd_svdm_ver		svdm_version;
+
+	void *suse_kabi_padding;
 };
 
 struct typec_partner {
--- a/drivers/usb/typec/mux.h
+++ b/drivers/usb/typec/mux.h
@@ -8,11 +8,13 @@
 struct typec_switch_dev {
 	struct device dev;
 	typec_switch_set_fn_t set;
+	void *suse_kabi_padding;
 };
 
 struct typec_mux_dev {
 	struct device dev;
 	typec_mux_set_fn_t set;
+	void *suse_kabi_padding;
 };
 
 #define to_typec_switch_dev(_dev_) container_of(_dev_, struct typec_switch_dev, dev)
--- a/drivers/usb/typec/pd.h
+++ b/drivers/usb/typec/pd.h
@@ -11,12 +11,14 @@ struct usb_power_delivery {
 	int id;
 	u16 revision;
 	u16 version;
+	void *suse_kabi_padding;
 };
 
 struct usb_power_delivery_capabilities {
 	struct device dev;
 	struct usb_power_delivery *pd;
 	enum typec_role role;
+	void *suse_kabi_padding;
 };
 
 #define to_usb_power_delivery_capabilities(o) container_of(o, struct usb_power_delivery_capabilities, dev)
--- a/drivers/usb/typec/retimer.h
+++ b/drivers/usb/typec/retimer.h
@@ -8,6 +8,7 @@
 struct typec_retimer {
 	struct device dev;
 	typec_retimer_set_fn_t set;
+	void *suse_kabi_padding;
 };
 
 #define to_typec_retimer(_dev_) container_of(_dev_, struct typec_retimer, dev)
--- a/drivers/usb/typec/ucsi/ucsi.h
+++ b/drivers/usb/typec/ucsi/ucsi.h
@@ -76,6 +76,8 @@ struct ucsi_operations {
 	bool (*update_altmodes)(struct ucsi *ucsi, struct ucsi_altmode *orig,
 				struct ucsi_altmode *updated);
 	void (*connector_status)(struct ucsi_connector *con);
+
+	void *suse_kabi_padding;
 };
 
 struct ucsi *ucsi_create(struct device *dev, const struct ucsi_operations *ops);
@@ -348,6 +350,7 @@ struct ucsi_debugfs_entry {
 	} response;
 	u32 status;
 	struct dentry *dentry;
+	void *suse_kabi_padding;
 };
 
 struct ucsi {
@@ -376,6 +379,7 @@ struct ucsi {
 
 	/* PPM communication flags */
 	unsigned long flags;
+	void *suse_kabi_padding;
 #define EVENT_PENDING	0
 #define COMMAND_PENDING	1
 #define ACK_PENDING	2
@@ -423,6 +427,7 @@ struct ucsi_connector {
 	struct usb_power_delivery_capabilities *partner_sink_caps;
 
 	struct usb_role_switch *usb_role_sw;
+	void *suse_kabi_padding;
 };
 
 int ucsi_send_command(struct ucsi *ucsi, u64 command,
--- a/include/linux/usb/typec.h
+++ b/include/linux/usb/typec.h
@@ -375,6 +375,7 @@ int typec_partner_set_usb_power_delivery
 struct typec_connector {
 	void (*attach)(struct typec_connector *con, struct device *dev);
 	void (*deattach)(struct typec_connector *con, struct device *dev);
+	void *suse_kabi_padding;
 };
 
 static inline void typec_attach(struct typec_connector *con, struct device *dev)
