From: Peter Zijlstra <peterz@infradead.org>
Date: Sun, 17 Apr 2022 17:03:40 +0200
Subject: objtool: Fix type of reloc::addend
Git-commit: c087c6e7b551b7f208c0b852304f044954cf2bb3
Patch-mainline: v5.18-rc5
References: git-fixes

Elf{32,64}_Rela::r_addend is of type: Elf{32,64}_Sword, that means
that our reloc::addend needs to be long or face tuncation issues when
we do elf_rebuild_reloc_section():

  - 107:  48 b8 00 00 00 00 00 00 00 00   movabs $0x0,%rax        109: R_X86_64_64        level4_kernel_pgt+0x80000067
  + 107:  48 b8 00 00 00 00 00 00 00 00   movabs $0x0,%rax        109: R_X86_64_64        level4_kernel_pgt-0x7fffff99

Fixes: 627fce14809b ("objtool: Add ORC unwind table generation")
Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Acked-by: Josh Poimboeuf <jpoimboe@redhat.com>
Link: https://lkml.kernel.org/r/20220419203807.596871927@infradead.org

Acked-by: Miroslav Benes <mbenes@suse.cz>
---
 tools/objtool/check.c |   10 +++++-----
 tools/objtool/elf.h   |    2 +-
 2 files changed, 6 insertions(+), 6 deletions(-)

--- a/tools/objtool/check.c
+++ b/tools/objtool/check.c
@@ -358,12 +358,12 @@ static int add_dead_ends(struct objtool_
 			}
 
 			if (!found) {
-				WARN("can't find unreachable insn at %s+0x%x",
+				WARN("can't find unreachable insn at %s+0x%lx",
 				     rela->sym->sec->name, rela->addend);
 				return -1;
 			}
 		} else {
-			WARN("can't find unreachable insn at %s+0x%x",
+			WARN("can't find unreachable insn at %s+0x%lx",
 			     rela->sym->sec->name, rela->addend);
 			return -1;
 		}
@@ -400,12 +400,12 @@ reachable:
 			}
 
 			if (!found) {
-				WARN("can't find reachable insn at %s+0x%x",
+				WARN("can't find reachable insn at %s+0x%lx",
 				     rela->sym->sec->name, rela->addend);
 				return -1;
 			}
 		} else {
-			WARN("can't find reachable insn at %s+0x%x",
+			WARN("can't find reachable insn at %s+0x%lx",
 			     rela->sym->sec->name, rela->addend);
 			return -1;
 		}
@@ -700,7 +700,7 @@ static int add_call_destinations(struct
 								rela->addend+4);
 			if (!insn->call_dest ||
 			    insn->call_dest->type != STT_FUNC) {
-				WARN_FUNC("can't find call dest symbol at %s+0x%x",
+				WARN_FUNC("can't find call dest symbol at %s+0x%lx",
 					  insn->sec, insn->offset,
 					  rela->sym->sec->name,
 					  rela->addend + 4);
--- a/tools/objtool/elf.h
+++ b/tools/objtool/elf.h
@@ -61,7 +61,7 @@ struct rela {
 	struct symbol *sym;
 	unsigned int type;
 	unsigned long offset;
-	int addend;
+	long addend;
 	bool jump_table_start;
 };
 
