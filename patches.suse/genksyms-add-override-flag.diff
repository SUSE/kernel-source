From: Andreas Gruenbacher <agruen@suse.de>
Subject: genksyms: add --override flag
Patch-mainline: Not yet, <jeffm: asked msuchanek to submit, Oct 4, 2017>
References: none

Add --override flag to genksyms to allow overriding types with old
definitions using the 'override' keyword. This is similar to -p --preserve,
but it doesn't abort the build if a symtype cannot be preserved

[mmarek: added KBUILD_OVERRIDE env var to set this globally for the entire
 build]
---
 scripts/Makefile.build      |  1 +
 scripts/genksyms/genksyms.c | 18 +++++++++++++-----
 2 files changed, 14 insertions(+), 5 deletions(-)

--- a/scripts/Makefile.build
+++ b/scripts/Makefile.build
@@ -116,6 +116,7 @@ gendwarfksyms = $(objtree)/scripts/gendwarfksyms/gendwarfksyms	\
 genksyms = $(objtree)/scripts/genksyms/genksyms		\
 	$(if $(KBUILD_SYMTYPES), -T $(@:.o=.symtypes))	\
 	$(if $(KBUILD_PRESERVE), -p)			\
+	$(if $(KBUILD_OVERRIDE),-o)			\
 	$(addprefix -r , $(wildcard $(@:.o=.symref)))
 
 # These mirror gensymtypes_S and co below, keep them in synch.
--- a/scripts/genksyms/genksyms.c
+++ b/scripts/genksyms/genksyms.c
@@ -32,7 +32,7 @@ char *cur_filename;
 int in_source_file;
 
 static int flag_debug, flag_dump_defs, flag_reference, flag_dump_types,
-	   flag_preserve, flag_warnings;
+	   flag_override, flag_preserve, flag_warnings;
 
 static int errors;
 static int nsyms;
@@ -242,7 +242,7 @@ static struct symbol *__add_symbol(const char *name, enum symbol_type type,
 			sym->is_declared = 1;
 		} else if (sym->is_declared) {
 			error_with_pos("redefinition of %s", name);
-		} else if (sym->is_override && flag_preserve) {
+		} else if (sym->is_override && flag_override) {
 			print_location();
 			fprintf(stderr, "ignoring ");
 			print_type_name(type, name);
@@ -648,11 +648,13 @@ void export_symbol(const char *name)
 		struct symbol *n = sym->expansion_trail;
 
 		if (sym->status != STATUS_UNCHANGED) {
+			int fail = sym->is_override && flag_preserve;
+
 			if (!has_changed) {
 				print_location();
 				fprintf(stderr,
 					"%s: %s: modversion changed because of changes in ",
-					flag_preserve ? "error" : "warning",
+					fail ? "error" : "warning",
 					name);
 			} else {
 				fprintf(stderr, ", ");
@@ -661,7 +663,7 @@ void export_symbol(const char *name)
 			if (sym->status == STATUS_DEFINED)
 				fprintf(stderr, " (became defined)");
 			has_changed = 1;
-			if (flag_preserve)
+			if (fail)
 				errors++;
 		}
 		sym->expansion_trail = 0;
@@ -714,6 +716,7 @@ static void genksyms_usage(void)
 	      "  -D, --dump            Dump expanded symbol defs (for debugging only)\n"
 	      "  -r, --reference file  Read reference symbols from a file\n"
 	      "  -T, --dump-types file Dump expanded types into file\n"
+	      "  -o, --override        Allow to override reference modversions\n"
 	      "  -p, --preserve        Preserve reference modversions or fail\n"
 	      "  -w, --warnings        Enable warnings\n"
 	      "  -q, --quiet           Disable warnings (default)\n"
@@ -734,13 +737,14 @@ int main(int argc, char **argv)
 		{"dump", 0, 0, 'D'},
 		{"reference", 1, 0, 'r'},
 		{"dump-types", 1, 0, 'T'},
+		{"override", 0, 0, 'o'},
 		{"preserve", 0, 0, 'p'},
 		{"version", 0, 0, 'V'},
 		{"help", 0, 0, 'h'},
 		{0, 0, 0, 0}
 	};
 
-	while ((o = getopt_long(argc, argv, "dwqVDr:T:ph",
+	while ((o = getopt_long(argc, argv, "dwqVDr:T:oph",
 				&long_opts[0], NULL)) != EOF)
 		switch (o) {
 		case 'd':
@@ -774,7 +778,11 @@ int main(int argc, char **argv)
 				return 1;
 			}
 			break;
+		case 'o':
+			flag_override = 1;
+			break;
 		case 'p':
+			flag_override = 1;
 			flag_preserve = 1;
 			break;
 		case 'h':
