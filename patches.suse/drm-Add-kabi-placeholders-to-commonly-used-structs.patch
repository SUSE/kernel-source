From 96255b007099f9088b61aafd28ba9ff0d834f727 Mon Sep 17 00:00:00 2001
From: Patrik Jakobsson <pjakobsson@suse.de>
Date: Thu, 27 Jan 2022 16:25:55 +0100
Subject: [PATCH] drm: Add kabi placeholders to commonly used structs
Patch-mainline: Never, kABI padding
References: bsc#1179531

Signed-off-by: Patrik Jakobsson <pjakobsson@suse.de>
---
 include/drm/display/drm_dp_helper.h     |    2 ++
 include/drm/display/drm_dp_mst_helper.h |    2 ++
 include/drm/drm_atomic.h                |    2 ++
 include/drm/drm_connector.h             |    4 ++++
 include/drm/drm_crtc.h                  |    4 ++++
 include/drm/drm_device.h                |    2 ++
 include/drm/drm_gem.h                   |    2 ++
 include/drm/drm_mode_object.h           |    2 ++
 include/drm/drm_modes.h                 |    1 +
 include/drm/drm_plane.h                 |    4 ++++
 include/drm/ttm/ttm_device.h            |    2 ++
 11 files changed, 27 insertions(+)

--- a/include/drm/display/drm_dp_helper.h
+++ b/include/drm/display/drm_dp_helper.h
@@ -453,6 +453,8 @@ struct drm_dp_aux {
 	 * @dpcd_probe_disabled: If probing before a DPCD access is disabled.
 	 */
 	bool dpcd_probe_disabled;
+
+	void *suse_kabi_padding;
 };
 
 int drm_dp_dpcd_probe(struct drm_dp_aux *aux, unsigned int offset);
--- a/include/drm/display/drm_dp_mst_helper.h
+++ b/include/drm/display/drm_dp_mst_helper.h
@@ -822,6 +822,8 @@ struct drm_dp_mst_topology_mgr {
 	 */
 	struct mutex topology_ref_history_lock;
 #endif
+
+	void *suse_kabi_padding;
 };
 
 int drm_dp_mst_topology_mgr_init(struct drm_dp_mst_topology_mgr *mgr,
--- a/include/drm/drm_atomic.h
+++ b/include/drm/drm_atomic.h
@@ -445,6 +445,8 @@ struct drm_atomic_state {
 	 * commit without blocking.
 	 */
 	struct work_struct commit_work;
+
+	void *suse_kabi_padding;
 };
 
 void __drm_crtc_commit_free(struct kref *kref);
--- a/include/drm/drm_connector.h
+++ b/include/drm/drm_connector.h
@@ -1033,6 +1033,8 @@ struct drm_connector_state {
 	 * DRM blob property for HDR output metadata
 	 */
 	struct drm_property_blob *hdr_output_metadata;
+
+	void *suse_kabi_padding;
 };
 
 /**
@@ -1888,6 +1890,8 @@ struct drm_connector {
 
 	/** @hdr_sink_metadata: HDR Metadata Information read from sink */
 	struct hdr_sink_metadata hdr_sink_metadata;
+
+	void *suse_kabi_padding;
 };
 
 #define obj_to_connector(x) container_of(x, struct drm_connector, base)
--- a/include/drm/drm_crtc.h
+++ b/include/drm/drm_crtc.h
@@ -385,6 +385,8 @@ struct drm_crtc_state {
 
 	/** @state: backpointer to global drm_atomic_state */
 	struct drm_atomic_state *state;
+
+	void *suse_kabi_padding;
 };
 
 /**
@@ -1175,6 +1177,8 @@ struct drm_crtc {
 	 * Initialized via drm_self_refresh_helper_init().
 	 */
 	struct drm_self_refresh_data *self_refresh_data;
+
+	void *suse_kabi_padding;
 };
 
 /**
--- a/include/drm/drm_device.h
+++ b/include/drm/drm_device.h
@@ -383,6 +383,8 @@ struct drm_device {
 	bool irq_enabled;
 	int irq;
 #endif
+
+	void *suse_kabi_padding;
 };
 
 #endif
--- a/include/drm/drm_gem.h
+++ b/include/drm/drm_gem.h
@@ -430,6 +430,8 @@ struct drm_gem_object {
 	 * The current LRU list that the GEM object is on.
 	 */
 	struct drm_gem_lru *lru;
+
+	void *suse_kabi_padding;
 };
 
 /**
--- a/include/drm/drm_mode_object.h
+++ b/include/drm/drm_mode_object.h
@@ -58,6 +58,8 @@ struct drm_mode_object {
 	struct drm_object_properties *properties;
 	struct kref refcount;
 	void (*free_cb)(struct kref *kref);
+
+	void *suse_kabi_padding;
 };
 
 #define DRM_OBJECT_MAX_PROPERTY 24
--- a/include/drm/drm_modes.h
+++ b/include/drm/drm_modes.h
@@ -417,6 +417,7 @@ struct drm_display_mode {
 	 */
 	enum hdmi_picture_aspect picture_aspect_ratio;
 
+	void *suse_kabi_padding;
 };
 
 /**
--- a/include/drm/drm_plane.h
+++ b/include/drm/drm_plane.h
@@ -247,6 +247,8 @@ struct drm_plane_state {
 
 	/** @state: backpointer to global drm_atomic_state */
 	struct drm_atomic_state *state;
+
+	void *suse_kabi_padding;
 };
 
 static inline struct drm_rect
@@ -758,6 +760,8 @@ struct drm_plane {
 	 * scaling.
 	 */
 	struct drm_property *scaling_filter_property;
+
+	void *suse_kabi_padding;
 };
 
 #define obj_to_plane(x) container_of(x, struct drm_plane, base)
--- a/include/drm/ttm/ttm_device.h
+++ b/include/drm/ttm/ttm_device.h
@@ -266,6 +266,8 @@ struct ttm_device {
 	 * @wq: Work queue structure for the delayed delete workqueue.
 	 */
 	struct workqueue_struct *wq;
+
+	void *suse_kabi_padding;
 };
 
 int ttm_global_swapout(struct ttm_operation_ctx *ctx, gfp_t gfp_flags);
