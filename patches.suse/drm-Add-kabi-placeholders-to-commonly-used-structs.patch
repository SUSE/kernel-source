From 884dc6cd1f96a5c5cb129ef194870ddb7e71b119 Mon Sep 17 00:00:00 2001
From: Patrik Jakobsson <patrik.r.jakobsson@gmail.com>
Date: Thu, 27 Jan 2022 16:09:43 +0100
Subject: [PATCH] drm: Add kabi placeholders to commonly used structs
Patch-mainline: Never, kABI padding
References: bsc#1179531

Signed-off-by: Patrik Jakobsson <pjakobsson@suse.de>
---
 include/drm/drm_atomic.h      | 2 ++
 include/drm/drm_connector.h   | 2 ++
 include/drm/drm_crtc.h        | 2 ++
 include/drm/drm_device.h      | 2 ++
 include/drm/drm_gem.h         | 2 ++
 include/drm/drm_mode_object.h | 2 ++
 include/drm/drm_plane.h       | 2 ++
 7 files changed, 14 insertions(+)

diff --git a/include/drm/drm_atomic.h b/include/drm/drm_atomic.h
index 1701c2128..56f5fbfbc 100644
--- a/include/drm/drm_atomic.h
+++ b/include/drm/drm_atomic.h
@@ -407,6 +407,8 @@ struct drm_atomic_state {
 	 * commit without blocking.
 	 */
 	struct work_struct commit_work;
+
+	void *suse_kabi_padding;
 };
 
 void __drm_crtc_commit_free(struct kref *kref);
diff --git a/include/drm/drm_connector.h b/include/drm/drm_connector.h
index 1d896a8e3..1b19a0553 100644
--- a/include/drm/drm_connector.h
+++ b/include/drm/drm_connector.h
@@ -786,6 +786,8 @@ struct drm_connector_state {
 	 * DRM blob property for HDR output metadata
 	 */
 	struct drm_property_blob *hdr_output_metadata;
+
+	void *suse_kabi_padding;
 };
 
 /**
diff --git a/include/drm/drm_crtc.h b/include/drm/drm_crtc.h
index 13eeba2a7..1e7e39d82 100644
--- a/include/drm/drm_crtc.h
+++ b/include/drm/drm_crtc.h
@@ -399,6 +399,8 @@ struct drm_crtc_state {
 
 	/** @state: backpointer to global drm_atomic_state */
 	struct drm_atomic_state *state;
+
+	void *suse_kabi_padding;
 };
 
 /**
diff --git a/include/drm/drm_device.h b/include/drm/drm_device.h
index f588f967b..025777cdd 100644
--- a/include/drm/drm_device.h
+++ b/include/drm/drm_device.h
@@ -373,6 +373,8 @@ struct drm_device {
 	/* Scatter gather memory */
 	struct drm_sg_mem *sg;
 #endif
+
+	void *suse_kabi_padding;
 };
 
 #endif
diff --git a/include/drm/drm_gem.h b/include/drm/drm_gem.h
index 240049566..31e0dbbc4 100644
--- a/include/drm/drm_gem.h
+++ b/include/drm/drm_gem.h
@@ -312,6 +312,8 @@ struct drm_gem_object {
 	 *
 	 */
 	const struct drm_gem_object_funcs *funcs;
+
+	void *suse_kabi_padding;
 };
 
 /**
diff --git a/include/drm/drm_mode_object.h b/include/drm/drm_mode_object.h
index c34a3e803..5dc006e7b 100644
--- a/include/drm/drm_mode_object.h
+++ b/include/drm/drm_mode_object.h
@@ -58,6 +58,8 @@ struct drm_mode_object {
 	struct drm_object_properties *properties;
 	struct kref refcount;
 	void (*free_cb)(struct kref *kref);
+
+	void *suse_kabi_padding;
 };
 
 #define DRM_OBJECT_MAX_PROPERTY 24
diff --git a/include/drm/drm_plane.h b/include/drm/drm_plane.h
index 1294610e8..ac2add22e 100644
--- a/include/drm/drm_plane.h
+++ b/include/drm/drm_plane.h
@@ -236,6 +236,8 @@ struct drm_plane_state {
 
 	/** @state: backpointer to global drm_atomic_state */
 	struct drm_atomic_state *state;
+
+	void *suse_kabi_padding;
 };
 
 static inline struct drm_rect
-- 
2.33.1

