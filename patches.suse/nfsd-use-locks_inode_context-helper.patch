From: Jeff Layton <jlayton@kernel.org>
Date: Wed, 16 Nov 2022 09:36:07 -0500
Subject: [PATCH] nfsd: use locks_inode_context helper
Git-commit: 77c67530e1f95ac25c7075635f32f04367380894
Patch-mainline: v6.2
References: git-fixes

nfsd currently doesn't access i_flctx safely everywhere. This requires a
smp_load_acquire, as the pointer is set via cmpxchg (a release
operation).

Acked-by: Chuck Lever <chuck.lever@oracle.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Signed-off-by: Jeff Layton <jlayton@kernel.org>
Acked-by: NeilBrown <neilb@suse.de>

---
 fs/nfsd/nfs4state.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/nfsd/nfs4state.c
+++ b/fs/nfsd/nfs4state.c
@@ -7545,7 +7545,7 @@ check_for_locks(struct nfs4_file *fp, st
 	}
 
 	inode = locks_inode(nf->nf_file);
-	flctx = inode->i_flctx;
+	flctx = locks_inode_context(inode);
 
 	if (flctx && !list_empty_careful(&flctx->flc_posix)) {
 		spin_lock(&flctx->flc_lock);
