From: Sakari Ailus <sakari.ailus@linux.intel.com>
Date: Thu, 22 Feb 2024 16:13:21 +0200
Subject: ACPI: property: Polish ignoring bad data nodes
Patch-mainline: v6.9-rc1
Git-commit: 8d60902f16e2a36e9138a7ac0e90eb30f35a33b5
References: jsc#PED-11164

Clean up ignoring data nodes in mipi-disco-img.c: use { } initialiser, fix
a kernel-doc warning and use isdigit().

Fixes: 5bd4edbbf920 ("ACPI: property: Ignore bad graph port nodes on Dell XPS 9315")
Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Acked-by: Chun-Yi Lee <jlee@suse.com>
---
 drivers/acpi/mipi-disco-img.c |    8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

--- a/drivers/acpi/mipi-disco-img.c
+++ b/drivers/acpi/mipi-disco-img.c
@@ -732,7 +732,7 @@ static const struct dmi_system_id dmi_ig
 			DMI_EXACT_MATCH(DMI_PRODUCT_NAME, "XPS 9315"),
 		},
 	},
-	{ 0 }
+	{ }
 };
 
 static const char *strnext(const char *s1, const char *s2)
@@ -749,7 +749,7 @@ static const char *strnext(const char *s
  * acpi_graph_ignore_port - Tell whether a port node should be ignored
  * @handle: The ACPI handle of the node (which may be a port node)
  *
- * Returns true if a port node should be ignored and the data to that should
+ * Return: true if a port node should be ignored and the data to that should
  * come from other sources instead (Windows ACPI definitions and
  * ipu-bridge). This is currently used to ignore bad port nodes related to IPU6
  * ("IPU?") and camera sensor devices ("LNK?") in certain Dell systems with
@@ -778,12 +778,12 @@ bool acpi_graph_ignore_port(acpi_handle
 	if (!path)
 		goto out_free;
 
-	if (!(path[0] >= '0' && path[0] <= '9' && path[1] == '.'))
+	if (!(isdigit(path[0]) && path[1] == '.'))
 		goto out_free;
 
 	/* Check if the node has a "PRT" prefix. */
 	path = strnext(path, "PRT");
-	if (path && path[0] >= '0' && path[0] <= '9' && !path[1]) {
+	if (path && isdigit(path[0]) && !path[1]) {
 		acpi_handle_debug(handle, "ignoring data node\n");
 
 		kfree(orig_path);
