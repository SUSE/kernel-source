From: Liao Chang <liaochang1@huawei.com>
Date: Tue, 15 Aug 2023 09:40:17 +0800
Subject: cpufreq: cppc: cppc_cpufreq_get_rate() returns zero in all error
 cases.
Git-commit: 6a4fec4f6d30a325a1b27be70729145484e6fe9f
Patch-mainline: v6.6-rc1
References: bsc#1237856

The cpufreq framework used to use the zero of return value to reflect
the cppc_cpufreq_get_rate() had failed to get current frequecy and treat
all positive integer to be succeed. Since cppc_get_perf_ctrs() returns a
negative integer in error case, so it is better to convert the value to
zero as the return value of cppc_cpufreq_get_rate().

Signed-off-by: Liao Chang <liaochang1@huawei.com>
Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
Acked-by: Ivan T. Ivanov <iivanov@suse.de>
---
 drivers/cpufreq/cppc_cpufreq.c |    4 ++--
 include/linux/cpufreq.h        |    2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

--- a/drivers/cpufreq/cppc_cpufreq.c
+++ b/drivers/cpufreq/cppc_cpufreq.c
@@ -849,13 +849,13 @@ static unsigned int cppc_cpufreq_get_rat
 
 	ret = cppc_get_perf_ctrs(cpu, &fb_ctrs_t0);
 	if (ret)
-		return ret;
+		return 0;
 
 	udelay(2); /* 2usec delay between sampling */
 
 	ret = cppc_get_perf_ctrs(cpu, &fb_ctrs_t1);
 	if (ret)
-		return ret;
+		return 0;
 
 	delivered_perf = cppc_perf_from_fbctrs(cpu_data, &fb_ctrs_t0,
 					       &fb_ctrs_t1);
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@ -367,7 +367,7 @@ struct cpufreq_driver {
 	int		(*target_intermediate)(struct cpufreq_policy *policy,
 					       unsigned int index);
 
-	/* should be defined, if possible */
+	/* should be defined, if possible, return 0 on error */
 	unsigned int	(*get)(unsigned int cpu);
 
 	/* Called to update policy limits on firmware notifications. */
