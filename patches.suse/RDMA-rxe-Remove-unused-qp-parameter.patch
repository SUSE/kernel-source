From: Xiao Yang <yangx.jy@fujitsu.com>
Date: Fri, 8 Jul 2022 03:55:50 +0000
Subject: RDMA/rxe: Remove unused qp parameter
Patch-mainline: v6.0-rc1
Git-commit: 68691bad98eeb29342c3c4ac4abc90f9edef79bb
References: jsc#PED-1111

The qp parameter in free_rd_atomic_resource() has become
unused so remove it directly.

Fixes: 15ae1375ea91 ("RDMA/rxe: Fix qp reference counting for atomic ops")
Link: https://lore.kernel.org/all/20220708035547.6592-1-yangx.jy@fujitsu.com/
Signed-off-by: Xiao Yang <yangx.jy@fujitsu.com>
Signed-off-by: Leon Romanovsky <leon@kernel.org>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/sw/rxe/rxe_loc.h  |    2 +-
 drivers/infiniband/sw/rxe/rxe_qp.c   |    6 +++---
 drivers/infiniband/sw/rxe/rxe_resp.c |    2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

--- a/drivers/infiniband/sw/rxe/rxe_loc.h
+++ b/drivers/infiniband/sw/rxe/rxe_loc.h
@@ -145,7 +145,7 @@ static inline int rcv_wqe_size(int max_s
 		max_sge * sizeof(struct ib_sge);
 }
 
-void free_rd_atomic_resource(struct rxe_qp *qp, struct resp_res *res);
+void free_rd_atomic_resource(struct resp_res *res);
 
 static inline void rxe_advance_resp_resource(struct rxe_qp *qp)
 {
--- a/drivers/infiniband/sw/rxe/rxe_qp.c
+++ b/drivers/infiniband/sw/rxe/rxe_qp.c
@@ -120,14 +120,14 @@ static void free_rd_atomic_resources(str
 		for (i = 0; i < qp->attr.max_dest_rd_atomic; i++) {
 			struct resp_res *res = &qp->resp.resources[i];
 
-			free_rd_atomic_resource(qp, res);
+			free_rd_atomic_resource(res);
 		}
 		kfree(qp->resp.resources);
 		qp->resp.resources = NULL;
 	}
 }
 
-void free_rd_atomic_resource(struct rxe_qp *qp, struct resp_res *res)
+void free_rd_atomic_resource(struct resp_res *res)
 {
 	res->type = 0;
 }
@@ -140,7 +140,7 @@ static void cleanup_rd_atomic_resources(
 	if (qp->resp.resources) {
 		for (i = 0; i < qp->attr.max_dest_rd_atomic; i++) {
 			res = &qp->resp.resources[i];
-			free_rd_atomic_resource(qp, res);
+			free_rd_atomic_resource(res);
 		}
 	}
 }
--- a/drivers/infiniband/sw/rxe/rxe_resp.c
+++ b/drivers/infiniband/sw/rxe/rxe_resp.c
@@ -562,7 +562,7 @@ static struct resp_res *rxe_prepare_res(
 
 	res = &qp->resp.resources[qp->resp.res_head];
 	rxe_advance_resp_resource(qp);
-	free_rd_atomic_resource(qp, res);
+	free_rd_atomic_resource(res);
 
 	res->type = type;
 	res->replay = 0;
