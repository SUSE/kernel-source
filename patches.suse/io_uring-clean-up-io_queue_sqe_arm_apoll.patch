From 9881024aab8094a53756c7aee42564306c8e3580 Mon Sep 17 00:00:00 2001
From: Pavel Begunkov <asml.silence@gmail.com>
Date: Tue, 2 Nov 2021 14:38:52 +0000
Subject: [PATCH] io_uring: clean up io_queue_sqe_arm_apoll
Git-commit: 9881024aab8094a53756c7aee42564306c8e3580
Patch-mainline: v5.16-rc1
References: bsc#1205205

The fix for linked timeout unprep got a bit distored with two rebases,
handle linked timeouts for IO_APOLL_READY as with all other cases, i.e.
queue it at the end of the function.

Signed-off-by: Pavel Begunkov <asml.silence@gmail.com>
Link: https://lore.kernel.org/r/130b1ea5605bbd81d7b874a95332295799d33b81.1635863773.git.asml.silence@gmail.com
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>
---
 fs/io_uring.c |    4 ----
 1 file changed, 4 deletions(-)

--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@ -6913,10 +6913,6 @@ static void io_queue_sqe_arm_apoll(struc
 
 	switch (io_arm_poll_handler(req)) {
 	case IO_APOLL_READY:
-		if (linked_timeout) {
-			io_queue_linked_timeout(req);
-			linked_timeout = NULL;
-		}
 		io_req_task_queue(req);
 		break;
 	case IO_APOLL_ABORTED:
