From: Jakub Kicinski <kuba@kernel.org>
Date: Mon, 25 Apr 2022 16:33:09 -0700
Subject: net: tls: fix async vs NIC crypto offload
Patch-mainline: v5.19-rc1
Git-commit: c706b2b5ed74d30436b85cbd8e63e969f6b5873a
References: CVE-2024-26583 CVE-2024-26584 bsc#1220185 bsc#1220186

When NIC takes care of crypto (or the record has already
been decrypted) we forget to update darg->async. ->async
is supposed to mean whether record is async capable on
input and whether record has been queued for async crypto
on output.

Reported-by: Gal Pressman <gal@nvidia.com>
Fixes: 3547a1f9d988 ("tls: rx: use async as an in-out argument")
Tested-by: Gal Pressman <gal@nvidia.com>
Link: https://lore.kernel.org/r/20220425233309.344858-1-kuba@kernel.org
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Michal Kubecek <mkubecek@suse.cz>

---
 net/tls/tls_sw.c | 2 ++
 1 file changed, 2 insertions(+)

--- a/net/tls/tls_sw.c
+++ b/net/tls/tls_sw.c
@@ -1565,6 +1565,7 @@ static int decrypt_skb_update(struct sock *sk, struct sk_buff *skb,
 				goto decrypt_next;
 		} else {
 			darg->zc = false;
+			darg->async = false;
 		}
 
 		pad = padding_length(ctx, prot, skb);
@@ -1580,6 +1581,7 @@ static int decrypt_skb_update(struct sock *sk, struct sk_buff *skb,
 		tls_advance_record_sn(sk, prot, &tls_ctx->rx);
 	} else {
 		darg->zc = false;
+		darg->async = false;
 	}
 
 	return err;
