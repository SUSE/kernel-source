From: Eric Dumazet <edumazet@google.com>
Date: Tue, 20 Aug 2024 16:08:58 +0000
Subject: [PATCH] ipv6: fix possible UAF in ip6_finish_output2()
Git-commit: da273b377ae0d9bd255281ed3c2adb228321687b
Patch-mainline: v6.11-rc5
References: CVE-2024-44986 bsc#1230230

If skb_expand_head() returns NULL, skb has been freed
and associated dst/idev could also have been freed.

We need to hold rcu_read_lock() to make sure the dst and
associated idev are alive.

Fixes: 5796015fa968 ("ipv6: allocate enough headroom in ip6_finish_output2()")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Cc: Vasily Averin <vasily.averin@linux.dev>
Reviewed-by: David Ahern <dsahern@kernel.org>
Link: https://patch.msgid.link/20240820160859.3786976-3-edumazet@google.com
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: David Sterba <dsterba@suse.com>
---
 net/ipv6/ip6_output.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/net/ipv6/ip6_output.c
+++ b/net/ipv6/ip6_output.c
@@ -68,6 +68,8 @@ static int ip6_finish_output2(struct net
 
 	/* Be paranoid, rather than too clever. */
 	if (unlikely(delta > 0) && dev->header_ops) {
+		/* Make sure idev stays alive */
+		rcu_read_lock();
 		/* pskb_expand_head() might crash, if skb is shared */
 		if (skb_shared(skb)) {
 			struct sk_buff *nskb = skb_clone(skb, GFP_ATOMIC);
@@ -88,8 +90,10 @@ static int ip6_finish_output2(struct net
 		}
 		if (!skb) {
 			IP6_INC_STATS(net, ip6_dst_idev(dst), IPSTATS_MIB_OUTDISCARDS);
+			rcu_read_unlock();
 			return -ENOMEM;
 		}
+		rcu_read_unlock();
 	}
 
 	if (ipv6_addr_is_multicast(&ipv6_hdr(skb)->daddr)) {
