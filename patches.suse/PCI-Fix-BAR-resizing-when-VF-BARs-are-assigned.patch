From: =?UTF-8?q?Ilpo=20J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>
Date: Thu, 20 Mar 2025 16:28:37 +0200
Subject: PCI: Fix BAR resizing when VF BARs are assigned
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
References: git-fixes
Git-commit: 9ec19bfa78bd788945e2445b09de7b4482dee432
Patch-mainline: v6.15-rc1

__resource_resize_store() attempts to release all resources of the device
before attempting the resize. The loop, however, only covers standard BARs
(< PCI_STD_NUM_BARS). If a device has VF BARs that are assigned,
pci_reassign_bridge_resources() finds the bridge window still has some
assigned child resources and returns -NOENT which makes
pci_resize_resource() to detect an error and abort the resize.

Change the release loop to cover all resources up to VF BARs which allows
the resize operation to release the bridge windows and attempt to assigned
them again with the different size.

If SR-IOV is enabled, disallow resize as it requires releasing also IOV
resources.

Link: https://lore.kernel.org/r/20250320142837.8027-1-ilpo.jarvinen@linux.intel.com
Fixes: 91fa127794ac ("PCI: Expose PCIe Resizable BAR support via sysfs")
Reported-by: Michał Winiarski <michal.winiarski@intel.com>
Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
Reviewed-by: Alex Williamson <alex.williamson@redhat.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/pci/pci-sysfs.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/drivers/pci/pci-sysfs.c
+++ b/drivers/pci/pci-sysfs.c
@@ -1439,7 +1439,7 @@ static ssize_t resource##n##_resize_stor
 		return -EINVAL;						\
 									\
 	device_lock(dev);						\
-	if (dev->driver) {						\
+	if (dev->driver || pci_num_vf(pdev)) {				\
 		ret = -EBUSY;						\
 		goto unlock;						\
 	}								\
@@ -1461,7 +1461,7 @@ static ssize_t resource##n##_resize_stor
 									\
 	pci_remove_resource_files(pdev);				\
 									\
-	for (i = 0; i < PCI_STD_NUM_BARS; i++) {			\
+	for (i = 0; i < PCI_BRIDGE_RESOURCES; i++) {			\
 		if (pci_resource_len(pdev, i) &&			\
 		    pci_resource_flags(pdev, i) == flags)		\
 			pci_release_resource(pdev, i);			\
