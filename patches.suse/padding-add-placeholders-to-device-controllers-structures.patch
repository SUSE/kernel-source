From: "Ivan T. Ivanov" <iivanov@suse.de>
Date: Fri, 7 Feb 2025 14:56:06 +0200
Subject: padding: add placeholders to device controllers structures
Patch-mainline: Never, kABI
References: git-fixes

Signed-off-by: Ivan T. Ivanov <iivanov@suse.de>
---
 drivers/base/regmap/internal.h           |    2 ++
 drivers/base/soc.c                       |    1 +
 drivers/char/ipmi/ipmi_msghandler.c      |    3 +++
 drivers/clk/clk.c                        |    1 +
 drivers/clk/mediatek/clk-pllfh.h         |    1 +
 drivers/cpufreq/cpufreq_governor.h       |    1 +
 drivers/crypto/caam/blob_gen.c           |    1 +
 drivers/dpll/dpll_core.h                 |    1 +
 drivers/extcon/extcon.h                  |    1 +
 drivers/firmware/imx/imx-scu.c           |    1 +
 drivers/firmware/raspberrypi.c           |    1 +
 drivers/gpio/gpiolib.h                   |    1 +
 drivers/interconnect/qcom/bcm-voter.c    |    1 +
 drivers/media/platform/qcom/venus/core.h |    1 +
 drivers/mmc/host/sdhci.h                 |    2 ++
 drivers/pinctrl/core.h                   |    2 ++
 drivers/regulator/internal.h             |    1 +
 include/acpi/acpi_bus.h                  |    1 +
 include/linux/arm_ffa.h                  |    1 +
 include/linux/coresight.h                |    1 +
 include/linux/dfl.h                      |    1 +
 include/linux/dmaengine.h                |    2 ++
 include/linux/fsi.h                      |    1 +
 include/linux/fwnode.h                   |    1 +
 include/linux/gpio/driver.h              |    1 +
 include/linux/iio/iio.h                  |    1 +
 include/linux/iio/sw_device.h            |    1 +
 include/linux/interconnect-provider.h    |    2 ++
 include/linux/iommu.h                    |    1 +
 include/linux/irqdomain.h                |    2 ++
 include/linux/mfd/core.h                 |    1 +
 include/linux/mmc/host.h                 |    2 ++
 include/linux/most.h                     |    1 +
 include/linux/mux/driver.h               |    2 ++
 include/linux/reset-controller.h         |    1 +
 include/linux/scmi_protocol.h            |    2 ++
 include/linux/slimbus.h                  |    1 +
 include/linux/spi/mxs-spi.h              |    1 +
 include/linux/spmi.h                     |    1 +
 include/soc/tegra/bpmp.h                 |    2 ++
 include/soc/tegra/mc.h                   |    1 +
 sound/soc/sh/fsi.c                       |    1 +
 42 files changed, 54 insertions(+)

--- a/drivers/base/regmap/internal.h
+++ b/drivers/base/regmap/internal.h
@@ -178,6 +178,8 @@ struct regmap {
 
 	/* if set, the regmap core can sleep */
 	bool can_sleep;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct regcache_ops {
--- a/drivers/base/soc.c
+++ b/drivers/base/soc.c
@@ -26,6 +26,7 @@ struct soc_device {
 	struct device dev;
 	struct soc_device_attribute *attr;
 	int soc_dev_num;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static struct bus_type soc_bus_type = {
--- a/drivers/char/ipmi/ipmi_msghandler.c
+++ b/drivers/char/ipmi/ipmi_msghandler.c
@@ -203,6 +203,8 @@ struct ipmi_user {
 
 	/* Free must run in process context for RCU cleanup. */
 	struct work_struct remove_work;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static struct workqueue_struct *remove_work_wq;
@@ -324,6 +326,7 @@ struct bmc_device {
 	struct kref	       usecount;
 	struct work_struct     remove_work;
 	unsigned char	       cc; /* completion code */
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 #define to_bmc_device(x) container_of((x), struct bmc_device, pdev.dev)
 
--- a/drivers/clk/clk.c
+++ b/drivers/clk/clk.c
@@ -108,6 +108,7 @@ struct clk {
 	unsigned long max_rate;
 	unsigned int exclusive_count;
 	struct hlist_node clks_node;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /***           runtime pm          ***/
--- a/drivers/clk/mediatek/clk-pllfh.h
+++ b/drivers/clk/mediatek/clk-pllfh.h
@@ -13,6 +13,7 @@ struct fh_pll_state {
 	void __iomem *base;
 	u32 fh_enable;
 	u32 ssc_rate;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct fh_pll_data {
--- a/drivers/cpufreq/cpufreq_governor.h
+++ b/drivers/cpufreq/cpufreq_governor.h
@@ -44,6 +44,7 @@ struct dbs_data {
 	unsigned int sampling_down_factor;
 	unsigned int up_threshold;
 	unsigned int io_is_busy;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline struct dbs_data *to_dbs_data(struct gov_attr_set *attr_set)
--- a/drivers/crypto/caam/blob_gen.c
+++ b/drivers/crypto/caam/blob_gen.c
@@ -33,6 +33,7 @@
 
 struct caam_blob_priv {
 	struct device jrdev;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct caam_blob_job_result {
--- a/drivers/dpll/dpll_core.h
+++ b/drivers/dpll/dpll_core.h
@@ -34,6 +34,7 @@ struct dpll_device {
 	struct xarray pin_refs;
 	refcount_t refcount;
 	struct list_head registration_list;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/drivers/extcon/extcon.h
+++ b/drivers/extcon/extcon.h
@@ -61,6 +61,7 @@ struct extcon_dev {
 	struct attribute_group attr_g_muex;
 	struct attribute **attrs_muex;
 	struct device_attribute *d_attrs_muex;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #endif /* __LINUX_EXTCON_INTERNAL_H__ */
--- a/drivers/firmware/imx/imx-scu.c
+++ b/drivers/firmware/imx/imx-scu.c
@@ -43,6 +43,7 @@ struct imx_sc_ipc {
 	u32 *msg;
 	u8 rx_size;
 	u8 count;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /*
--- a/drivers/firmware/raspberrypi.c
+++ b/drivers/firmware/raspberrypi.c
@@ -31,6 +31,7 @@ struct rpi_firmware {
 	u32 enabled;
 
 	struct kref consumers;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static DEFINE_MUTEX(transaction_lock);
--- a/drivers/gpio/gpiolib.h
+++ b/drivers/gpio/gpiolib.h
@@ -78,6 +78,7 @@ struct gpio_device {
 	 */
 	struct list_head pin_ranges;
 #endif
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline struct gpio_device *to_gpio_device(struct device *dev)
--- a/drivers/interconnect/qcom/bcm-voter.c
+++ b/drivers/interconnect/qcom/bcm-voter.c
@@ -37,6 +37,7 @@ struct bcm_voter {
 	struct list_head ws_list;
 	struct list_head voter_node;
 	u32 tcs_wait;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static int cmp_vcd(void *priv, const struct list_head *a, const struct list_head *b)
--- a/drivers/media/platform/qcom/venus/core.h
+++ b/drivers/media/platform/qcom/venus/core.h
@@ -498,6 +498,7 @@ struct venus_inst {
 	bool drain_active;
 	enum venus_inst_modes flags;
 	struct ida dpb_ids;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define IS_V1(core)	((core)->res->hfi_version == HFI_VERSION_1XX)
--- a/drivers/mmc/host/sdhci.h
+++ b/drivers/mmc/host/sdhci.h
@@ -615,6 +615,8 @@ struct sdhci_host {
 
 	u64			data_timeout;
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	unsigned long private[] ____cacheline_aligned;
 };
 
--- a/drivers/pinctrl/core.h
+++ b/drivers/pinctrl/core.h
@@ -72,6 +72,7 @@ struct pinctrl_dev {
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *device_root;
 #endif
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -91,6 +92,7 @@ struct pinctrl {
 	struct pinctrl_state *state;
 	struct list_head dt_maps;
 	struct kref users;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/drivers/regulator/internal.h
+++ b/drivers/regulator/internal.h
@@ -56,6 +56,7 @@ struct regulator {
 	struct device_attribute dev_attr;
 	struct regulator_dev *rdev;
 	struct dentry *debugfs;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 extern struct class regulator_class;
--- a/include/acpi/acpi_bus.h
+++ b/include/acpi/acpi_bus.h
@@ -493,6 +493,7 @@ struct acpi_device {
 	struct list_head physical_node_list;
 	struct mutex physical_node_lock;
 	void (*remove)(struct acpi_device *);
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* Non-device subnode */
--- a/include/linux/arm_ffa.h
+++ b/include/linux/arm_ffa.h
@@ -102,6 +102,7 @@ struct ffa_device {
 	uuid_t uuid;
 	struct device dev;
 	const struct ffa_ops *ops;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define to_ffa_dev(d) container_of(d, struct ffa_device, dev)
--- a/include/linux/coresight.h
+++ b/include/linux/coresight.h
@@ -112,6 +112,7 @@ struct coresight_platform_data {
 	int nr_inport;
 	int nr_outport;
 	struct coresight_connection *conns;
+	unsigned long suse_kabi_padding[2]
 };
 
 /**
--- a/include/linux/dfl.h
+++ b/include/linux/dfl.h
@@ -51,6 +51,7 @@ struct dfl_device {
 	u8 dfh_version;
 	unsigned int param_size;
 	void *params;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/linux/dmaengine.h
+++ b/include/linux/dmaengine.h
@@ -349,6 +349,7 @@ struct dma_chan {
 	void *route_data;
 
 	void *private;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -949,6 +950,7 @@ struct dma_device {
 	/* debugfs support */
 	void (*dbg_summary_show)(struct seq_file *s, struct dma_device *dev);
 	struct dentry *dbg_dev_root;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline int dmaengine_slave_config(struct dma_chan *chan,
--- a/include/linux/fsi.h
+++ b/include/linux/fsi.h
@@ -17,6 +17,7 @@ struct fsi_device {
 	struct fsi_slave	*slave;
 	uint32_t		addr;
 	uint32_t		size;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 extern int fsi_device_read(struct fsi_device *dev, uint32_t addr,
--- a/include/linux/fwnode.h
+++ b/include/linux/fwnode.h
@@ -47,6 +47,7 @@ struct fwnode_handle {
 	struct list_head suppliers;
 	struct list_head consumers;
 	u8 flags;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /*
--- a/include/linux/gpio/driver.h
+++ b/include/linux/gpio/driver.h
@@ -529,6 +529,7 @@ struct gpio_chip {
 	int (*of_xlate)(struct gpio_chip *gc,
 			const struct of_phandle_args *gpiospec, u32 *flags);
 #endif /* CONFIG_OF_GPIO */
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 const char *gpiochip_is_requested(struct gpio_chip *gc, unsigned int offset);
--- a/include/linux/iio/iio.h
+++ b/include/linux/iio/iio.h
@@ -595,6 +595,7 @@ struct iio_dev {
 	const struct iio_buffer_setup_ops	*setup_ops;
 
 	void				*priv;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 int iio_device_id(struct iio_dev *indio_dev);
--- a/include/linux/iio/sw_device.h
+++ b/include/linux/iio/sw_device.h
@@ -31,6 +31,7 @@ struct iio_sw_device {
 	struct iio_dev *device;
 	struct iio_sw_device_type *device_type;
 	struct config_group group;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct iio_sw_device_ops {
--- a/include/linux/interconnect-provider.h
+++ b/include/linux/interconnect-provider.h
@@ -71,6 +71,7 @@ struct icc_provider {
 	int			users;
 	bool			inter_set;
 	void			*data;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -109,6 +110,7 @@ struct icc_node {
 	u32			init_avg;
 	u32			init_peak;
 	void			*data;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #if IS_ENABLED(CONFIG_INTERCONNECT)
--- a/include/linux/iommu.h
+++ b/include/linux/iommu.h
@@ -686,6 +686,7 @@ struct iommu_device {
 	struct device *dev;
 	struct iommu_group *singleton_group;
 	u32 max_pasids;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/linux/irqdomain.h
+++ b/include/linux/irqdomain.h
@@ -170,6 +170,8 @@ struct irq_domain {
 	const struct msi_parent_ops	*msi_parent_ops;
 #endif
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	/* reverse map data. The linear map gets appended to the irq_domain */
 	irq_hw_number_t			hwirq_max;
 	unsigned int			revmap_size;
--- a/include/linux/mfd/core.h
+++ b/include/linux/mfd/core.h
@@ -118,6 +118,7 @@ struct mfd_cell {
 	 */
 	int			num_parent_supplies;
 	const char * const	*parent_supplies;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /*
--- a/include/linux/mmc/host.h
+++ b/include/linux/mmc/host.h
@@ -518,6 +518,8 @@ struct mmc_host {
 	struct blk_crypto_profile crypto_profile;
 #endif
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	/* Host Software Queue support */
 	bool			hsq_enabled;
 
--- a/include/linux/most.h
+++ b/include/linux/most.h
@@ -272,6 +272,7 @@ struct most_component {
 	int (*rx_completion)(struct mbo *mbo);
 	int (*tx_completion)(struct most_interface *iface, int channel_idx);
 	int (*cfg_complete)(void);
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/linux/mux/driver.h
+++ b/include/linux/mux/driver.h
@@ -51,6 +51,8 @@ struct mux_control {
 	int idle_state;
 
 	ktime_t last_change;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/linux/reset-controller.h
+++ b/include/linux/reset-controller.h
@@ -77,6 +77,7 @@ struct reset_controller_dev {
 	int (*of_xlate)(struct reset_controller_dev *rcdev,
 			const struct of_phandle_args *reset_spec);
 	unsigned int nr_resets;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #if IS_ENABLED(CONFIG_RESET_CONTROLLER)
--- a/include/linux/scmi_protocol.h
+++ b/include/linux/scmi_protocol.h
@@ -771,6 +771,7 @@ struct scmi_handle {
 				    unsigned int *atomic_threshold);
 
 	const struct scmi_notify_ops *notify_ops;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 enum scmi_std_protocol {
@@ -800,6 +801,7 @@ struct scmi_device {
 	const char *name;
 	struct device dev;
 	struct scmi_handle *handle;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define to_scmi_dev(d) container_of(d, struct scmi_device, dev)
--- a/include/linux/slimbus.h
+++ b/include/linux/slimbus.h
@@ -64,6 +64,7 @@ struct slim_device {
 	bool			is_laddr_valid;
 	struct list_head	stream_list;
 	spinlock_t stream_list_lock;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define to_slim_device(d) container_of(d, struct slim_device, dev)
--- a/include/linux/spi/mxs-spi.h
+++ b/include/linux/spi/mxs-spi.h
@@ -128,6 +128,7 @@ struct mxs_ssp {
 	unsigned int			dma_dir;
 	enum dma_transfer_direction	slave_dirn;
 	u32				ssp_pio_words[SSP_PIO_NUM];
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 void mxs_ssp_set_clk_rate(struct mxs_ssp *ssp, unsigned int rate);
--- a/include/linux/spmi.h
+++ b/include/linux/spmi.h
@@ -40,6 +40,7 @@ struct spmi_device {
 	struct device		dev;
 	struct spmi_controller	*ctrl;
 	u8			usid;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline struct spmi_device *to_spmi_device(struct device *d)
--- a/include/soc/tegra/bpmp.h
+++ b/include/soc/tegra/bpmp.h
@@ -56,6 +56,7 @@ struct tegra_bpmp_channel {
 	struct completion completion;
 	struct tegra_ivc *ivc;
 	unsigned int index;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 typedef void (*tegra_bpmp_mrq_handler_t)(unsigned int mrq,
@@ -104,6 +105,7 @@ struct tegra_bpmp {
 #endif
 
 	bool suspended;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define TEGRA_BPMP_MESSAGE_RESET BIT(0)
--- a/include/soc/tegra/mc.h
+++ b/include/soc/tegra/mc.h
@@ -194,6 +194,7 @@ struct tegra_mc_soc {
 
 	const struct tegra_mc_icc_ops *icc_ops;
 	const struct tegra_mc_ops *ops;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct tegra_mc {
--- a/sound/soc/sh/fsi.c
+++ b/sound/soc/sh/fsi.c
@@ -294,6 +294,7 @@ struct fsi_master {
 	struct fsi_priv fsib;
 	const struct fsi_core *core;
 	spinlock_t lock;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline int fsi_stream_is_play(struct fsi_priv *fsi,
