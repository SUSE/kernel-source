From d3bfbfb1248498656cd25c51e41c1e31219bd0dd Mon Sep 17 00:00:00 2001
From: Kundan Kumar <kundan.kumar@samsung.com>
Date: Wed, 11 Sep 2024 12:19:34 +0530
Subject: [PATCH] mm: release number of pages of a folio
Git-commit: d3bfbfb1248498656cd25c51e41c1e31219bd0dd
Patch-mainline: v6.12-rc1
References: CVE-2025-38256 bsc#1246188

Add a new function unpin_user_folio() to put the refs of a folio by
npages count.

The check for BIO_PAGE_PINNED flag is removed as it is already checked
in bio_release_pages().

Signed-off-by: Kundan Kumar <kundan.kumar@samsung.com>
Tested-by: Luis Chamberlain <mcgrof@kernel.org>
Reviewed-by: Matthew Wilcox (Oracle) <willy@infradead.org>
Link: https://lore.kernel.org/r/20240911064935.5630-4-kundan.kumar@samsung.com
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>
---
 include/linux/mm.h |    1 +
 mm/gup.c           |   13 +++++++++++++
 2 files changed, 14 insertions(+)

--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -1639,6 +1639,7 @@ void unpin_user_pages_dirty_lock(struct
 void unpin_user_page_range_dirty_lock(struct page *page, unsigned long npages,
 				      bool make_dirty);
 void unpin_user_pages(struct page **pages, unsigned long npages);
+void unpin_user_folio(struct folio *folio, unsigned long npages);
 
 static inline bool is_cow_mapping(vm_flags_t flags)
 {
--- a/mm/gup.c
+++ b/mm/gup.c
@@ -400,6 +400,19 @@ void unpin_user_pages_dirty_lock(struct
 EXPORT_SYMBOL(unpin_user_pages_dirty_lock);
 
 /**
+ * unpin_user_folio() - release pages of a folio
+ * @folio:  pointer to folio to be released
+ * @npages: number of pages of same folio
+ *
+ * Release npages of the folio
+ */
+void unpin_user_folio(struct folio *folio, unsigned long npages)
+{
+	gup_put_folio(folio, npages, FOLL_PIN);
+}
+EXPORT_SYMBOL(unpin_user_folio);
+
+/**
  * unpin_user_page_range_dirty_lock() - release and optionally dirty
  * gup-pinned page range
  *
