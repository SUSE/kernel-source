From: Takashi Iwai <tiwai@suse.de>
Subject: Add kABI placeholders for HD-audio
Patch-mainline: Never, kABI padding
References: bsc#1179531

Add a few kABI padding fields to HD-audio objects that are embedded
in other structs.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 include/sound/hda_codec.h   |    6 ++++++
 include/sound/hdaudio.h     |    6 ++++++
 include/sound/hdaudio_ext.h |    4 ++++
 3 files changed, 16 insertions(+)

--- a/include/sound/hda_codec.h
+++ b/include/sound/hda_codec.h
@@ -62,6 +62,8 @@ struct hda_bus {
 
 	int primary_dig_out_type;	/* primary digital out PCM type */
 	unsigned int mixer_assigned;	/* codec addr for mixer name */
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* from hdac_bus to hda_bus */
@@ -143,6 +145,7 @@ struct hda_pcm_stream {
 	unsigned int maxbps;	/* supported max. bit per sample */
 	const struct snd_pcm_chmap_elem *chmap; /* chmap to override */
 	struct hda_pcm_ops ops;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* PCM types */
@@ -167,6 +170,7 @@ struct hda_pcm {
 	struct hda_codec *codec;
 	struct list_head list;
 	unsigned int disconnected:1;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* codec information */
@@ -283,6 +287,8 @@ struct hda_codec {
 
 	/* additional init verbs */
 	struct snd_array verbs;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define dev_to_hda_codec(_dev)	container_of(_dev, struct hda_codec, core.dev)
--- a/include/sound/hdaudio.h
+++ b/include/sound/hdaudio.h
@@ -96,6 +96,8 @@ struct hdac_device {
 	bool caps_overwriting:1; /* caps overwrite being in process */
 	bool cache_coef:1;	/* cache COEF read/write too */
 	unsigned int registered:1; /* codec was registered */
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* device/driver type used for matching */
@@ -380,6 +382,8 @@ struct hdac_bus {
 
 	/* factor used to derive STRIPE control value */
 	unsigned int sdo_limit;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 int snd_hdac_bus_init(struct hdac_bus *bus, struct device *dev,
@@ -564,6 +568,8 @@ struct hdac_stream {
 	/* DSP access mutex */
 	struct mutex dsp_mutex;
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 void snd_hdac_stream_init(struct hdac_bus *bus, struct hdac_stream *azx_dev,
--- a/include/sound/hdaudio_ext.h
+++ b/include/sound/hdaudio_ext.h
@@ -64,6 +64,7 @@ struct hdac_ext_stream {
 	int (*host_setup)(struct hdac_stream *, bool);
 
 	struct snd_pcm_substream *link_substream;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define hdac_stream(s)		(&(s)->hstream)
@@ -101,6 +102,7 @@ struct hdac_ext_link {
 	int ref_count;
 
 	struct list_head list;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 int snd_hdac_ext_bus_link_power_up(struct hdac_ext_link *hlink);
@@ -130,11 +132,13 @@ struct hda_dai_map {
 	char *dai_name;
 	hda_nid_t nid;
 	u32	maxbps;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct hdac_ext_dma_params {
 	u32 format;
 	u8 stream_tag;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 int snd_hda_ext_driver_register(struct hdac_driver *drv);
