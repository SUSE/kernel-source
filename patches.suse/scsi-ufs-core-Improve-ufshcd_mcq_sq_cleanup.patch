From: Bart Van Assche <bvanassche@acm.org>
Date: Tue, 22 Oct 2024 12:31:02 -0700
Subject: scsi: ufs: core: Improve ufshcd_mcq_sq_cleanup()
Git-commit: 2c73fb138da587597c2b02e72dcbeae18af60f4e
Patch-mainline: v6.13-rc1
References: git-fixes

From the UFSHCI specification: "CleanUp Command Return Code (RTC): host
controller sets this return code to provide more details of the cleanup
process. It is valid only when CUS is 1." Hence, do not read RTC if the
CUS bitfield is zero.

[lduncan: hand-applied to match our code]
Cc: Bao D. Nguyen <quic_nguyenb@quicinc.com>
Fixes: 8d7290348992 ("scsi: ufs: mcq: Add supporting functions for MCQ abort")
Signed-off-by: Bart Van Assche <bvanassche@acm.org>
Link: https://lore.kernel.org/r/20241022193130.2733293-7-bvanassche@acm.org
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
Acked-by: Lee Duncan <lduncan@suse.com>
---
 drivers/ufs/core/ufs-mcq.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/drivers/ufs/core/ufs-mcq.c
+++ b/drivers/ufs/core/ufs-mcq.c
@@ -581,6 +581,10 @@ int ufshcd_mcq_sq_cleanup(struct ufs_hba
 	if (err || rtc)
 		dev_err(hba->dev, "%s: failed. hwq=%d, tag=%d err=%d RTC=%d\n",
 			__func__, id, task_tag, err, rtc);
+	else
+		dev_info(hba->dev,
+			 "%s, hwq %d: cleanup return code (RTC) %ld\n",
+			 __func__, id, rtc);
 
 	if (ufshcd_mcq_sq_start(hba, hwq))
 		err = -ETIMEDOUT;
