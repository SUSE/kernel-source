From: Li RongQing <lirongqing@baidu.com>
Date: Thu, 9 Jan 2025 19:10:57 +0800
Subject: net: ethtool: Use hwprov under rcu_read_lock
Patch-mainline: v6.14-rc1
Git-commit: b493f881aaa70ac63a448267bd447ad1eb2b16a1
References: git-fixes

hwprov should be protected by rcu_read_lock to prevent possible UAF

Fixes: 4c61d809cf60 ("net: ethtool: Fix suspicious rcu_dereference usage")
Signed-off-by: Li RongQing <lirongqing@baidu.com>
Acked-by: Kory Maincent <kory.maincent@bootlin.com>

diff with v1: move and use err varialbe, instead of define a new variable

 net/ethtool/common.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

Link: https://patch.msgid.link/20250109111057.4746-1-lirongqing@baidu.com
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 net/ethtool/common.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/net/ethtool/common.c
+++ b/net/ethtool/common.c
@@ -851,6 +851,7 @@ int __ethtool_get_ts_info(struct net_dev
 			  struct kernel_ethtool_ts_info *info)
 {
 	struct hwtstamp_provider *hwprov;
+	int err = 0;
 
 	rcu_read_lock();
 	hwprov = rcu_dereference(dev->hwprov);
@@ -858,7 +859,6 @@ int __ethtool_get_ts_info(struct net_dev
 	if (!hwprov) {
 		const struct ethtool_ops *ops = dev->ethtool_ops;
 		struct phy_device *phydev = dev->phydev;
-		int err = 0;
 
 		ethtool_init_tsinfo(info);
 		if (phy_is_default_hwtstamp(phydev) &&
@@ -874,8 +874,9 @@ int __ethtool_get_ts_info(struct net_dev
 		return err;
 	}
 
+	err = ethtool_get_ts_info_by_phc(dev, info, &hwprov->desc);
 	rcu_read_unlock();
-	return ethtool_get_ts_info_by_phc(dev, info, &hwprov->desc);
+	return err;
 }
 
 bool net_support_hwtstamp_qualifier(struct net_device *dev,
