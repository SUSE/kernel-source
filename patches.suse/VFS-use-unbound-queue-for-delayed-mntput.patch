From: NeilBrown <neilb@suse.de>
Subject: VFS: use system_unbound_wq for delayed_mntput
Patch-mainline: never, fixed a different way
References: bsc#1234683

delayed_mntput needs to free all cached pages for all cached inodes for
a filesystem being unmounted.  This can take a long time.  Easily long
enough to trigger the workqueue lockup detector.  Even though the code
calls cond_resched() as appropriate it doesn't schedule if the only
contention comes from other work items.

This was fixed upstream by
Commit: 616db8779b1e ("workqueue: Automatically mark CPU-hogging work items CPU_INTENSIVE")
which switches tasks like this to "cpu_intensive" so that other work can
run at the same time.

Rather than backport that, which might have unexpected consequences,
change delayed_mntput to use system_unbound_wq which is a work queue
were cpu intensive tasks are more welcome.

Signed-off-by: NeilBrown <neilb@suse.de>

---
 fs/namespace.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1216,7 +1216,7 @@ static void mntput_no_expire(struct moun
 				return;
 		}
 		if (llist_add(&mnt->mnt_llist, &delayed_mntput_list))
-			schedule_delayed_work(&delayed_mntput_work, 1);
+			queue_delayed_work(system_unbound_wq, &delayed_mntput_work, 1);
 		return;
 	}
 	cleanup_mnt(mnt);
