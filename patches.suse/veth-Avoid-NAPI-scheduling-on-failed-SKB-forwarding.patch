From c7be1725280514548af3ab0d7d67378a65f2862c Mon Sep 17 00:00:00 2001
From: Liang Chen <liangchen.linux@gmail.com>
Date: Thu, 24 Aug 2023 20:31:31 +0800
Subject: [PATCH 02/18] veth: Avoid NAPI scheduling on failed SKB forwarding
Git-commit: 215eb9f962091ebaab96be2c18cf5d0f5174a4d6
Patch-mainline: v6.6-rc1
References: git-fixes

When an skb fails to be forwarded to the peer(e.g., skb data buffer
length exceeds MTU), it will not be added to the peer's receive queue.
Therefore, we should schedule the peer's NAPI poll function only when
skb forwarding is successful to avoid unnecessary overhead.

Signed-off-by: Liang Chen <liangchen.linux@gmail.com>
Link: https://lore.kernel.org/r/20230824123131.7673-1-liangchen.linux@gmail.com
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Signed-off-by: Denis Kirjanov <denis.kirjanov@suse.com>
---
 drivers/net/veth.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/net/veth.c b/drivers/net/veth.c
index e28d631f6cf5..2a279e8a1792 100644
--- a/drivers/net/veth.c
+++ b/drivers/net/veth.c
@@ -363,14 +363,13 @@ static netdev_tx_t veth_xmit(struct sk_b
 	if (likely(veth_forward_skb(rcv, skb, rq, use_napi) == NET_RX_SUCCESS)) {
 		if (!use_napi)
 			dev_lstats_add(dev, length);
+		else
+			__veth_xdp_flush(rq);
 	} else {
 drop:
 		atomic64_inc(&priv->dropped);
 	}
 
-	if (use_napi)
-		__veth_xdp_flush(rq);
-
 	rcu_read_unlock();
 
 	return NETDEV_TX_OK;
-- 
2.16.4

