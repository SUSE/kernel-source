From: Filipe Manana <fdmanana@suse.com>
Date: Wed, 14 May 2025 12:18:07 +0100
Subject: [PATCH] btrfs: don't return VM_FAULT_SIGBUS on failure to set
 delalloc for mmap write
Git-commit: d8cddf2a1d71ab9dea59822ccb9bbb780f50ce0a
Patch-mainline: v6.16-rc1
References: bsc#1247949

If the call to btrfs_set_extent_delalloc() fails we are always returning
VM_FAULT_SIGBUS, which is odd since the error means "bad access" and the
most likely cause for btrfs_set_extent_delalloc() is -ENOMEM, which should
be translated to VM_FAULT_OOM.

Instead of returning VM_FAULT_SIGBUS return vmf_error(ret2), which gives
us a more appropriate return value, and we use that everywhere else too.

Reviewed-by: Qu Wenruo <wqu@suse.com>
Signed-off-by: Filipe Manana <fdmanana@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
---
 fs/btrfs/file.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/fs/btrfs/file.c b/fs/btrfs/file.c
index 95def6286..e95c271f3 100644
--- a/fs/btrfs/file.c
+++ b/fs/btrfs/file.c
@@ -2004,7 +2004,7 @@ static vm_fault_t btrfs_page_mkwrite(struct vm_fault *vmf)
 					&cached_state);
 	if (ret2) {
 		unlock_extent(io_tree, page_start, page_end, &cached_state);
-		ret = VM_FAULT_SIGBUS;
+		ret = vmf_error(ret2);
 		goto out_unlock;
 	}
 
-- 
2.35.3

