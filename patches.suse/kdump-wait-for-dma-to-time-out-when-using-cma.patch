From: Jiri Bohac <jbohac@suse.cz>
Subject: kdump: wait for DMA to time out when using CMA
Patch-mainline: Submitted, 2023-11-24 https://lore.kernel.org/lkml/ZWD_fAPqEWkFlEkM@dwarf.suse.cz/
References: jsc#PED-7249

When re-using the CMA area for kdump there is a risk
of pending DMA into pinned user pages in the CMA area.

Pages that are pinned long-term are migrated away from CMA, so these are not a
concern. Only pages pinned without the FOLL_LONGTERM.

Waiting for 1 second before reusing them should be safe enough for the
purpose of kdump.

Signed-off-by: Jiri Bohac <jbohac@suse.cz>
---
 kernel/crash_core.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/kernel/crash_core.c b/kernel/crash_core.c
index c1048893f4b6..c6579fd22bc9 100644
--- a/kernel/crash_core.c
+++ b/kernel/crash_core.c
@@ -21,6 +21,7 @@
 #include <linux/reboot.h>
 #include <linux/btf.h>
 #include <linux/objtool.h>
+#include <linux/delay.h>
 
 #include <asm/page.h>
 #include <asm/sections.h>
@@ -30,6 +31,8 @@
 #include "kallsyms_internal.h"
 #include "kexec_internal.h"
 
+#define CMA_DMA_TIMEOUT_MSEC 1000
+
 /* Per cpu memory for storing cpu states in case of system crash. */
 note_buf_t __percpu *crash_notes;
 
@@ -97,6 +100,14 @@ int kexec_crash_loaded(void)
 }
 EXPORT_SYMBOL_GPL(kexec_crash_loaded);
 
+static void crash_cma_clear_pending_dma(void)
+{
+	if (!crashk_cma_cnt)
+		return;
+
+	mdelay(CMA_DMA_TIMEOUT_MSEC);
+}
+
 /*
  * No panic_cpu check version of crash_kexec().  This function is called
  * only when panic_cpu holds the current CPU number; this is the only CPU
@@ -116,6 +127,7 @@ void __noclone __crash_kexec(struct pt_regs *regs)
 		if (kexec_crash_image) {
 			struct pt_regs fixed_regs;
 
+			crash_cma_clear_pending_dma();
 			crash_setup_regs(&fixed_regs, regs);
 			crash_save_vmcoreinfo();
 			machine_crash_shutdown(&fixed_regs);
-- 
2.46.0

