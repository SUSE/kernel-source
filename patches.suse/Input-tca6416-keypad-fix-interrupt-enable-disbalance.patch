From cc141c35af873c6796e043adcb820833bd8ef8c5 Mon Sep 17 00:00:00 2001
From: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Date: Sun, 23 Jul 2023 22:30:20 -0700
Subject: [PATCH] Input: tca6416-keypad - fix interrupt enable disbalance
Git-commit: cc141c35af873c6796e043adcb820833bd8ef8c5
References: git-fixes
Patch-mainline: v6.6-rc1

The driver has been switched to use IRQF_NO_AUTOEN, but in the error
unwinding and remove paths calls to enable_irq() were left in place, which
will lead to an incorrect enable counter value.

Fixes: bcd9730a04a1 ("Input: move to use request_irq by IRQF_NO_AUTOEN flag")
Link: https://lore.kernel.org/r/20230724053024.352054-3-dmitry.torokhov@gmail.com
Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
Signed-off-by: Oliver Neukum <oneukum@suse.com>
---
 drivers/input/keyboard/tca6416-keypad.c |    8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

--- a/drivers/input/keyboard/tca6416-keypad.c
+++ b/drivers/input/keyboard/tca6416-keypad.c
@@ -297,10 +297,8 @@ static int tca6416_keypad_probe(struct i
 	return 0;
 
 fail2:
-	if (!chip->use_polling) {
+	if (!chip->use_polling)
 		free_irq(chip->irqnum, chip);
-		enable_irq(chip->irqnum);
-	}
 fail1:
 	input_free_device(input);
 	kfree(chip);
@@ -311,10 +309,8 @@ static int tca6416_keypad_remove(struct
 {
 	struct tca6416_keypad_chip *chip = i2c_get_clientdata(client);
 
-	if (!chip->use_polling) {
+	if (!chip->use_polling)
 		free_irq(chip->irqnum, chip);
-		enable_irq(chip->irqnum);
-	}
 
 	input_unregister_device(chip->input);
 	kfree(chip);
