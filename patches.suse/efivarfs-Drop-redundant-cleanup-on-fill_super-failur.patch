From: Ard Biesheuvel <ardb@kernel.org>
Date: Sat, 24 Feb 2024 18:45:41 +0100
Subject: efivarfs: Drop redundant cleanup on fill_super() failure
Patch-mainline: v6.8-rc7
Git-commit: 9ca01c7adf3993044f59934082087ebb9f7df6d5
References: jsc#PED-11167

Al points out that kill_sb() will be called if efivarfs_fill_super()
fails and so there is no point in cleaning up the efivar entry list.

Reported-by: Alexander Viro <viro@zeniv.linux.org.uk>
Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
Acked-by: Chun-Yi Lee <jlee@suse.com>
---
 fs/efivarfs/super.c |    7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

--- a/fs/efivarfs/super.c
+++ b/fs/efivarfs/super.c
@@ -341,12 +341,7 @@ static int efivarfs_fill_super(struct su
 	if (err)
 		return err;
 
-	err = efivar_init(efivarfs_callback, (void *)sb, true,
-			  &sfi->efivarfs_list);
-	if (err)
-		efivar_entry_iter(efivarfs_destroy, &sfi->efivarfs_list, NULL);
-
-	return err;
+	return efivar_init(efivarfs_callback, sb, true, &sfi->efivarfs_list);
 }
 
 static int efivarfs_get_tree(struct fs_context *fc)
