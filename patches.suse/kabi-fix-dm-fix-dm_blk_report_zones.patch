From: Martin Wilck <mwilck@suse.de>
Date: Tue, 11 Jurl 2025 09:52:08 +0200
Subject: kabi: fix dm-fix-dm_blk_report_zones.patch
Patch-mainline: Never, kabi workaround
References: CVE-2025-38140 bsc#1245717

The patch "dm: fix dm_blk_report_zones" adds a new member 
revalidate_map_task to struct mapped_device. Move it to the end
of the struct and hide it from genksyms.

This should be safe because:

a) struct mapped_device is not embedded in other structures in the kernel,
and there are no arrays of this type.
b) it's an internal struct of the dm layer (defined in dm-core.h)
c) Even in the kernel itself, outside the core dm code it is only visible
as an opaque type and only accessed through pointers and with accessors
like dm_device_name().
d) There are no copy operations between struct mapped_device objects.
e) mapped_device objects are only created and destroyed by internal dm
functions dm_create(), dm_destroy(), etc.

---
 drivers/md/dm-core.h |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/drivers/md/dm-core.h
+++ b/drivers/md/dm-core.h
@@ -141,12 +141,16 @@ struct mapped_device {
 #ifdef CONFIG_BLK_DEV_ZONED
 	unsigned int nr_zones;
 	void *zone_revalidate_map;
-	struct task_struct *revalidate_map_task;
 #endif
 
 #ifdef CONFIG_IMA
 	struct dm_ima_measurements ima;
 #endif
+#ifndef __GENKSYMS__
+#ifdef CONFIG_BLK_DEV_ZONED
+	struct task_struct *revalidate_map_task;
+#endif
+#endif
 };
 
 /*
