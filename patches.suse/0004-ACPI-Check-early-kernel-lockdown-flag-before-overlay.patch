From d8cb96c98e5e45214cf97b78a8e79e8ef2651de4 Mon Sep 17 00:00:00 2001
From: Chun-Yi Lee <jlee@suse.com>
Date: Thu, 19 Dec 2024 16:36:15 +0800
Subject: [PATCH 4/5] ACPI: Check early kernel lockdown flag before overlaying
 tables
Patch-mainline: Never, temporary solution
References: bsc#1234646

This patch adds the codes for Checking the early kernel locdown flag
before overlaying ACPI tables in early boot stage.

Signed-off-by: Chun-Yi Lee <jlee@suse.com>
---
 drivers/acpi/osl.c         | 3 ++-
 drivers/acpi/tables.c      | 3 ++-
 drivers/firmware/efi/efi.c | 7 ++++++-
 3 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/drivers/acpi/osl.c b/drivers/acpi/osl.c
index 70af3fbbe..ce827a06d 100644
--- a/drivers/acpi/osl.c
+++ b/drivers/acpi/osl.c
@@ -197,7 +197,8 @@ acpi_physical_address __init acpi_os_get_root_pointer(void)
 	 * specific location (if appropriate) so it can be carried
 	 * over further kexec()s.
 	 */
-	if (acpi_rsdp && !security_locked_down(LOCKDOWN_ACPI_TABLES)) {
+	if (acpi_rsdp && !security_locked_down(LOCKDOWN_ACPI_TABLES) &&
+	    !kernel_is_locked_down_early(LOCKDOWN_ACPI_TABLES)) {
 		acpi_arch_set_root_pointer(acpi_rsdp);
 		return acpi_rsdp;
 	}
diff --git a/drivers/acpi/tables.c b/drivers/acpi/tables.c
index 9e1b01c35..76f54f131 100644
--- a/drivers/acpi/tables.c
+++ b/drivers/acpi/tables.c
@@ -486,7 +486,8 @@ void __init acpi_table_upgrade(void)
 	if (table_nr == 0)
 		return;
 
-	if (security_locked_down(LOCKDOWN_ACPI_TABLES)) {
+	if (kernel_is_locked_down_early(LOCKDOWN_ACPI_TABLES) ||
+	    security_locked_down(LOCKDOWN_ACPI_TABLES)) {
 		pr_notice("kernel is locked down, ignoring table override\n");
 		return;
 	}
diff --git a/drivers/firmware/efi/efi.c b/drivers/firmware/efi/efi.c
index 70490bf26..61960b2f4 100644
--- a/drivers/firmware/efi/efi.c
+++ b/drivers/firmware/efi/efi.c
@@ -254,7 +254,12 @@ EXPORT_SYMBOL_GPL(efivars_generic_ops_unregister);
 static char efivar_ssdt[EFIVAR_SSDT_NAME_MAX] __initdata;
 static int __init efivar_ssdt_setup(char *str)
 {
-	int ret = security_locked_down(LOCKDOWN_ACPI_TABLES);
+	int ret = kernel_is_locked_down_early(LOCKDOWN_ACPI_TABLES);
+
+	if (ret)
+		return ret;
+
+	ret = security_locked_down(LOCKDOWN_ACPI_TABLES);
 
 	if (ret)
 		return ret;
-- 
2.35.3

