From: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
Date: Wed, 12 Mar 2025 10:52:49 +0100
Subject: [PATCH] devlink: fix xa_alloc_cyclic() error handling
Git-commit: f3b97b7d4bf316c3991e5634c9f4847c2df35478
Patch-mainline: v6.14
References: CVE-2025-22017 bsc#1240936

In case of returning 1 from xa_alloc_cyclic() (wrapping) ERR_PTR(1) will
be returned, which will cause IS_ERR() to be false. Which can lead to
dereference not allocated pointer (rel).

Fix it by checking if err is lower than zero.

This wasn't found in real usecase, only noticed. Credit to Pierre.

Fixes: c137743bce02 ("devlink: introduce object and nested devlink relationship infra")
Signed-off-by: Michal Swiatkowski <michal.swiatkowski@linux.intel.com>
Reviewed-by: Andrew Lunn <andrew@lunn.ch>
Reviewed-by: Jiri Pirko <jiri@nvidia.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Signed-off-by: David Sterba <dsterba@suse.com>
---
 net/devlink/core.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/net/devlink/core.c
+++ b/net/devlink/core.c
@@ -117,7 +117,7 @@ static struct devlink_rel *devlink_rel_a
 
 	err = xa_alloc_cyclic(&devlink_rels, &rel->index, rel,
 			      xa_limit_32b, &next, GFP_KERNEL);
-	if (err) {
+	if (err < 0) {
 		kfree(rel);
 		return ERR_PTR(err);
 	}
