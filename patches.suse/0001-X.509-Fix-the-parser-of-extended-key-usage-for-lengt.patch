From 3cd6df755fda70be278c9c865a93f14096dc4f70 Mon Sep 17 00:00:00 2001
From: Chun-Yi Lee <jlee@suse.com>
Date: Mon, 1 Jul 2024 21:12:49 +0800
Subject: [PATCH] X.509: Fix the parser of extended key usage for length
Patch-mainline: Never, SUSE-specific
References: bsc#1218820

Not all EKU's (Extended Key Usage extention) length of OID are 8
bytes. This patch fix the logic for checking the length in EKU
parser.

Signed-off-by: Chun-Yi Lee <jlee@suse.com>
---
 crypto/asymmetric_keys/x509_cert_parser.c | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

diff --git a/crypto/asymmetric_keys/x509_cert_parser.c b/crypto/asymmetric_keys/x509_cert_parser.c
index ec40b433d..4a839ddb7 100644
--- a/crypto/asymmetric_keys/x509_cert_parser.c
+++ b/crypto/asymmetric_keys/x509_cert_parser.c
@@ -580,16 +580,23 @@ int x509_process_extension(void *context, size_t hdrlen,
 		i += 2;
 
 		while (i < vlen) {
-			/* A 10 bytes EKU OID Octet blob =
-			 * ASN1_OID + size byte + 8 bytes OID */
-			if (v[i] != ASN1_OID || v[i + 1] != 8 || (i + 10) > vlen)
+			int oid_size = v[i + 1];
+
+			/* e.g. A 10 bytes EKU OID Octet blob =
+			 * 1 byte ASN1_OID + 1 byte size + 8 bytes OID */
+			if (v[i] != ASN1_OID || (i + 2 + oid_size) > vlen)
 				return -EBADMSG;
 
-			oid = look_up_OID(v + i + 2, v[i + 1]);
+			/* (v + i + 2) is the start address of oid data */
+			oid = look_up_OID(v + i + 2, oid_size);
 			if (oid == OID_codeSigning) {
 				ctx->cert->pub->eku |= EKU_codeSigning;
+			} else if (oid == OID__NR) {
+				char buffer[50];
+				sprint_oid(v + i + 2, oid_size, buffer, sizeof(buffer));
+				pr_debug("Unknown extKeyUsage: %s\n", buffer);
 			}
-			i += 10;
+			i += (2 + oid_size);
 		}
 		pr_debug("extKeyUsage: %d\n", ctx->cert->pub->eku);
 		return 0;
-- 
2.35.3

