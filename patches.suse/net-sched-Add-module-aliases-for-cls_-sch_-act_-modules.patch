From: =?utf-8?b?TWljaGFsIEtvdXRuw70gPG1rb3V0bnlAc3VzZS5jb20+?=
Date: Thu, 1 Feb 2024 14:09:41 +0100
Subject: net/sched: Add module aliases for cls_,sch_,act_ modules
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Git-commit: 241a94abcf465ba9363d93168da5ddd47002930f
Patch-mainline: v6.8 or v6.8-rc8 (next release)
References: bsc#1210335 CVE-2023-1829

No functional change intended, aliases will be used in followup commits.
Note for backporters: you may need to add aliases also for modules that
are already removed in mainline kernel but still in your version.

Patches were generated with the help of Coccinelle scripts like:

cat >scripts/coccinelle/misc/tcf_alias.cocci <<EOD
virtual patch
virtual report

@ haskernel @
@@

@ tcf_has_kind depends on report && haskernel @
identifier ops;
constant K;
@@

  static struct tcf_proto_ops ops = {
    .kind = K,
    ...
  };
+char module_alias = K;
EOD

/usr/bin/spatch -D report --cocci-file scripts/coccinelle/misc/tcf_alias.cocci \
        --dir . \
        -I ./arch/x86/include -I ./arch/x86/include/generated -I ./include \
        -I ./arch/x86/include/uapi -I ./arch/x86/include/generated/uapi \
        -I ./include/uapi -I ./include/generated/uapi \
        --include ./include/linux/compiler-version.h --include ./include/linux/kconfig.h \
        --jobs 8 --chunksize 1 2>/dev/null | \
        sed 's/char module_alias = "\([^"]*\)";/MODULE_ALIAS_NET_CLS("\1");/'

And analogously for:

  static struct tc_action_ops ops = {
    .kind = K,

  static struct Qdisc_ops ops = {
    .id = K,

(Someone familiar would be able to fit those into one .cocci file
without sed post processing.)

Signed-off-by: Michal Koutn√Ω <mkoutny@suse.com>
Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
Reviewed-by: Jiri Pirko <jiri@nvidia.com>
Link: https://lore.kernel.org/r/20240201130943.19536-3-mkoutny@suse.com
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
[mkoutny: Add aliases to act_ipt.c removed in ba24ea129126 ("net/sched: Retire ipt action") v6.8-rc1~131^2~70^2~1]
[mkoutny: Add aliases to cls_rsvp.h removed in 265b4da82dbf ("net/sched: Retire rsvp classifier") v6.3-rc1~162^2~45^2]
[mkoutny: Add aliases to cls_tcindex.c removed in 8c710f75256b ("net/sched: Retire tcindex classifier") v6.3-rc1~162^2~45^2~1]
[mkoutny: Add aliases to sch_dsmark.c removed in bbe77c14ee61 ("net/sched: Retire dsmark qdisc") v6.3-rc1~162^2~45^2~2]
[mkoutny: Add aliases to sch_atm.c removed in fb38306ceb9e ("net/sched: Retire ATM qdisc") v6.3-rc1~162^2~45^2~3]
[mkoutny: Add aliases to sch_cbq.c removed in 051d44209842 ("net/sched: Retire CBQ qdisc") v6.3-rc1~162^2~45^2~4]
---
 net/sched/act_bpf.c        |    1 +
 net/sched/act_connmark.c   |    1 +
 net/sched/act_csum.c       |    1 +
 net/sched/act_ct.c         |    1 +
 net/sched/act_ctinfo.c     |    1 +
 net/sched/act_gact.c       |    1 +
 net/sched/act_gate.c       |    1 +
 net/sched/act_ife.c        |    1 +
 net/sched/act_ipt.c        |    2 ++
 net/sched/act_mirred.c     |    1 +
 net/sched/act_mpls.c       |    1 +
 net/sched/act_nat.c        |    1 +
 net/sched/act_pedit.c      |    1 +
 net/sched/act_police.c     |    1 +
 net/sched/act_sample.c     |    1 +
 net/sched/act_simple.c     |    1 +
 net/sched/act_skbedit.c    |    1 +
 net/sched/act_skbmod.c     |    1 +
 net/sched/act_tunnel_key.c |    1 +
 net/sched/act_vlan.c       |    1 +
 net/sched/cls_basic.c      |    1 +
 net/sched/cls_bpf.c        |    1 +
 net/sched/cls_cgroup.c     |    1 +
 net/sched/cls_flow.c       |    1 +
 net/sched/cls_flower.c     |    1 +
 net/sched/cls_fw.c         |    1 +
 net/sched/cls_matchall.c   |    1 +
 net/sched/cls_route.c      |    1 +
 net/sched/cls_rsvp.h       |    1 +
 net/sched/cls_tcindex.c    |    1 +
 net/sched/cls_u32.c        |    1 +
 net/sched/sch_atm.c        |    1 +
 net/sched/sch_cake.c       |    1 +
 net/sched/sch_cbq.c        |    1 +
 net/sched/sch_cbs.c        |    1 +
 net/sched/sch_choke.c      |    1 +
 net/sched/sch_codel.c      |    1 +
 net/sched/sch_drr.c        |    1 +
 net/sched/sch_dsmark.c     |    1 +
 net/sched/sch_etf.c        |    1 +
 net/sched/sch_ets.c        |    1 +
 net/sched/sch_fq.c         |    1 +
 net/sched/sch_fq_codel.c   |    1 +
 net/sched/sch_gred.c       |    1 +
 net/sched/sch_hfsc.c       |    1 +
 net/sched/sch_hhf.c        |    1 +
 net/sched/sch_htb.c        |    1 +
 net/sched/sch_ingress.c    |    2 ++
 net/sched/sch_mqprio.c     |    1 +
 net/sched/sch_multiq.c     |    1 +
 net/sched/sch_netem.c      |    1 +
 net/sched/sch_pie.c        |    1 +
 net/sched/sch_plug.c       |    1 +
 net/sched/sch_prio.c       |    1 +
 net/sched/sch_qfq.c        |    1 +
 net/sched/sch_red.c        |    1 +
 net/sched/sch_sfb.c        |    1 +
 net/sched/sch_sfq.c        |    1 +
 net/sched/sch_skbprio.c    |    1 +
 net/sched/sch_taprio.c     |    1 +
 net/sched/sch_tbf.c        |    1 +
 61 files changed, 63 insertions(+)

--- a/net/sched/act_bpf.c
+++ b/net/sched/act_bpf.c
@@ -419,6 +419,7 @@ static struct tc_action_ops act_bpf_ops
 	.lookup		=	tcf_bpf_search,
 	.size		=	sizeof(struct tcf_bpf),
 };
+MODULE_ALIAS_NET_ACT("bpf");
 
 static __net_init int bpf_init_net(struct net *net)
 {
--- a/net/sched/act_connmark.c
+++ b/net/sched/act_connmark.c
@@ -228,6 +228,7 @@ static struct tc_action_ops act_connmark
 	.lookup		=	tcf_connmark_search,
 	.size		=	sizeof(struct tcf_connmark_info),
 };
+MODULE_ALIAS_NET_ACT("connmark");
 
 static __net_init int connmark_init_net(struct net *net)
 {
--- a/net/sched/act_csum.c
+++ b/net/sched/act_csum.c
@@ -728,6 +728,7 @@ static struct tc_action_ops act_csum_ops
 	.offload_act_setup = tcf_csum_offload_act_setup,
 	.size		= sizeof(struct tcf_csum),
 };
+MODULE_ALIAS_NET_ACT("csum");
 
 static __net_init int csum_init_net(struct net *net)
 {
--- a/net/sched/act_ct.c
+++ b/net/sched/act_ct.c
@@ -1535,6 +1535,7 @@ static struct tc_action_ops act_ct_ops =
 	.offload_act_setup =	tcf_ct_offload_act_setup,
 	.size		=	sizeof(struct tcf_ct),
 };
+MODULE_ALIAS_NET_ACT("ct");
 
 static __net_init int ct_init_net(struct net *net)
 {
--- a/net/sched/act_ctinfo.c
+++ b/net/sched/act_ctinfo.c
@@ -381,6 +381,7 @@ static struct tc_action_ops act_ctinfo_o
 	.lookup	= tcf_ctinfo_search,
 	.size	= sizeof(struct tcf_ctinfo),
 };
+MODULE_ALIAS_NET_ACT("ctinfo");
 
 static __net_init int ctinfo_init_net(struct net *net)
 {
--- a/net/sched/act_gact.c
+++ b/net/sched/act_gact.c
@@ -304,6 +304,7 @@ static struct tc_action_ops act_gact_ops
 	.offload_act_setup =	tcf_gact_offload_act_setup,
 	.size		=	sizeof(struct tcf_gact),
 };
+MODULE_ALIAS_NET_ACT("gact");
 
 static __net_init int gact_init_net(struct net *net)
 {
--- a/net/sched/act_gate.c
+++ b/net/sched/act_gate.c
@@ -661,6 +661,7 @@ static struct tc_action_ops act_gate_ops
 	.offload_act_setup =	tcf_gate_offload_act_setup,
 	.size		=	sizeof(struct tcf_gate),
 };
+MODULE_ALIAS_NET_ACT("gate");
 
 static __net_init int gate_init_net(struct net *net)
 {
--- a/net/sched/act_ife.c
+++ b/net/sched/act_ife.c
@@ -907,6 +907,7 @@ static struct tc_action_ops act_ife_ops
 	.lookup = tcf_ife_search,
 	.size =	sizeof(struct tcf_ife_info),
 };
+MODULE_ALIAS_NET_ACT("ife");
 
 static __net_init int ife_init_net(struct net *net)
 {
--- a/net/sched/act_ipt.c
+++ b/net/sched/act_ipt.c
@@ -345,6 +345,7 @@ static struct tc_action_ops act_ipt_ops
 	.lookup		=	tcf_ipt_search,
 	.size		=	sizeof(struct tcf_ipt),
 };
+MODULE_ALIAS_NET_ACT("ipt");
 
 static __net_init int ipt_init_net(struct net *net)
 {
@@ -394,6 +395,7 @@ static struct tc_action_ops act_xt_ops =
 	.lookup		=	tcf_xt_search,
 	.size		=	sizeof(struct tcf_ipt),
 };
+MODULE_ALIAS_NET_ACT("xt");
 
 static __net_init int xt_init_net(struct net *net)
 {
--- a/net/sched/act_mirred.c
+++ b/net/sched/act_mirred.c
@@ -523,6 +523,7 @@ static struct tc_action_ops act_mirred_o
 	.size		=	sizeof(struct tcf_mirred),
 	.get_dev	=	tcf_mirred_get_dev,
 };
+MODULE_ALIAS_NET_ACT("mirred");
 
 static __net_init int mirred_init_net(struct net *net)
 {
--- a/net/sched/act_mpls.c
+++ b/net/sched/act_mpls.c
@@ -449,6 +449,7 @@ static struct tc_action_ops act_mpls_ops
 	.offload_act_setup =	tcf_mpls_offload_act_setup,
 	.size		=	sizeof(struct tcf_mpls),
 };
+MODULE_ALIAS_NET_ACT("mpls");
 
 static __net_init int mpls_init_net(struct net *net)
 {
--- a/net/sched/act_nat.c
+++ b/net/sched/act_nat.c
@@ -317,6 +317,7 @@ static struct tc_action_ops act_nat_ops
 	.lookup		=	tcf_nat_search,
 	.size		=	sizeof(struct tcf_nat),
 };
+MODULE_ALIAS_NET_ACT("nat");
 
 static __net_init int nat_init_net(struct net *net)
 {
--- a/net/sched/act_pedit.c
+++ b/net/sched/act_pedit.c
@@ -535,6 +535,7 @@ static struct tc_action_ops act_pedit_op
 	.offload_act_setup =	tcf_pedit_offload_act_setup,
 	.size		=	sizeof(struct tcf_pedit),
 };
+MODULE_ALIAS_NET_ACT("pedit");
 
 static __net_init int pedit_init_net(struct net *net)
 {
--- a/net/sched/act_police.c
+++ b/net/sched/act_police.c
@@ -505,6 +505,7 @@ static struct tc_action_ops act_police_o
 	.offload_act_setup =	tcf_police_offload_act_setup,
 	.size		=	sizeof(struct tcf_police),
 };
+MODULE_ALIAS_NET_ACT("police");
 
 static __net_init int police_init_net(struct net *net)
 {
--- a/net/sched/act_sample.c
+++ b/net/sched/act_sample.c
@@ -327,6 +327,7 @@ static struct tc_action_ops act_sample_o
 	.offload_act_setup    = tcf_sample_offload_act_setup,
 	.size	  = sizeof(struct tcf_sample),
 };
+MODULE_ALIAS_NET_ACT("sample");
 
 static __net_init int sample_init_net(struct net *net)
 {
--- a/net/sched/act_simple.c
+++ b/net/sched/act_simple.c
@@ -227,6 +227,7 @@ static struct tc_action_ops act_simp_ops
 	.lookup		=	tcf_simp_search,
 	.size		=	sizeof(struct tcf_defact),
 };
+MODULE_ALIAS_NET_ACT("simple");
 
 static __net_init int simp_init_net(struct net *net)
 {
--- a/net/sched/act_skbedit.c
+++ b/net/sched/act_skbedit.c
@@ -378,6 +378,7 @@ static struct tc_action_ops act_skbedit_
 	.offload_act_setup =	tcf_skbedit_offload_act_setup,
 	.size		=	sizeof(struct tcf_skbedit),
 };
+MODULE_ALIAS_NET_ACT("skbedit");
 
 static __net_init int skbedit_init_net(struct net *net)
 {
--- a/net/sched/act_skbmod.c
+++ b/net/sched/act_skbmod.c
@@ -305,6 +305,7 @@ static struct tc_action_ops act_skbmod_o
 	.lookup		=	tcf_skbmod_search,
 	.size		=	sizeof(struct tcf_skbmod),
 };
+MODULE_ALIAS_NET_ACT("skbmod");
 
 static __net_init int skbmod_init_net(struct net *net)
 {
--- a/net/sched/act_tunnel_key.c
+++ b/net/sched/act_tunnel_key.c
@@ -854,6 +854,7 @@ static struct tc_action_ops act_tunnel_k
 	.offload_act_setup =	tcf_tunnel_key_offload_act_setup,
 	.size		=	sizeof(struct tcf_tunnel_key),
 };
+MODULE_ALIAS_NET_ACT("tunnel_key");
 
 static __net_init int tunnel_key_init_net(struct net *net)
 {
--- a/net/sched/act_vlan.c
+++ b/net/sched/act_vlan.c
@@ -444,6 +444,7 @@ static struct tc_action_ops act_vlan_ops
 	.offload_act_setup =	tcf_vlan_offload_act_setup,
 	.size		=	sizeof(struct tcf_vlan),
 };
+MODULE_ALIAS_NET_ACT("vlan");
 
 static __net_init int vlan_init_net(struct net *net)
 {
--- a/net/sched/cls_basic.c
+++ b/net/sched/cls_basic.c
@@ -338,6 +338,7 @@ static struct tcf_proto_ops cls_basic_op
 	.bind_class	=	basic_bind_class,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("basic");
 
 static int __init init_basic(void)
 {
--- a/net/sched/cls_bpf.c
+++ b/net/sched/cls_bpf.c
@@ -707,6 +707,7 @@ static struct tcf_proto_ops cls_bpf_ops
 	.dump		=	cls_bpf_dump,
 	.bind_class	=	cls_bpf_bind_class,
 };
+MODULE_ALIAS_NET_CLS("bpf");
 
 static int __init cls_bpf_init_mod(void)
 {
--- a/net/sched/cls_cgroup.c
+++ b/net/sched/cls_cgroup.c
@@ -207,6 +207,7 @@ static struct tcf_proto_ops cls_cgroup_o
 	.dump		=	cls_cgroup_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("cgroup");
 
 static int __init init_cgroup_cls(void)
 {
--- a/net/sched/cls_flow.c
+++ b/net/sched/cls_flow.c
@@ -706,6 +706,7 @@ static struct tcf_proto_ops cls_flow_ops
 	.walk		= flow_walk,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("flow");
 
 static int __init cls_flow_init(void)
 {
--- a/net/sched/cls_flower.c
+++ b/net/sched/cls_flower.c
@@ -3350,6 +3350,7 @@ static struct tcf_proto_ops cls_fl_ops _
 	.owner		= THIS_MODULE,
 	.flags		= TCF_PROTO_OPS_DOIT_UNLOCKED,
 };
+MODULE_ALIAS_NET_CLS("flower");
 
 static int __init cls_fl_init(void)
 {
--- a/net/sched/cls_fw.c
+++ b/net/sched/cls_fw.c
@@ -443,6 +443,7 @@ static struct tcf_proto_ops cls_fw_ops _
 	.bind_class	=	fw_bind_class,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("fw");
 
 static int __init init_fw(void)
 {
--- a/net/sched/cls_matchall.c
+++ b/net/sched/cls_matchall.c
@@ -423,6 +423,7 @@ static struct tcf_proto_ops cls_mall_ops
 	.bind_class	= mall_bind_class,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("matchall");
 
 static int __init cls_mall_init(void)
 {
--- a/net/sched/cls_route.c
+++ b/net/sched/cls_route.c
@@ -676,6 +676,7 @@ static struct tcf_proto_ops cls_route4_o
 	.bind_class	=	route4_bind_class,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("route");
 
 static int __init init_route4(void)
 {
--- a/net/sched/cls_rsvp.h
+++ b/net/sched/cls_rsvp.h
@@ -761,6 +761,7 @@ static struct tcf_proto_ops RSVP_OPS __r
 	.bind_class	=	rsvp_bind_class,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS(RSVP_ID);
 
 static int __init init_rsvp(void)
 {
--- a/net/sched/cls_tcindex.c
+++ b/net/sched/cls_tcindex.c
@@ -740,6 +740,7 @@ static struct tcf_proto_ops cls_tcindex_
 	.bind_class	=	tcindex_bind_class,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("tcindex");
 
 static int __init init_tcindex(void)
 {
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@ -1392,6 +1392,7 @@ static struct tcf_proto_ops cls_u32_ops
 	.bind_class	=	u32_bind_class,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_CLS("u32");
 
 static int __init init_u32(void)
 {
--- a/net/sched/sch_atm.c
+++ b/net/sched/sch_atm.c
@@ -695,6 +695,7 @@ static struct Qdisc_ops atm_qdisc_ops __
 	.dump		= atm_tc_dump,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("atm");
 
 static int __init atm_init(void)
 {
--- a/net/sched/sch_cake.c
+++ b/net/sched/sch_cake.c
@@ -3112,6 +3112,7 @@ static struct Qdisc_ops cake_qdisc_ops _
 	.dump_stats	=	cake_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("cake");
 
 static int __init cake_module_init(void)
 {
--- a/net/sched/sch_cbq.c
+++ b/net/sched/sch_cbq.c
@@ -1801,6 +1801,7 @@ static struct Qdisc_ops cbq_qdisc_ops __
 	.dump_stats	=	cbq_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("cbq");
 
 static int __init cbq_module_init(void)
 {
--- a/net/sched/sch_cbs.c
+++ b/net/sched/sch_cbs.c
@@ -552,6 +552,7 @@ static struct Qdisc_ops cbs_qdisc_ops __
 	.dump		=	cbs_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("cbs");
 
 static struct notifier_block cbs_device_notifier = {
 	.notifier_call = cbs_dev_notifier,
--- a/net/sched/sch_choke.c
+++ b/net/sched/sch_choke.c
@@ -502,6 +502,7 @@ static struct Qdisc_ops choke_qdisc_ops
 	.dump_stats	=	choke_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("choke");
 
 static int __init choke_module_init(void)
 {
--- a/net/sched/sch_codel.c
+++ b/net/sched/sch_codel.c
@@ -290,6 +290,7 @@ static struct Qdisc_ops codel_qdisc_ops
 	.dump_stats	=	codel_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("codel");
 
 static int __init codel_module_init(void)
 {
--- a/net/sched/sch_drr.c
+++ b/net/sched/sch_drr.c
@@ -489,6 +489,7 @@ static struct Qdisc_ops drr_qdisc_ops __
 	.destroy	= drr_destroy_qdisc,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("drr");
 
 static int __init drr_init(void)
 {
--- a/net/sched/sch_dsmark.c
+++ b/net/sched/sch_dsmark.c
@@ -507,6 +507,7 @@ static struct Qdisc_ops dsmark_qdisc_ops
 	.dump		=	dsmark_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("dsmark");
 
 static int __init dsmark_module_init(void)
 {
--- a/net/sched/sch_etf.c
+++ b/net/sched/sch_etf.c
@@ -506,6 +506,7 @@ static struct Qdisc_ops etf_qdisc_ops __
 	.dump		=	etf_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("etf");
 
 static int __init etf_module_init(void)
 {
--- a/net/sched/sch_ets.c
+++ b/net/sched/sch_ets.c
@@ -826,6 +826,7 @@ static struct Qdisc_ops ets_qdisc_ops __
 	.dump		= ets_qdisc_dump,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("ets");
 
 static int __init ets_init(void)
 {
--- a/net/sched/sch_fq.c
+++ b/net/sched/sch_fq.c
@@ -1048,6 +1048,7 @@ static struct Qdisc_ops fq_qdisc_ops __r
 	.dump_stats	=	fq_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("fq");
 
 static int __init fq_module_init(void)
 {
--- a/net/sched/sch_fq_codel.c
+++ b/net/sched/sch_fq_codel.c
@@ -714,6 +714,7 @@ static struct Qdisc_ops fq_codel_qdisc_o
 	.dump_stats =	fq_codel_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("fq_codel");
 
 static int __init fq_codel_module_init(void)
 {
--- a/net/sched/sch_gred.c
+++ b/net/sched/sch_gred.c
@@ -935,6 +935,7 @@ static struct Qdisc_ops gred_qdisc_ops _
 	.dump		=	gred_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("gred");
 
 static int __init gred_module_init(void)
 {
--- a/net/sched/sch_hfsc.c
+++ b/net/sched/sch_hfsc.c
@@ -1676,6 +1676,7 @@ static struct Qdisc_ops hfsc_qdisc_ops _
 	.priv_size	= sizeof(struct hfsc_sched),
 	.owner		= THIS_MODULE
 };
+MODULE_ALIAS_NET_SCH("hfsc");
 
 static int __init
 hfsc_init(void)
--- a/net/sched/sch_hhf.c
+++ b/net/sched/sch_hhf.c
@@ -705,6 +705,7 @@ static struct Qdisc_ops hhf_qdisc_ops __
 	.dump_stats	=	hhf_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("hhf");
 
 static int __init hhf_module_init(void)
 {
--- a/net/sched/sch_htb.c
+++ b/net/sched/sch_htb.c
@@ -2180,6 +2180,7 @@ static struct Qdisc_ops htb_qdisc_ops __
 	.dump		=	htb_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("htb");
 
 static int __init htb_module_init(void)
 {
--- a/net/sched/sch_ingress.c
+++ b/net/sched/sch_ingress.c
@@ -142,6 +142,7 @@ static struct Qdisc_ops ingress_qdisc_op
 	.ingress_block_get	=	ingress_ingress_block_get,
 	.owner			=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("ingress");
 
 struct clsact_sched_data {
 	struct tcf_block *ingress_block;
@@ -279,6 +280,7 @@ static struct Qdisc_ops clsact_qdisc_ops
 	.egress_block_get	=	clsact_egress_block_get,
 	.owner			=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("clsact");
 
 static int __init ingress_module_init(void)
 {
--- a/net/sched/sch_mqprio.c
+++ b/net/sched/sch_mqprio.c
@@ -630,6 +630,7 @@ static struct Qdisc_ops mqprio_qdisc_ops
 	.dump		= mqprio_dump,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("mqprio");
 
 static int __init mqprio_module_init(void)
 {
--- a/net/sched/sch_multiq.c
+++ b/net/sched/sch_multiq.c
@@ -403,6 +403,7 @@ static struct Qdisc_ops multiq_qdisc_ops
 	.dump		=	multiq_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("multiq");
 
 static int __init multiq_module_init(void)
 {
--- a/net/sched/sch_netem.c
+++ b/net/sched/sch_netem.c
@@ -1285,6 +1285,7 @@ static struct Qdisc_ops netem_qdisc_ops
 	.dump		=	netem_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("netem");
 
 
 static int __init netem_module_init(void)
--- a/net/sched/sch_pie.c
+++ b/net/sched/sch_pie.c
@@ -556,6 +556,7 @@ static struct Qdisc_ops pie_qdisc_ops __
 	.dump_stats	= pie_dump_stats,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("pie");
 
 static int __init pie_module_init(void)
 {
--- a/net/sched/sch_plug.c
+++ b/net/sched/sch_plug.c
@@ -216,6 +216,7 @@ static struct Qdisc_ops plug_qdisc_ops _
 	.reset       =	     qdisc_reset_queue,
 	.owner       =       THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("plug");
 
 static int __init plug_module_init(void)
 {
--- a/net/sched/sch_prio.c
+++ b/net/sched/sch_prio.c
@@ -427,6 +427,7 @@ static struct Qdisc_ops prio_qdisc_ops _
 	.dump		=	prio_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("prio");
 
 static int __init prio_module_init(void)
 {
--- a/net/sched/sch_qfq.c
+++ b/net/sched/sch_qfq.c
@@ -1529,6 +1529,7 @@ static struct Qdisc_ops qfq_qdisc_ops __
 	.destroy	= qfq_destroy_qdisc,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("qfq");
 
 static int __init qfq_init(void)
 {
--- a/net/sched/sch_red.c
+++ b/net/sched/sch_red.c
@@ -556,6 +556,7 @@ static struct Qdisc_ops red_qdisc_ops __
 	.dump_stats	=	red_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("red");
 
 static int __init red_module_init(void)
 {
--- a/net/sched/sch_sfb.c
+++ b/net/sched/sch_sfb.c
@@ -716,6 +716,7 @@ static struct Qdisc_ops sfb_qdisc_ops __
 	.dump_stats	=	sfb_dump_stats,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("sfb");
 
 static int __init sfb_module_init(void)
 {
--- a/net/sched/sch_sfq.c
+++ b/net/sched/sch_sfq.c
@@ -926,6 +926,7 @@ static struct Qdisc_ops sfq_qdisc_ops __
 	.dump		=	sfq_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("sfq");
 
 static int __init sfq_module_init(void)
 {
--- a/net/sched/sch_skbprio.c
+++ b/net/sched/sch_skbprio.c
@@ -302,6 +302,7 @@ static struct Qdisc_ops skbprio_qdisc_op
 	.destroy	=	skbprio_destroy,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("skbprio");
 
 static int __init skbprio_module_init(void)
 {
--- a/net/sched/sch_taprio.c
+++ b/net/sched/sch_taprio.c
@@ -2042,6 +2042,7 @@ static struct Qdisc_ops taprio_qdisc_ops
 	.dump		= taprio_dump,
 	.owner		= THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("taprio");
 
 static struct notifier_block taprio_device_notifier = {
 	.notifier_call = taprio_dev_notifier,
--- a/net/sched/sch_tbf.c
+++ b/net/sched/sch_tbf.c
@@ -598,6 +598,7 @@ static struct Qdisc_ops tbf_qdisc_ops __
 	.dump		=	tbf_dump,
 	.owner		=	THIS_MODULE,
 };
+MODULE_ALIAS_NET_SCH("tbf");
 
 static int __init tbf_module_init(void)
 {
