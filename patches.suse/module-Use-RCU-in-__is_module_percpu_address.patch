From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Wed, 8 Jan 2025 10:04:40 +0100
Subject: module: Use RCU in __is_module_percpu_address().
Git-commit: 9ed1555162d2e289282d46ba94d6a746df990ef1
Git-repo: git://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git/
Patch-mainline: Queued in subsystem maintainer repository (v6.13-rc1-rt1)
References: bsc#1234370

The modules list can be accessed under RCU assumption.

Use RCU protection instead preempt_disable().

Acked-by: Peter Zijlstra (Intel) <peterz@infradead.org>
Link: https://lore.kernel.org/r/20250108090457.512198-12-bigeasy@linutronix.de
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Acked-by: Petr Tesarik <ptesarik@suse.com>
---
 kernel/module/main.c |    6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

--- a/kernel/module/main.c
+++ b/kernel/module/main.c
@@ -434,8 +434,7 @@ bool __is_module_percpu_address(unsigned
 	struct module *mod;
 	unsigned int cpu;
 
-	preempt_disable();
-
+	guard(rcu)();
 	list_for_each_entry_rcu(mod, &modules, list) {
 		if (mod->state == MODULE_STATE_UNFORMED)
 			continue;
@@ -452,13 +451,10 @@ bool __is_module_percpu_address(unsigned
 						per_cpu_ptr(mod->percpu,
 							    get_boot_cpu_id());
 				}
-				preempt_enable();
 				return true;
 			}
 		}
 	}
-
-	preempt_enable();
 	return false;
 }
 
