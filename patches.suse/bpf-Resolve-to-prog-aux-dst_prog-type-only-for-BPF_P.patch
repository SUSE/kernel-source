From: Martin KaFai Lau <kafai@fb.com>
Date: Tue, 29 Mar 2022 18:14:56 -0700
Subject: bpf: Resolve to prog->aux->dst_prog->type only for BPF_PROG_TYPE_EXT
Patch-mainline: v5.18-rc2
Git-commit: 4a9c7bbe2ed4d2b240674b1fb606c41d3940c412
References: git-fixes bsc#1177028
X-Info: replace aux->dst_prog with aux->linked_prog due to missing backport "bpf: Move prog->aux->linked_prog and trampoline into bpf_link on attach" 1831fed559732b132aef0ea8261ac77e73f7eadf
X-Info: resolve_prog_type() is in kerne/bpf/verifier.c rather than include/linux/bpf_verifier.h without "bpf: Add reference tracking support to kfunc" 5c073f26f9dc78a6c8194b23eac7537c9692c7d7

The commit 7e40781cc8b7 ("bpf: verifier: Use target program's type for access verifications")
fixes the verifier checking for BPF_PROG_TYPE_EXT (extension)
prog such that the verifier looks for things based
on the target prog type that it is extending instead of
the BPF_PROG_TYPE_EXT itself.

The current resolve_prog_type() returns the target prog type.
It checks for nullness on prog->aux->dst_prog.  However,
when loading a BPF_PROG_TYPE_TRACING prog and it is tracing another
bpf prog instead of a kernel function, prog->aux->dst_prog is not
NULL also.  In this case, the verifier should still verify as the
BPF_PROG_TYPE_TRACING type instead of the traced prog type in
prog->aux->dst_prog->type.

An oops has been reported when tracing a struct_ops prog.  A NULL
dereference happened in check_return_code() when accessing the
prog->aux->attach_func_proto->type and prog->aux->attach_func_proto
is NULL here because the traced struct_ops prog has the "unreliable" set.

This patch is to change the resolve_prog_type() to only
return the target prog type if the prog being verified is
BPF_PROG_TYPE_EXT.

Fixes: 7e40781cc8b7 ("bpf: verifier: Use target program's type for access verifications")
Signed-off-by: Martin KaFai Lau <kafai@fb.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Acked-by: Yonghong Song <yhs@fb.com>
Link: https://lore.kernel.org/bpf/20220330011456.2984509-1-kafai@fb.com
Acked-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 kernel/bpf/verifier.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -2606,10 +2606,11 @@ static int check_map_access(struct bpf_v
 
 #define MAX_PACKET_OFF 0xffff
 
+/* only use after check_attach_btf_id() */
 static enum bpf_prog_type resolve_prog_type(struct bpf_prog *prog)
 {
-	return prog->aux->linked_prog ? prog->aux->linked_prog->type
-				      : prog->type;
+	return prog->type == BPF_PROG_TYPE_EXT ?
+	       prog->aux->linked_prog->type : prog->type;
 }
 
 static bool may_access_direct_pkt_data(struct bpf_verifier_env *env,
