From b81c14ca14b631aa1abae32fb5ae75b5e9251012 Mon Sep 17 00:00:00 2001
From: Haisu Wang <haisuwang@tencent.com>
Date: Mon, 30 May 2022 14:40:59 +0800
Subject: [PATCH] blk-mq: do not update io_ticks with passthrough requests
Git-commit: b81c14ca14b631aa1abae32fb5ae75b5e9251012
Patch-mainline: v5.19-rc1
References: bsc#1200816

Flush or passthrough requests are not accounted as normal IO in completion.
To reflect iostat for slow IO, io_ticks is updated when stat show called
based on inflight numbers.
It may cause inconsistent io_ticks calculation result.

So do not account non-passthrough request when check inflight.

Fixes: 86d7331299fd ("block: update io_ticks when io hang")
Signed-off-by: Haisu Wang <haisuwang@tencent.com>
Reviewed-by: samuelliao <samuelliao@tencent.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/r/20220530064059.1120058-1-haisuwang@tencent.com
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: Jan Kara <jack@suse.cz>

---
 block/blk-mq.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -105,7 +105,8 @@ static bool blk_mq_check_inflight(struct
 {
 	struct mq_inflight *mi = priv;
 
-	if (!mi->part->partno || rq->part == mi->part)
+	if (rq->part && blk_do_io_stat(rq) &&
+	    (!mi->part->partno || rq->part == mi->part))
 		mi->inflight[rq_data_dir(rq)]++;
 
 	return true;
