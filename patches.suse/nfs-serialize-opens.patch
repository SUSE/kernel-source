From: NeilBrown <neilb@suse.com>
Subject: NFSv4.x: by default serialize open/close operations.
References: bsc#1223863 bsc#1227362
Patch-mainline: never, server-side bug

NFSv4.1 and later allow open, open_downgrade, and close operations
on a given file to occur in parallel and provides a way for the server
to unambiguously indicate which operation was processed last.

Unfortuantely some servers (Azure) do not handle the possible races
properly.

The easiest way to ensure correct behaviour is to revert to the
NFSv4.0 practice of serializing these operations.

By default, opens are PARALLELIZED.
With nfs4 module parameter "serialize_opens=Y", the opens will be
SERIALIZED - they cannot occur in parallel.

Signed-off-by: NeilBrown <neilb@suse.com>
Acked-by: NeilBrown <neilb@suse.com>

---
 fs/nfs/nfs4proc.c |    7 +++++++
 1 file changed, 7 insertions(+)

--- a/fs/nfs/nfs4proc.c
+++ b/fs/nfs/nfs4proc.c
@@ -10450,9 +10450,16 @@ static const struct nfs4_minor_version_o
 };
 
 #if defined(CONFIG_NFS_V4_1)
+static bool serialize_opens = false;
+module_param(serialize_opens, bool, 0644);
+MODULE_PARM_DESC(serialize_opens,
+		 "Serialize all open/close to each file - avoids some server bugs");
+
 static struct nfs_seqid *
 nfs_alloc_no_seqid(struct nfs_seqid_counter *arg1, gfp_t arg2)
 {
+	if (serialize_opens)
+		return nfs_alloc_seqid(arg1, arg2);
 	return NULL;
 }
 
