From 963591a91d75381c313ec29ee9bb82ec87c5853a Mon Sep 17 00:00:00 2001
From: Petr Pavlu <petr.pavlu@suse.com>
Date: Wed, 22 Nov 2023 13:11:03 +0100
Subject: [PATCH] arm64: Prevent misaligned patch-site warnings
Patch-mainline: Never, downstream workaround
References: bsc#1214934

The DYNAMIC_FTRACE_WITH_CALL_OPS optimization uses the compiler option
-falign-functions=8 with the expectation that functions will get aligned
on 8-byte boundary. However, GCC treats this option only as a hint and
in certain situations doesn't align the functions. This then results in
in warnings about misaligned patch-sites during system boot.

Unset DYNAMIC_FTRACE_WITH_CALL_OPS for now to prevent these warnings
until the kernel+GCC have a way to set the needed alignment properly.

Unfortunately, DYNAMIC_FTRACE_WITH_CALL_OPS cannot be unset only in the
arm64 config file because the option is promtless and gets automatically
reset to the value of HAVE_DYNAMIC_FTRACE_WITH_CALL_OPS. Make therefore
sure the latter is unset first by patching the respective Kconfig.

Signed-off-by: Petr Pavlu <petr.pavlu@suse.com>
---
 arch/arm64/Kconfig | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index 611dd8a1ba5b..9862921d298e 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -191,9 +191,10 @@ config ARM64
 		if $(cc-option,-fpatchable-function-entry=2)
 	select HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS \
 		if DYNAMIC_FTRACE_WITH_ARGS && DYNAMIC_FTRACE_WITH_CALL_OPS
-	select HAVE_DYNAMIC_FTRACE_WITH_CALL_OPS \
-		if (DYNAMIC_FTRACE_WITH_ARGS && !CFI_CLANG && \
-		    !CC_OPTIMIZE_FOR_SIZE)
+	# bsc#1214934
+	#select HAVE_DYNAMIC_FTRACE_WITH_CALL_OPS \
+	#	if (DYNAMIC_FTRACE_WITH_ARGS && !CFI_CLANG && \
+	#	    !CC_OPTIMIZE_FOR_SIZE)
 	select FTRACE_MCOUNT_USE_PATCHABLE_FUNCTION_ENTRY \
 		if DYNAMIC_FTRACE_WITH_ARGS
 	select HAVE_EFFICIENT_UNALIGNED_ACCESS
-- 
2.42.0

