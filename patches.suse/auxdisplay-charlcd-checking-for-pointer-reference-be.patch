From 4daa9ff89ef27be43c15995412d6aee393a78200 Mon Sep 17 00:00:00 2001
From: Luiz Sampaio <sampaio.ime@gmail.com>
Date: Tue, 9 Nov 2021 19:07:32 -0300
Subject: [PATCH] auxdisplay: charlcd: checking for pointer reference before dereferencing
Git-commit: 4daa9ff89ef27be43c15995412d6aee393a78200
Patch-mainline: v5.16-rc8
References: git-fixes

Check if the pointer lcd->ops->init_display exists before dereferencing it.
If a driver called charlcd_init() without defining the ops, this would
return segmentation fault, as happened to me when implementing a charlcd
driver.  Checking the pointer before dereferencing protects from
segmentation fault.

Signed-off-by: Luiz Sampaio <sampaio.ime@gmail.com>
Signed-off-by: Miguel Ojeda <ojeda@kernel.org>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/auxdisplay/charlcd.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/auxdisplay/charlcd.c b/drivers/auxdisplay/charlcd.c
index cca3b600c0ba..6d309e4971b6 100644
--- a/drivers/auxdisplay/charlcd.c
+++ b/drivers/auxdisplay/charlcd.c
@@ -578,6 +578,9 @@ static int charlcd_init(struct charlcd *lcd)
 	 * Since charlcd_init_display() needs to write data, we have to
 	 * enable mark the LCD initialized just before.
 	 */
+	if (WARN_ON(!lcd->ops->init_display))
+		return -EINVAL;
+
 	ret = lcd->ops->init_display(lcd);
 	if (ret)
 		return ret;
-- 
2.31.1

