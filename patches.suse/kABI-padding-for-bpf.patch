From: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Date: Tue, 01 Fed 2022 08:43:36 +0800
Subject: [PATCH] kABI padding for bpf
Patch-mainline: Never, kABI padding
References: bsc#1179531

Add kABI padding to important BPF types

Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 include/linux/bpf.h          |    3 +++
 include/linux/bpf_verifier.h |    1 +
 2 files changed, 4 insertions(+)

--- a/include/linux/bpf.h
+++ b/include/linux/bpf.h
@@ -276,6 +276,7 @@ struct bpf_map {
 	bool bypass_spec_v1;
 	bool frozen; /* write-once; write-protected by freeze_mutex */
 	s64 __percpu *elem_count;
+	void *suse_kabi_padding;
 };
 
 static inline const char *btf_field_type_name(enum btf_field_type type)
@@ -1443,6 +1444,7 @@ struct bpf_prog_aux {
 		struct work_struct work;
 		struct rcu_head	rcu;
 	};
+	void *suse_kabi_padding;
 };
 
 struct bpf_prog {
@@ -1472,6 +1474,7 @@ struct bpf_prog {
 					    const struct bpf_insn *insn);
 	struct bpf_prog_aux	*aux;		/* Auxiliary fields */
 	struct sock_fprog_kern	*orig_prog;	/* Original BPF program */
+	void			*suse_kabi_padding;
 	/* Instructions for interpreter */
 	union {
 		DECLARE_FLEX_ARRAY(struct sock_filter, insns);
--- a/include/linux/bpf_verifier.h
+++ b/include/linux/bpf_verifier.h
@@ -640,6 +640,7 @@ struct bpf_verifier_env {
 	 * e.g., in reg_type_str() to generate reg_type string
 	 */
 	char tmp_str_buf[TMP_STR_BUF_LEN];
+	void *suse_kabi_padding;
 };
 
 __printf(2, 0) void bpf_verifier_vlog(struct bpf_verifier_log *log,
