From: Antoine Tenart <atenart@kernel.org>
Date: Wed, 21 Sep 2022 15:51:17 +0200
Subject: net/mlx5e: macsec: remove checks on the prepare phase
Patch-mainline: v6.1-rc1
Git-commit: 36c2ebced3a808d6fa3cc2847a4f20ef7c5d5b5b
References: jsc#PED-1549

Remove checks on the prepare phase as it is now unused by the MACsec
core implementation.

Signed-off-by: Antoine Tenart <atenart@kernel.org>
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/net/ethernet/mellanox/mlx5/core/en_accel/macsec.c |   36 --------------
 1 file changed, 36 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/macsec.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/macsec.c
@@ -519,9 +519,6 @@ static int mlx5e_macsec_add_txsa(struct
 	struct mlx5e_macsec *macsec;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -595,9 +592,6 @@ static int mlx5e_macsec_upd_txsa(struct
 	struct net_device *netdev;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -658,9 +652,6 @@ static int mlx5e_macsec_del_txsa(struct
 	struct mlx5e_macsec *macsec;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 	macsec = priv->macsec;
 	macsec_device = mlx5e_macsec_get_macsec_device_context(macsec, ctx);
@@ -713,9 +704,6 @@ static int mlx5e_macsec_add_rxsc(struct
 	struct mlx5e_macsec *macsec;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 	macsec = priv->macsec;
 	macsec_device = mlx5e_macsec_get_macsec_device_context(macsec, ctx);
@@ -793,9 +781,6 @@ static int mlx5e_macsec_upd_rxsc(struct
 	int i;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -844,9 +829,6 @@ static int mlx5e_macsec_del_rxsc(struct
 	int err = 0;
 	int i;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -912,9 +894,6 @@ static int mlx5e_macsec_add_rxsa(struct
 	struct list_head *list;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -999,9 +978,6 @@ static int mlx5e_macsec_upd_rxsa(struct
 	struct list_head *list;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -1058,9 +1034,6 @@ static int mlx5e_macsec_del_rxsa(struct
 	struct list_head *list;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 
 	macsec = priv->macsec;
@@ -1110,9 +1083,6 @@ static int mlx5e_macsec_add_secy(struct
 	struct mlx5e_macsec *macsec;
 	int err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	if (!mlx5e_macsec_secy_features_validate(ctx))
 		return -EINVAL;
 
@@ -1213,9 +1183,6 @@ static int mlx5e_macsec_upd_secy(struct
 	struct mlx5e_macsec *macsec;
 	int i, err = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	if (!mlx5e_macsec_secy_features_validate(ctx))
 		return -EINVAL;
 
@@ -1274,9 +1241,6 @@ static int mlx5e_macsec_del_secy(struct
 	int err = 0;
 	int i;
 
-	if (ctx->prepare)
-		return 0;
-
 	mutex_lock(&priv->macsec->lock);
 	macsec = priv->macsec;
 	macsec_device = mlx5e_macsec_get_macsec_device_context(macsec, ctx);
