From:   Justin Tee <justintee8345@gmail.com>
To:     linux-scsi@vger.kernel.org
Cc:     jsmart2021@gmail.com, justin.tee@broadcom.com,
        Justin Tee <justintee8345@gmail.com>
Subject: [PATCH 1/9] lpfc: Fix use-after-free rport memory access in
 lpfc_register_remote_port
Date:   Tue, 23 May 2023 11:31:58 -0700
Content-Transfer-Encoding: 8bit
References: bsc#1211852, bsc#1208410, bsc#1211346
Patch-mainline: v6.5-rc1
Git-commit: a4157aaf0fb458c867b76f6cd63cb57fa91da318
Acked-by: Martin Wilck <mwilck@suse.com>

Due to a target port D_ID swap, it is possible for the
lpfc_register_remote_port routine to touch post mortem fc_rport memory when
trying to access fc_rport->dd_data.

The D_ID swap causes a simultaneous call to lpfc_unregister_remote_port,
where fc_remote_port_delete reclaims fc_rport memory.

Remove the fc_rport->dd_data->pnode NULL assignment because the following
line reassigns ndlp->rport with an fc_rport object from fc_remote_port_add
anyways.  The pnode nullification is superfluous.

Signed-off-by: Justin Tee <justin.tee@broadcom.com>
---
 drivers/scsi/lpfc/lpfc_hbadisc.c |    8 --------
 1 file changed, 8 deletions(-)

--- a/drivers/scsi/lpfc/lpfc_hbadisc.c
+++ b/drivers/scsi/lpfc/lpfc_hbadisc.c
@@ -4497,14 +4497,6 @@ lpfc_register_remote_port(struct lpfc_vp
 	if (vport->load_flag & FC_UNLOADING)
 		return;
 
-	/*
-	 * Disassociate any older association between this ndlp and rport
-	 */
-	if (ndlp->rport) {
-		rdata = ndlp->rport->dd_data;
-		rdata->pnode = NULL;
-	}
-
 	ndlp->rport = rport = fc_remote_port_add(shost, 0, &rport_ids);
 	if (!rport) {
 		dev_printk(KERN_WARNING, &phba->pcidev->dev,
