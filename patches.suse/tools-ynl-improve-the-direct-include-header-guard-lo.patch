From: Jakub Kicinski <kuba@kernel.org>
Date: Wed, 21 Jun 2023 16:17:19 -0700
Subject: tools: ynl: improve the direct-include header guard logic
Patch-mainline: v6.5-rc1
Git-commit: 0c3d6fd4b89c1a6393283249cdd0bd484ad8f2e5
References: jsc#PED-3311

Przemek suggests that I shouldn't accuse GCC of witchcraft,
there is a simpler explanation for why we need manual define.

scripts/headers_install.sh modifies the guard, removing _UAPI.
That's why including a kernel header from the tree and from
/usr leads to duplicate definitions.

This also solves the mystery of why I needed to include
the header conditionally. I had the wrong guards for most
cases but ethtool.

Suggested-by: Przemek Kitszel <przemyslaw.kitszel@intel.com>
Reviewed-by: Przemek Kitszel <przemyslaw.kitszel@intel.com>
Link: https://lore.kernel.org/r/20230621231719.2728928-1-kuba@kernel.org
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 tools/net/ynl/Makefile.deps |   20 ++++++--------------
 1 file changed, 6 insertions(+), 14 deletions(-)

--- a/tools/net/ynl/Makefile.deps
+++ b/tools/net/ynl/Makefile.deps
@@ -9,20 +9,12 @@
 
 UAPI_PATH:=../../../../include/uapi/
 
-# If the header does not exist at all in the system path - let the
-# compiler fall back to the kernel header via -Idirafter.
-# GCC seems to ignore header guard if the header is different, so we need
-# to specify the -D$(hdr_guard).
-# And we need to define HASH indirectly because GNU Make 4.2 wants it escaped
-# and Gnu Make 4.4 wants it without escaping.
+# scripts/headers_install.sh strips "_UAPI" from header guards so we
+# need the explicit -D matching what's in /usr, to avoid multiple definitions.
 
-HASH := \#
+get_hdr_inc=-D$(1) -include $(UAPI_PATH)/linux/$(2)
 
-get_hdr_inc=$(if $(shell echo "$(HASH)include <linux/$(2)>" | \
-			 cpp >>/dev/null 2>/dev/null && echo yes),\
-		-D$(1) -include $(UAPI_PATH)/linux/$(2))
-
-CFLAGS_devlink:=$(call get_hdr_inc,_UAPI_LINUX_DEVLINK_H_,devlink.h)
+CFLAGS_devlink:=$(call get_hdr_inc,_LINUX_DEVLINK_H_,devlink.h)
 CFLAGS_ethtool:=$(call get_hdr_inc,_LINUX_ETHTOOL_NETLINK_H_,ethtool_netlink.h)
-CFLAGS_handshake:=$(call get_hdr_inc,_UAPI_LINUX_HANDSHAKE_H,handshake.h)
-CFLAGS_netdev:=$(call get_hdr_inc,_UAPI_LINUX_NETDEV_H,netdev.h)
+CFLAGS_handshake:=$(call get_hdr_inc,_LINUX_HANDSHAKE_H,handshake.h)
+CFLAGS_netdev:=$(call get_hdr_inc,_LINUX_NETDEV_H,netdev.h)
