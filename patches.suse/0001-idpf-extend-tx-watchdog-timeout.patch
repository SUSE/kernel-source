From d04d71301820f1d513709a33ae418a679292333b Mon Sep 17 00:00:00 2001
From: Josh Hay <joshua.a.hay@intel.com>
Date: Wed, 29 May 2024 13:50:48 -0700
Subject: [PATCH] idpf: extend tx watchdog timeout
References: bsc#1224137
Patch-mainline: Not yet, early patch for SAP HANA on GCE

There are several reasons for a TX completion to take longer than usual
to be writtenback by HW. For example, the completion for a packet that
misses a rule will have increased latency. The side effect of these
variable latencies for any given packet is out of order completions. The
stack sends packet X and Y. If packet X takes longer because of the rule
miss in the example above, but packet Y hits, it can go on the wire
immediately. Which also means it can be completed first.  The driver
will then receive a completion for packet Y before packet X.  The driver
will stash the buffers for packet X in a hash table to allow the tx send
queue descriptors for both packet X and Y to be reused. The driver will
receive the completion for packet X sometime later and have to search
the hash table for the associated packet.

The driver is implemented to clean packets directly on the ring first,
i.e. not out of order completions since they are to some extent
considered "slow(er) path". However, certain workloads can increase the
frequency of out of order completions thus introducing even more latency
into the cleaning path. Bump up the timeout value to account for these
workloads.

Signed-off-by: Joshua Hay <joshua.a.hay@intel.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/net/ethernet/intel/idpf/idpf_lib.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/drivers/net/ethernet/intel/idpf/idpf_lib.c
+++ b/drivers/net/ethernet/intel/idpf/idpf_lib.c
@@ -780,8 +780,8 @@ static int idpf_cfg_netdev(struct idpf_v
 	else
 		netdev->netdev_ops = &idpf_netdev_ops_singleq;
 
-	/* setup watchdog timeout value to be 5 second */
-	netdev->watchdog_timeo = 5 * HZ;
+	/* setup watchdog timeout value to be 30 seconds */
+	netdev->watchdog_timeo = 30 * HZ;
 
 	/* configure default MTU size */
 	netdev->min_mtu = ETH_MIN_MTU;
