From 7e9984d183bb1e99e766c5c2b950ff21f7f7b6c0 Mon Sep 17 00:00:00 2001
From: Yang Yingliang <yangyingliang@huawei.com>
Date: Wed, 13 Jul 2022 17:40:23 +0800
Subject: [PATCH] spi: tegra20-slink: fix UAF in tegra_slink_remove()
Git-commit: 7e9984d183bb1e99e766c5c2b950ff21f7f7b6c0
Patch-mainline: v6.0-rc1
References: git-fixes

After calling spi_unregister_master(), the refcount of master will
be decrease to 0, and it will be freed in spi_controller_release(),
the device data also will be freed, so it will lead a UAF when using
'tspi'. To fix this, get the master before unregister and put it when
finish using it.

Fixes: 26c863418221 ("spi: tegra20-slink: Don't use resource-managed spi_register helper")
Signed-off-by: Yang Yingliang <yangyingliang@huawei.com>
Link: https://lore.kernel.org/r/20220713094024.1508869-1-yangyingliang@huawei.com
Signed-off-by: Mark Brown <broonie@kernel.org>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/spi/spi-tegra20-slink.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/drivers/spi/spi-tegra20-slink.c
+++ b/drivers/spi/spi-tegra20-slink.c
@@ -1151,7 +1151,7 @@ exit_free_master:
 
 static int tegra_slink_remove(struct platform_device *pdev)
 {
-	struct spi_master *master = platform_get_drvdata(pdev);
+	struct spi_master *master = spi_master_get(platform_get_drvdata(pdev));
 	struct tegra_slink_data	*tspi = spi_master_get_devdata(master);
 
 	free_irq(tspi->irq, tspi);
@@ -1169,6 +1169,7 @@ static int tegra_slink_remove(struct pla
 	if (!pm_runtime_status_suspended(&pdev->dev))
 		tegra_slink_runtime_suspend(&pdev->dev);
 
+	spi_master_put(master);
 	return 0;
 }
 
