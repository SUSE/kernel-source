From: Marc Zyngier <maz@kernel.org>
Date: Tue, 7 Jun 2022 14:14:27 +0100
Subject: KVM: arm64: Warn if accessing timer pending state outside of vcpu
 context
Git-commit: efedd01de475e126e43a07d0b1221bb65e497163
Patch-mainline: v5.19-rc3
References: bsc#1213620

A recurrent bug in the KVM/arm64 code base consists in trying to
access the timer pending state outside of the vcpu context, which
makes zero sense (the pending state only exists when the vcpu
is loaded).

In order to avoid more embarassing crashes and catch the offenders
red-handed, add a warning to kvm_arch_timer_get_input_level() and
return the state as non-pending. This avoids taking the system down,
and still helps tracking down silly bugs.

Reviewed-by: Eric Auger <eric.auger@redhat.com>
Signed-off-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/20220607131427.1164881-4-maz@kernel.org

Acked-by: Ivan T. Ivanov <iivanov@suse.de>
---
 arch/arm64/kvm/arch_timer.c |    3 +++
 1 file changed, 3 insertions(+)

--- a/arch/arm64/kvm/arch_timer.c
+++ b/arch/arm64/kvm/arch_timer.c
@@ -1216,6 +1216,9 @@ bool kvm_arch_timer_get_input_level(int
 	struct kvm_vcpu *vcpu = kvm_get_running_vcpu();
 	struct arch_timer_context *timer;
 
+	if (WARN(!vcpu, "No vcpu context!\n"))
+		return false;
+
 	if (vintid == vcpu_vtimer(vcpu)->irq.irq)
 		timer = vcpu_vtimer(vcpu);
 	else if (vintid == vcpu_ptimer(vcpu)->irq.irq)
