From: Takashi Iwai <tiwai@suse.de>
Subject: kABI padding for wireless
Patch-mainline: Never, kABI padding
References: kABI padding

Add a kABI padding to wireless structs for future kABI breakage.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 include/net/cfg80211.h     |   11 +++++++++++
 include/net/mac80211.h     |    7 +++++++
 net/mac80211/ieee80211_i.h |   10 ++++++++++
 3 files changed, 28 insertions(+)

--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -209,6 +209,7 @@ struct ieee80211_channel {
 	unsigned long dfs_state_entered;
 	unsigned int dfs_cac_ms;
 	s8 psd;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -2709,6 +2710,7 @@ struct cfg80211_scan_request {
 	struct cfg80211_scan_6ghz_params *scan_6ghz_params;
 	s8 tsf_report_link_id;
 
+
 	/* keep last */
 	struct ieee80211_channel *channels[];
 };
@@ -2989,6 +2991,8 @@ struct cfg80211_bss {
 	u8 use_for;
 	u8 cannot_use_reasons;
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	u8 priv[] __aligned(sizeof(void *));
 };
 
@@ -3056,6 +3060,7 @@ struct cfg80211_auth_request {
 	size_t auth_data_len;
 	s8 link_id;
 	const u8 *ap_mld_addr;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -3163,6 +3168,7 @@ struct cfg80211_assoc_request {
 	struct cfg80211_assoc_link links[IEEE80211_MLD_MAX_NUM_LINKS];
 	const u8 *ap_mld_addr;
 	s8 link_id;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -3375,6 +3381,7 @@ struct cfg80211_connect_params {
 	size_t fils_erp_rrk_len;
 	bool want_1x;
 	struct ieee80211_edmg edmg;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -4949,6 +4956,8 @@ struct cfg80211_ops {
 	int	(*set_ttlm)(struct wiphy *wiphy, struct net_device *dev,
 			    struct cfg80211_ttlm_params *params);
 	u32	(*get_radio_mask)(struct wiphy *wiphy, struct net_device *dev);
+
+	void *suse_kabi_padding[4];	/* XXX SLE-specific kABI placeholder */
 };
 
 /*
@@ -6382,6 +6391,8 @@ struct wireless_dev {
 		unsigned int cac_time_ms;
 	} links[IEEE80211_MLD_MAX_NUM_LINKS];
 	u16 valid_links;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline const u8 *wdev_address(struct wireless_dev *wdev)
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -270,6 +270,8 @@ struct ieee80211_chanctx_conf {
 
 	bool radar_enabled;
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	u8 drv_priv[] __aligned(sizeof(void *));
 };
 
@@ -834,6 +836,8 @@ struct ieee80211_bss_conf {
 	bool eht_su_beamformee;
 	bool eht_mu_beamformer;
 	bool eht_80mhz_full_bw_ul_mumimo;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -2029,6 +2033,7 @@ struct ieee80211_vif {
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct dentry *debugfs_dir;
 #endif
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 
 	bool probe_req_reg;
 	bool rx_mcast_action_reg;
@@ -4828,6 +4833,8 @@ struct ieee80211_ops {
 	enum ieee80211_neg_ttlm_res
 	(*can_neg_ttlm)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			struct ieee80211_neg_ttlm *ttlm);
+
+	void *suse_kabi_padding[4];	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/net/mac80211/ieee80211_i.h
+++ b/net/mac80211/ieee80211_i.h
@@ -602,6 +602,8 @@ struct ieee80211_if_managed {
 	/* dialog token enumerator for neg TTLM request */
 	u8 dialog_token_alloc;
 	struct wiphy_delayed_work neg_ttlm_timeout_work;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct ieee80211_if_ibss {
@@ -1084,6 +1086,8 @@ struct ieee80211_link_data {
 #ifdef CONFIG_MAC80211_DEBUGFS
 	struct dentry *debugfs_dir;
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct ieee80211_sub_if_data {
@@ -1183,6 +1187,8 @@ struct ieee80211_sub_if_data {
 	} debugfs;
 #endif
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	/* must be last, dynamically sized area in this! */
 	struct ieee80211_vif vif;
 };
@@ -1620,6 +1626,8 @@ struct ieee80211_local {
 	u8 ext_capa[8];
 
 	bool wbrf_supported;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline struct ieee80211_sub_if_data *
@@ -1803,6 +1811,8 @@ struct ieee802_11_elems {
 
 	/* whether/which parse error occurred while retrieving these elements */
 	u8 parse_error;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline struct ieee80211_local *hw_to_local(
