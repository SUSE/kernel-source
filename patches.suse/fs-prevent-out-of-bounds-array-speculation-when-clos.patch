From 2b103761348dcf1993c0bef8e5e8f1a14165d87f Mon Sep 17 00:00:00 2001
From: Theodore Ts'o <tytso@mit.edu>
Date: Mon, 6 Mar 2023 13:54:50 -0500
Subject: [PATCH 2/2] fs: prevent out-of-bounds array speculation when closing
 a file descriptor
Patch-mainline: v6.3-rc2
Git-commit: 609d54441493c99f21c1823dfd66fa7f4c512ff4
References: CVE-2023-53117 bsc#1242780

Google-Bug-Id: 114199369
Signed-off-by: Theodore Ts'o <tytso@mit.edu>
Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
[ddiss: rebase without commit 6319194ec57b0 ("Unify the primitives for
 file descriptor closing")]
Acked-by: David Disseldorp <ddiss@suse.de>
---
 fs/file.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/fs/file.c b/fs/file.c
index 16eb5818728ba..d383aa07c56ce 100644
--- a/fs/file.c
+++ b/fs/file.c
@@ -627,6 +627,8 @@ int __close_fd(struct files_struct *files, unsigned fd)
 	fdt = files_fdtable(files);
 	if (fd >= fdt->max_fds)
 		goto out_unlock;
+
+	fd = array_index_nospec(fd, fdt->max_fds);
 	file = fdt->fd[fd];
 	if (!file)
 		goto out_unlock;
-- 
2.50.1

