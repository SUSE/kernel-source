From: Rik van Riel <riel@surriel.com>
Date: Thu, 17 Aug 2023 13:57:59 -0400
Subject: mm,ima,kexec,of: use memblock_free_late from ima_free_kexec_buffer
Git-commit: f0362a253606e2031f8d61c74195d4d6556e12a4
Patch-mainline: 6.5
References: bsc#1220872 CVE-2023-52576

The code calling ima_free_kexec_buffer runs long after the memblock
allocator has already been torn down, potentially resulting in a use
after free in memblock_isolate_range.

With KASAN or KFENCE, this use after free will result in a BUG
from the idle task, and a subsequent kernel panic.

Switch ima_free_kexec_buffer over to memblock_free_late to avoid
that issue.

[js]
Mark ima_free_kexec_buffer() and ima_load_kexec_buffer() as __init due
to memblock_free_late() being __init already. The two ima_*() are called
from ima_init() which is already __init. And they were marked as such in
upstream commit b69a2afd5afc (x86/kexec: Carry forward IMA measurement
log on kexec).

Fixes: fee3ff99bc67 ("powerpc: Move arch independent ima kexec functions to drivers/of/kexec.c")
Cc: stable@kernel.org
Signed-off-by: Rik van Riel <riel@surriel.com>
Suggested-by: Mike Rappoport <rppt@kernel.org>
Link: https://lore.kernel.org/r/20230817135759.0888e5ef@imladris.surriel.com
Signed-off-by: Rob Herring <robh@kernel.org>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
---
 drivers/of/kexec.c                 |    5 +++--
 security/integrity/ima/ima_kexec.c |    2 +-
 2 files changed, 4 insertions(+), 3 deletions(-)

--- a/drivers/of/kexec.c
+++ b/drivers/of/kexec.c
@@ -156,7 +156,7 @@ int ima_get_kexec_buffer(void **addr, si
 /**
  * ima_free_kexec_buffer - free memory used by the IMA buffer
  */
-int ima_free_kexec_buffer(void)
+int __init ima_free_kexec_buffer(void)
 {
 	int ret;
 	unsigned long addr;
@@ -178,7 +178,8 @@ int ima_free_kexec_buffer(void)
 	if (ret)
 		return ret;
 
-	return memblock_free(addr, size);
+	memblock_free_late(addr, size);
+	return 0;
 
 }
 
--- a/security/integrity/ima/ima_kexec.c
+++ b/security/integrity/ima/ima_kexec.c
@@ -137,7 +137,7 @@ void ima_add_kexec_buffer(struct kimage
 /*
  * Restore the measurement list from the previous kernel.
  */
-void ima_load_kexec_buffer(void)
+void __init ima_load_kexec_buffer(void)
 {
 	void *kexec_buffer = NULL;
 	size_t kexec_buffer_size = 0;
