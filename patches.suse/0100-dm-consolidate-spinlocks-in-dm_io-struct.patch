From 4d7bca13dd9a5033174b0735056c5658cb893e76 Mon Sep 17 00:00:00 2001
From: Mike Snitzer <snitzer@kernel.org>
Date: Sat, 19 Mar 2022 18:41:16 -0400
Subject: [PATCH] dm: consolidate spinlocks in dm_io struct
Git-commit: 4d7bca13dd9a5033174b0735056c5658cb893e76
Patch-mainline: v5.18-rc1
References: jsc#PED-2765

No reason to have separate startio_lock and endio_lock given endio_lock
could be used during submission anyway.

This change leaves the dm_io struct weighing in at 256 bytes (down
from 272 bytes, so saves a cacheline).

Signed-off-by: Mike Snitzer <snitzer@kernel.org>
Signed-off-by: Coly Li <colyli@suse.de>

---
 drivers/md/dm-core.h |  3 +--
 drivers/md/dm.c      | 11 +++++------
 2 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/drivers/md/dm-core.h b/drivers/md/dm-core.h
index f186d7afaeab..2c49aa6501b0 100644
--- a/drivers/md/dm-core.h
+++ b/drivers/md/dm-core.h
@@ -250,12 +250,11 @@ struct dm_io {
 	struct mapped_device *md;
 	struct bio *orig_bio;
 	blk_status_t status;
+	spinlock_t lock;
 	unsigned long start_time;
 	void *data;
 	struct hlist_node node;
 	struct task_struct *map_task;
-	spinlock_t startio_lock;
-	spinlock_t endio_lock;
 	struct dm_stats_aux stats_aux;
 	/* last member of dm_target_io is 'struct bio' */
 	struct dm_target_io tio;
diff --git a/drivers/md/dm.c b/drivers/md/dm.c
index cca11cf42cc3..b762a48d3fdf 100644
--- a/drivers/md/dm.c
+++ b/drivers/md/dm.c
@@ -550,9 +550,9 @@ static void dm_start_io_acct(struct dm_io *io, struct bio *clone)
 		if (dm_io_flagged(io, DM_IO_ACCOUNTED))
 			return;
 		/* Can afford locking given DM_TIO_IS_DUPLICATE_BIO */
-		spin_lock_irqsave(&io->startio_lock, flags);
+		spin_lock_irqsave(&io->lock, flags);
 		dm_io_set_flag(io, DM_IO_ACCOUNTED);
-		spin_unlock_irqrestore(&io->startio_lock, flags);
+		spin_unlock_irqrestore(&io->lock, flags);
 	}
 
 	__dm_start_io_acct(io, bio);
@@ -584,8 +584,7 @@ static struct dm_io *alloc_io(struct mapped_device *md, struct bio *bio)
 	io->orig_bio = NULL;
 	io->md = md;
 	io->map_task = current;
-	spin_lock_init(&io->startio_lock);
-	spin_lock_init(&io->endio_lock);
+	spin_lock_init(&io->lock);
 	io->start_time = jiffies;
 	io->flags = 0;
 
@@ -933,11 +932,11 @@ void dm_io_dec_pending(struct dm_io *io, blk_status_t error)
 	/* Push-back supersedes any I/O errors */
 	if (unlikely(error)) {
 		unsigned long flags;
-		spin_lock_irqsave(&io->endio_lock, flags);
+		spin_lock_irqsave(&io->lock, flags);
 		if (!(io->status == BLK_STS_DM_REQUEUE &&
 		      __noflush_suspending(io->md)))
 			io->status = error;
-		spin_unlock_irqrestore(&io->endio_lock, flags);
+		spin_unlock_irqrestore(&io->lock, flags);
 	}
 
 	if (atomic_dec_and_test(&io->io_count))
-- 
2.35.3

