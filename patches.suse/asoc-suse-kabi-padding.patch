From: Takashi Iwai <tiwai@suse.de>
Subject: Add kABI placeholders for ASoC
Patch-mainline: Never, kABI padding
References: bsc#1179531

Add a few kABI padding fields to ASoC objects that are embedded in
other structs.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 include/sound/soc-acpi.h      |    4 ++++
 include/sound/soc-component.h |    4 ++++
 include/sound/soc-dai.h       |    6 ++++++
 include/sound/soc-dapm.h      |    4 ++++
 include/sound/soc-dpcm.h      |    4 ++++
 include/sound/soc-jack.h      |    5 +++++
 include/sound/soc.h           |   11 +++++++++++
 7 files changed, 38 insertions(+)

--- a/include/sound/soc-acpi.h
+++ b/include/sound/soc-acpi.h
@@ -17,6 +17,7 @@ struct snd_soc_acpi_package_context {
 	struct acpi_buffer *format;
 	struct acpi_buffer *state;
 	bool data_valid;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* codec name is used in DAIs is i2c-<HID>:00 with HID being 8 chars */
@@ -87,6 +88,7 @@ struct snd_soc_acpi_mach_params {
 	unsigned short subsystem_vendor;
 	unsigned short subsystem_device;
 	bool subsystem_id_set;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -205,6 +207,7 @@ struct snd_soc_acpi_mach {
 	struct snd_soc_acpi_mach_params mach_params;
 	const char *sof_tplg_filename;
 	const u32 tplg_quirk_mask;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define SND_SOC_ACPI_MAX_CODECS 3
@@ -221,6 +224,7 @@ struct snd_soc_acpi_mach {
 struct snd_soc_acpi_codecs {
 	int num_codecs;
 	u8 codecs[SND_SOC_ACPI_MAX_CODECS][ACPI_ID_LEN];
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline bool snd_soc_acpi_sof_parent(struct device *dev)
--- a/include/sound/soc-component.h
+++ b/include/sound/soc-component.h
@@ -202,6 +202,8 @@ struct snd_soc_component_driver {
 #ifdef CONFIG_DEBUG_FS
 	const char *debugfs_prefix;
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct snd_soc_component {
@@ -254,6 +256,8 @@ struct snd_soc_component {
 
 	struct dentry *debugfs_root;
 	const char *debugfs_prefix;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define for_each_component_dais(component, dai)\
--- a/include/sound/soc-dai.h
+++ b/include/sound/soc-dai.h
@@ -425,6 +425,8 @@ struct snd_soc_dai_driver {
 	unsigned int symmetric_rate:1;
 	unsigned int symmetric_channels:1;
 	unsigned int symmetric_sample_bits:1;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* for Playback/Capture */
@@ -435,6 +437,8 @@ struct snd_soc_dai_stream {
 	unsigned int tdm_mask;	/* CODEC TDM slot masks and params (for fixup) */
 
 	void *dma_data;		/* DAI DMA data */
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /*
@@ -471,6 +475,8 @@ struct snd_soc_dai {
 
 	/* bit field */
 	unsigned int probed:1;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline const struct snd_soc_pcm_stream *
--- a/include/sound/soc-dapm.h
+++ b/include/sound/soc-dapm.h
@@ -678,6 +678,8 @@ struct snd_soc_dapm_widget {
 	struct clk *clk;
 
 	int channel;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct snd_soc_dapm_update {
@@ -713,6 +715,8 @@ struct snd_soc_dapm_context {
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_dapm;
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* A list of widgets associated with an object, typically a snd_kcontrol */
--- a/include/sound/soc-dpcm.h
+++ b/include/sound/soc-dpcm.h
@@ -81,6 +81,8 @@ struct snd_soc_dpcm {
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs_state;
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /*
@@ -102,6 +104,8 @@ struct snd_soc_dpcm_runtime {
 	int be_start; /* refcount protected by BE stream pcm lock */
 	int be_pause; /* refcount protected by BE stream pcm lock */
 	bool fe_pause; /* used to track STOP after PAUSE */
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define for_each_dpcm_fe(be, stream, _dpcm)				\
--- a/include/sound/soc-jack.h
+++ b/include/sound/soc-jack.h
@@ -21,6 +21,7 @@ struct snd_soc_jack_pin {
 	const char *pin;
 	int mask;
 	bool invert;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -39,6 +40,7 @@ struct snd_soc_jack_zone {
 	unsigned int jack_type;
 	unsigned int debounce_time;
 	struct list_head list;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
@@ -75,6 +77,8 @@ struct snd_soc_jack_gpio {
 	void *data;
 	/* public: */
 	int (*jack_status_check)(void *data);
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct snd_soc_jack {
@@ -85,6 +89,7 @@ struct snd_soc_jack {
 	int status;
 	struct blocking_notifier_head notifier;
 	struct list_head jack_zones;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* Jack reporting */
--- a/include/sound/soc.h
+++ b/include/sound/soc.h
@@ -639,6 +639,7 @@ struct snd_soc_pcm_stream {
 	unsigned int channels_min;	/* min channels */
 	unsigned int channels_max;	/* max channels */
 	unsigned int sig_bits;		/* number of bits of content */
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* SoC audio ops */
@@ -825,6 +826,8 @@ struct snd_soc_dai_link {
 #ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj; /* For topology */
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline int snd_soc_link_num_ch_map(const struct snd_soc_dai_link *link)
@@ -981,6 +984,8 @@ struct snd_soc_aux_dev {
 
 	/* codec/machine specific init - e.g. add machine controls */
 	int (*init)(struct snd_soc_component *component);
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* SoC card */
@@ -1112,6 +1117,8 @@ struct snd_soc_card {
 	unsigned int component_chaining:1;
 
 	void *drvdata;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 #define for_each_card_prelinks(card, i, link)				\
 	for ((i) = 0;							\
@@ -1199,6 +1206,8 @@ struct snd_soc_pcm_runtime {
 
 	bool initialized;
 
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
+
 	int num_components;
 	struct snd_soc_component *components[]; /* CPU/Codec/Platform */
 };
@@ -1249,6 +1258,7 @@ struct soc_mixer_control {
 #ifdef CONFIG_SND_SOC_TOPOLOGY
 	struct snd_soc_dobj dobj;
 #endif
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct soc_bytes {
@@ -1267,6 +1277,7 @@ struct soc_bytes_ext {
 			unsigned int size);
 	int (*put)(struct snd_kcontrol *kcontrol, const unsigned int __user *bytes,
 			unsigned int size);
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /* multi register control */
