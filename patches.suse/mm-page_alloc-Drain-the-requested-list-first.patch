From 82e4481d178df7d2dcdc36d8b1fe43fba6dc6f43 Mon Sep 17 00:00:00 2001
From: Mel Gorman <mgorman@techsingularity.net>
Date: Wed, 16 Feb 2022 13:07:14 +0000
Subject: [PATCH] mm/page_alloc: Drain the requested list first during bulk free

References: bnc#1193239,bnc#1193199,bnc#1193329
Patch-mainline: Not yet, must be posted for review

Prior to the series, pindex 0 (order-0 MIGRATE_UNMOVABLE) was always
skipped first for reasons that have been forgotten. The most likely
reason was to artficially preserve MIGRATE_UNMOVABLE but there is
no reason why that would be optimal as it depends on the workload.
As free_pcppages_bulk() typically receives the pindex of the PCP list
that exceeded high, always start draining that list.

Signed-off-by: Mel Gorman <mgorman@techsingularity.net>
Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 mm/page_alloc.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 2587d452fb36..9c2c70609cea 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -1448,6 +1448,10 @@ static void free_pcppages_bulk(struct zone *zone, int count,
 	 * below while (list_empty(list)) loop.
 	 */
 	count = min(pcp->count, count);
+
+	/* Ensure requested pindex is drained first. */
+	pindex = pindex - 1;
+
 	while (count > 0) {
 		struct list_head *list;
 		int nr_pages;
