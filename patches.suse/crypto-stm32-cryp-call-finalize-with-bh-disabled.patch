From 56ddb9aa3b324c2d9645b5a7343e46010cf3f6ce Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Maxime=20M=C3=A9r=C3=A9?= <maxime.mere@foss.st.com>
Date: Tue, 28 May 2024 16:05:48 +0200
Subject: [PATCH] crypto: stm32/cryp - call finalize with bh disabled
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Git-commit: 56ddb9aa3b324c2d9645b5a7343e46010cf3f6ce
Patch-mainline: v6.11-rc1
References: CVE-2024-47658 bsc#1231436

The finalize operation in interrupt mode produce a produces a spinlock
recursion warning. The reason is the fact that BH must be disabled
during this process.

Signed-off-by: Maxime Méré <maxime.mere@foss.st.com>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>
---
 drivers/crypto/stm32/stm32-cryp.c |    6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

--- a/drivers/crypto/stm32/stm32-cryp.c
+++ b/drivers/crypto/stm32/stm32-cryp.c
@@ -14,6 +14,7 @@
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 #include <linux/reset.h>
+#include <linux/bottom_half.h>
 
 #include <crypto/aes.h>
 #include <crypto/internal/des.h>
@@ -1694,8 +1695,11 @@ static irqreturn_t stm32_cryp_irq_thread
 		it_mask &= ~IMSCR_OUT;
 	stm32_cryp_write(cryp, cryp->caps->imsc, it_mask);
 
-	if (!cryp->payload_in && !cryp->header_in && !cryp->payload_out)
+	if (!cryp->payload_in && !cryp->header_in && !cryp->payload_out) {
+		local_bh_disable();
 		stm32_cryp_finish_req(cryp, 0);
+		local_bh_enable();
+	}
 
 	return IRQ_HANDLED;
 }
