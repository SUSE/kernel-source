From: Filipe Manana <fdmanana@suse.com>
Date: Mon, 12 May 2025 08:55:42 +0100
Subject: [PATCH] btrfs: pass true to btrfs_delalloc_release_space() at
 btrfs_page_mkwrite()
Git-commit: bf1c74ccba9893adee482fbf6ce84b781e5008a3
Patch-mainline: v6.16-rc1
References: bsc#1247949

In the last call to btrfs_delalloc_release_space() where the value of the
variable 'ret' is never zero, we pass the expression 'ret != 0' as the
value for the argument 'qgroup_free', which always evaluates to true.
Make this less confusing and more clear by explicitly passing true
instead.

Reviewed-by: Qu Wenruo <wqu@suse.com>
Signed-off-by: Filipe Manana <fdmanana@suse.com>
Reviewed-by: David Sterba <dsterba@suse.com>
Signed-off-by: David Sterba <dsterba@suse.com>
---
 fs/btrfs/file.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/fs/btrfs/file.c b/fs/btrfs/file.c
index 32aad1b02b01a..a2b1fc536fdd2 100644
--- a/fs/btrfs/file.c
+++ b/fs/btrfs/file.c
@@ -1971,7 +1971,7 @@ static vm_fault_t btrfs_page_mkwrite(struct vm_fault *vmf)
 out:
 	btrfs_delalloc_release_extents(BTRFS_I(inode), fsize);
 	btrfs_delalloc_release_space(BTRFS_I(inode), data_reserved, page_start,
-				     reserved_space, (ret != 0));
+				     reserved_space, true);
 out_noreserve:
 	sb_end_pagefault(inode->i_sb);
 	extent_changeset_free(data_reserved);
-- 
2.35.3

