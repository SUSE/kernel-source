From: Eduard Zingerman <eddyz87@gmail.com>
Date: Sat, 25 Mar 2023 04:54:43 +0200
Subject: selftests/bpf: __imm_insn & __imm_const macro for bpf_misc.h
Patch-mainline: v6.4-rc1
Git-commit: 207b1ba3019100d862931e97b49f76ff1e0a89f2
References: bsc#1225903

Add two convenience macro for BPF test cases,
allowing the following usage:

  #include <linux/filter.h>

  ...
  asm volatile (
  ...
  ".8byte %[raw_insn];"
  ...
  "r1 += %[st_foo_offset];"
  ...
  :
  : __imm_insn(raw_insn, BPF_RAW_INSN(...)),
    __imm_const(st_foo_offset, offsetof(struct st, foo))
  : __clobber_all);

Signed-off-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/r/20230325025524.144043-3-eddyz87@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
[shung-hsi.yu: included __imm_ptr from commit 57400dcce6c2 "selftests/bpf: add
iterators tests", which is not backported because BPF open-coded iterator is
not supported]
Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>

---
 tools/testing/selftests/bpf/progs/bpf_misc.h |    3 +++
 1 file changed, 3 insertions(+)

--- a/tools/testing/selftests/bpf/progs/bpf_misc.h
+++ b/tools/testing/selftests/bpf/progs/bpf_misc.h
@@ -35,7 +35,10 @@
 #define __clobber_all "r0", "r1", "r2", "r3", "r4", "r5", "r6", "r7", "r8", "r9", "memory"
 #define __clobber_common "r0", "r1", "r2", "r3", "r4", "r5", "memory"
 #define __imm(name) [name]"i"(name)
+#define __imm_const(name, expr) [name]"i"(expr)
 #define __imm_addr(name) [name]"i"(&name)
+#define __imm_ptr(name) [name]"p"(&name)
+#define __imm_insn(name, expr) [name]"i"(*(long *)&(expr))
 
 #if defined(__TARGET_ARCH_x86)
 #define SYSCALL_WRAPPER 1
