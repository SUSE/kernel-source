From fd9f4e62a39f09a7c014d7415c2b9d1390aa0504 Mon Sep 17 00:00:00 2001
From: Christoph Hellwig <hch@lst.de>
Date: Tue, 18 Jan 2022 08:04:44 +0100
Subject: [PATCH] block: assign bi_bdev for cloned bios in blk_rq_prep_clone
Git-commit: fd9f4e62a39f09a7c014d7415c2b9d1390aa0504
Patch-mainline: v5.17-rc1
References: bsc#1204328

bio_clone_fast() sets the cloned bio to have the same ->bi_bdev as the
source bio. This means that when request-based dm called setup_clone(),
the cloned bio had its ->bi_bdev pointing to the dm device. After Commit
0b6e522cdc4a ("blk-mq: use ->bi_bdev for I/O accounting")
__blk_account_io_start() started using the request's ->bio->bi_bdev for
I/O accounting, if it was set. This caused IO going to the underlying
devices to use the dm device for their I/O accounting.

Set up the proper ->bi_bdev in blk_rq_prep_clone based on the whole
device bdev for the queue the request is cloned onto.

Fixes: 0b6e522cdc4a ("blk-mq: use ->bi_bdev for I/O accounting")
Reported-by: Benjamin Marzinski <bmarzins@redhat.com>
Signed-off-by: Christoph Hellwig <hch@lst.de>
[hch: the commit message is mostly from a different patch from Benjamin]
Reviewed-by: Ming Lei <ming.lei@redhat.com>
Reviewed-by: Benjamin Marzinski <bmarzins@redhat.com>
Link: https://lore.kernel.org/r/20220118070444.1241739-1-hch@lst.de
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: Jan Kara <jack@suse.cz>
---
 block/blk-core.c    |    2 ++
 include/linux/bio.h |   11 +++++++----
 2 files changed, 9 insertions(+), 4 deletions(-)

--- a/block/blk-core.c
+++ b/block/blk-core.c
@@ -1725,6 +1725,8 @@ int blk_rq_prep_clone(struct request *rq
 		bio = bio_clone_fast(bio_src, gfp_mask, bs);
 		if (!bio)
 			goto free_and_out;
+		/* Partition is not set by multipath target for cloned rq */
+		bio_set_disk(bio, rq->rq_disk, 0);
 
 		if (bio_ctr && bio_ctr(bio, bio_src, data))
 			goto free_and_out;
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -458,15 +458,18 @@ extern void bvec_free(mempool_t *, struc
 extern unsigned int bvec_nr_vecs(unsigned short idx);
 extern const char *bio_devname(struct bio *bio, char *buffer);
 
-#define bio_set_dev(bio, bdev) 			\
+#define bio_set_disk(bio, disk, part)		\
 do {						\
-	if ((bio)->bi_disk != (bdev)->bd_disk)	\
+	if ((bio)->bi_disk != (disk))		\
 		bio_clear_flag(bio, BIO_THROTTLED);\
-	(bio)->bi_disk = (bdev)->bd_disk;	\
-	(bio)->bi_partno = (bdev)->bd_partno;	\
+	(bio)->bi_disk = (disk);		\
+	(bio)->bi_partno = (part);		\
 	bio_associate_blkg(bio);		\
 } while (0)
 
+#define bio_set_dev(bio, bdev) bio_set_disk(bio, (bdev)->bd_disk, \
+					    (bdev)->bd_partno)
+
 #define bio_copy_dev(dst, src)			\
 do {						\
 	(dst)->bi_disk = (src)->bi_disk;	\
