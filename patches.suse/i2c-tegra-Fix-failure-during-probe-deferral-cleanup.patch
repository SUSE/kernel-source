From: Thierry Reding <treding@nvidia.com>
Date: Fri, 7 Jul 2023 15:26:19 +0200
Subject: i2c: tegra: Fix failure during probe deferral cleanup
Git-commit: b3497ef404dc3a8a7b8438a8950f46c4cd0e6ccf
Patch-mainline: v6.5-rc7
References: git-fixes

If the driver fails to obtain a DMA channel, it will initiate cleanup
and try to release the DMA channel that couldn't be retrieved. This will
cause a crash because the cleanup will try to dereference an ERR_PTR()-
encoded error code.

However, there's nothing to clean up at this point yet, so we can avoid
this by simply resetting the DMA channel to NULL instead of storing the
error code.

Fixes: fcc8a89a1c83 ("i2c: tegra: Share same DMA channel for RX and TX")
Signed-off-by: Thierry Reding <treding@nvidia.com>
Tested-by: Akhil R <akhilrajeev@nvidia.com>
Reviewed-by: Andi Shyti <andi.shyti@kernel.org>
Signed-off-by: Wolfram Sang <wsa@kernel.org>
Acked-by: Stanimir Varbanov <svarbanov@suse.de>
---
 drivers/i2c/busses/i2c-tegra.c |    1 +
 1 file changed, 1 insertion(+)

--- a/drivers/i2c/busses/i2c-tegra.c
+++ b/drivers/i2c/busses/i2c-tegra.c
@@ -452,6 +452,7 @@ static int tegra_i2c_init_dma(struct teg
 	i2c_dev->dma_chan = dma_request_chan(i2c_dev->dev, "tx");
 	if (IS_ERR(i2c_dev->dma_chan)) {
 		err = PTR_ERR(i2c_dev->dma_chan);
+		i2c_dev->dma_chan = NULL;
 		goto err_out;
 	}
 
