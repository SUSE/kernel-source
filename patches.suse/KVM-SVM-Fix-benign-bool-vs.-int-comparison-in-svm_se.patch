Patch-mainline: v6.4-rc1
Git-commit: 0c928ff26bd68d9638444601c0cbf4e4f978b752
References: git-fixes
From: Sean Christopherson <seanjc@google.com>
Date: Wed, 22 Mar 2023 09:55:20 -0700
Subject: [PATCH] KVM: SVM: Fix benign "bool vs. int" comparison in
 svm_set_cr0()

Explicitly convert the return from is_paging() to a bool when comparing
against old_paging, which is also a boolean.  is_paging() sneakily uses
kvm_read_cr0_bits() and returns an int, i.e. returns X86_CR0_PG or 0, not
1 or 0.

Luckily, the bug is benign as it only results in a false positive, not a
false negative, i.e. only causes a spurious refresh of CR4 when paging is
enabled in both the old and new.

Cc: Maxim Levitsky <mlevitsk@redhat.com>
Fixes: c53bbe2145f5 ("KVM: x86: SVM: don't passthrough SMAP/SMEP/PKE bits in !NPT && !gCR0.PG case")
Signed-off-by: Sean Christopherson <seanjc@google.com>
Signed-off-by: Juergen Gross <jgross@suse.com>
---
 arch/x86/kvm/svm/svm.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/kvm/svm/svm.c b/arch/x86/kvm/svm/svm.c
index 70183d2271b5..19794a8ea28c 100644
--- a/arch/x86/kvm/svm/svm.c
+++ b/arch/x86/kvm/svm/svm.c
@@ -1802,7 +1802,7 @@ void svm_set_cr0(struct kvm_vcpu *vcpu, unsigned long cr0)
 
 	if (!npt_enabled) {
 		hcr0 |= X86_CR0_PG | X86_CR0_WP;
-		if (old_paging != is_paging(vcpu))
+		if (old_paging != !!is_paging(vcpu))
 			svm_set_cr4(vcpu, kvm_read_cr4(vcpu));
 	}
 
-- 
2.35.3

