From 1d62ada48d41d72d72232585eed0f3e1136ae1fb Mon Sep 17 00:00:00 2001
From: Rajvi Jingar <rajvi.jingar@linux.intel.com>
Date: Mon, 18 Dec 2023 20:22:14 -0800
Subject: [PATCH] platform/x86/intel/pmc: Add ssram_init flag in PMC discovery in Meteor Lake
Git-commit: 1d62ada48d41d72d72232585eed0f3e1136ae1fb
Patch-mainline: v6.8-rc1
References: jsc#PED-10411

If PMC discovery using pmc_core_ssram_init() was unsuccessful for the
Meteor Lake platform, the legacy enumeration method is used. In this
case pci device struct for the PMC SSRAM is not available
and pmc_core_ssram_get_lpm_reqs() will not work. Add ssram_init flag to
indicate if the PMC SSRAM initialization was successful or not. Call
pmc_core_ssram_get_lpm_reqs() only if the ssram_init flag is set to true.

Signed-off-by: Rajvi Jingar <rajvi.jingar@linux.intel.com>
Link: https://lore.kernel.org/r/20231219042216.2592029-6-rajvi.jingar@linux.intel.com
Reviewed-by: Hans de Goede <hdegoede@redhat.com>
Signed-off-by: Hans de Goede <hdegoede@redhat.com>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/platform/x86/intel/pmc/mtl.c |    7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

--- a/drivers/platform/x86/intel/pmc/mtl.c
+++ b/drivers/platform/x86/intel/pmc/mtl.c
@@ -996,6 +996,7 @@ int mtl_core_init(struct pmc_dev *pmcdev
 	struct pmc *pmc = pmcdev->pmcs[PMC_IDX_SOC];
 	int ret;
 	int func = 2;
+	bool ssram_init = true;
 
 	mtl_d3_fixup();
 
@@ -1009,6 +1010,7 @@ int mtl_core_init(struct pmc_dev *pmcdev
 	 */
 	ret = pmc_core_ssram_init(pmcdev, func);
 	if (ret) {
+		ssram_init = false;
 		dev_warn(&pmcdev->pdev->dev,
 			 "ssram init failed, %d, using legacy init\n", ret);
 		pmc->map = &mtl_socm_reg_map;
@@ -1020,5 +1022,8 @@ int mtl_core_init(struct pmc_dev *pmcdev
 	pmc_core_get_low_power_modes(pmcdev);
 	pmc_core_punit_pmt_init(pmcdev, MTL_PMT_DMU_GUID);
 
-	return pmc_core_ssram_get_lpm_reqs(pmcdev);
+	if (ssram_init)
+		return pmc_core_ssram_get_lpm_reqs(pmcdev);
+
+	return 0;
 }
