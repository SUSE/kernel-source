From: Zhu Yanjun <yanjun.zhu@linux.dev>
Date: Thu, 24 Feb 2022 13:28:32 -0500
Subject: RDMA/irdma: Make irdma_create_mg_ctx return a void
Patch-mainline: v5.18-rc1
Git-commit: ea7596c1e5a738a6979edf1e3539e0c85db15e90
References: jsc#PED-377

The function irdma_create_mg_ctx always returns 0, so make it void and
delete the return value check.

Link: https://lore.kernel.org/r/20220224182832.3896686-1-yanjun.zhu@linux.dev
Signed-off-by: Zhu Yanjun <yanjun.zhu@linux.dev>
Acked-by: Shiraz Saleem <shiraz.saleem@intel.com>
Signed-off-by: Jason Gunthorpe <jgg@nvidia.com>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/infiniband/hw/irdma/uda.c |    9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)

--- a/drivers/infiniband/hw/irdma/uda.c
+++ b/drivers/infiniband/hw/irdma/uda.c
@@ -84,7 +84,7 @@ int irdma_sc_access_ah(struct irdma_sc_c
  * irdma_create_mg_ctx() - create a mcg context
  * @info: multicast group context info
  */
-static int irdma_create_mg_ctx(struct irdma_mcast_grp_info *info)
+static void irdma_create_mg_ctx(struct irdma_mcast_grp_info *info)
 {
 	struct irdma_mcast_grp_ctx_entry_info *entry_info = NULL;
 	u8 idx = 0; /* index in the array */
@@ -103,8 +103,6 @@ static int irdma_create_mg_ctx(struct ir
 			ctx_idx++;
 		}
 	}
-
-	return 0;
 }
 
 /**
@@ -119,7 +117,6 @@ int irdma_access_mcast_grp(struct irdma_
 			   u64 scratch)
 {
 	__le64 *wqe;
-	int ret_code = 0;
 
 	if (info->mg_id >= IRDMA_UDA_MAX_FSI_MGS) {
 		ibdev_dbg(to_ibdev(cqp->dev), "WQE: mg_id out of range\n");
@@ -132,9 +129,7 @@ int irdma_access_mcast_grp(struct irdma_
 		return -ENOMEM;
 	}
 
-	ret_code = irdma_create_mg_ctx(info);
-	if (ret_code)
-		return ret_code;
+	irdma_create_mg_ctx(info);
 
 	set_64bit_val(wqe, 32, info->dma_mem_mc.pa);
 	set_64bit_val(wqe, 16,
