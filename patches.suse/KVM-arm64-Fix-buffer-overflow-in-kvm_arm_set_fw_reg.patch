From: Dan Carpenter <dan.carpenter@linaro.org>
Date: Wed, 19 Apr 2023 13:16:13 +0300
Subject: KVM: arm64: Fix buffer overflow in kvm_arm_set_fw_reg()
Git-commit: a25bc8486f9c01c1af6b6c5657234b2eee2c39d6
Patch-mainline: v6.3
References: git-fixes

The KVM_REG_SIZE() comes from the ioctl and it can be a power of two
between 0-32768 but if it is more than sizeof(long) this will corrupt
memory.

Fixes: 99adb567632b ("KVM: arm/arm64: Add save/restore support for firmware workaround state")
Signed-off-by: Dan Carpenter <dan.carpenter@linaro.org>
Reviewed-by: Steven Price <steven.price@arm.com>
Reviewed-by: Eric Auger <eric.auger@redhat.com>
Reviewed-by: Marc Zyngier <maz@kernel.org>
Link: https://lore.kernel.org/r/4efbab8c-640f-43b2-8ac6-6d68e08280fe@kili.mountain
Signed-off-by: Oliver Upton <oliver.upton@linux.dev>
[iivanov: Moved this check from hipercalls.c to psci.c
 because we don't have 85fbe08e4da862dc64fc10071c4a03e51b6361d0]
Acked-by: Ivan T. Ivanov <iivanov@suse.de>
---
 arch/arm64/kvm/psci.c |    3 +++
 1 file changed, 3 insertions(+)

--- a/arch/arm64/kvm/psci.c
+++ b/arch/arm64/kvm/psci.c
@@ -499,6 +499,9 @@ int kvm_arm_set_fw_reg(struct kvm_vcpu *
 	u64 val;
 	int wa_level;
 
+	if (KVM_REG_SIZE(reg->id) != sizeof(val))
+		return -ENOENT;
+
 	if (copy_from_user(&val, uaddr, KVM_REG_SIZE(reg->id)))
 		return -EFAULT;
 
