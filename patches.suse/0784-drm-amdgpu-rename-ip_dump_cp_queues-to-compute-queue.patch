From 53eea97e63ad9a415b26567f63103f11aa8e6673 Mon Sep 17 00:00:00 2001
From: Sunil Khatri <sunil.khatri@amd.com>
Date: Fri, 31 May 2024 12:22:20 +0530
Subject: drm/amdgpu: rename ip_dump_cp_queues to compute queues
Git-commit: 33837d62a4cb5ef316dec4fada5c1012ddbc0239
Patch-mainline: v6.11-rc1
References: jsc#PED-9898 jsc#PED-10191 jsc#PED-10197 jsc#PED-10226 jsc#PED-10237 jsc#PED-10340 jsc#PED-10852 jsc#PED-11022

Rename the variable ip_dump_cp_queues to ip_dump_compute_queue
as it represent compute queues.

Reviewed-by: Alex Deucher <alexander.deucher@amd.com>
Signed-off-by: Sunil Khatri <sunil.khatri@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Patrik Jakobsson <pjakobsson@suse.de>
---
 drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.h |  2 +-
 drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c  | 14 +++++++-------
 drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c  | 14 +++++++-------
 drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c   | 14 +++++++-------
 4 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.h b/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.h
index a9d9f372a7c1..6b0416777c5b 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.h
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_gfx.h
@@ -436,7 +436,7 @@ struct amdgpu_gfx {
 
 	/* IP reg dump */
 	uint32_t			*ip_dump_core;
-	uint32_t			*ip_dump_cp_queues;
+	uint32_t			*ip_dump_compute_queues;
 	uint32_t			*ip_dump_gfx_queues;
 };
 
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
index 632061b25867..56f594ad557e 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
@@ -4664,9 +4664,9 @@ static void gfx_v10_0_alloc_ip_dump(struct amdgpu_device *adev)
 	ptr = kcalloc(reg_count * inst, sizeof(uint32_t), GFP_KERNEL);
 	if (ptr == NULL) {
 		DRM_ERROR("Failed to allocate memory for GFX CP IP Dump\n");
-		adev->gfx.ip_dump_cp_queues = NULL;
+		adev->gfx.ip_dump_compute_queues = NULL;
 	} else {
-		adev->gfx.ip_dump_cp_queues = ptr;
+		adev->gfx.ip_dump_compute_queues = ptr;
 	}
 
 	/* Allocate memory for gfx queue registers for all the instances */
@@ -4886,7 +4886,7 @@ static int gfx_v10_0_sw_fini(void *handle)
 	gfx_v10_0_free_microcode(adev);
 
 	kfree(adev->gfx.ip_dump_core);
-	kfree(adev->gfx.ip_dump_cp_queues);
+	kfree(adev->gfx.ip_dump_compute_queues);
 	kfree(adev->gfx.ip_dump_gfx_queues);
 
 	return 0;
@@ -9261,7 +9261,7 @@ static void gfx_v10_ip_print(void *handle, struct drm_printer *p)
 			   adev->gfx.ip_dump_core[i]);
 
 	/* print compute queue registers for all instances */
-	if (!adev->gfx.ip_dump_cp_queues)
+	if (!adev->gfx.ip_dump_compute_queues)
 		return;
 
 	reg_count = ARRAY_SIZE(gc_cp_reg_list_10);
@@ -9277,7 +9277,7 @@ static void gfx_v10_ip_print(void *handle, struct drm_printer *p)
 				for (reg = 0; reg < reg_count; reg++) {
 					drm_printf(p, "%-50s \t 0x%08x\n",
 						   gc_cp_reg_list_10[reg].reg_name,
-						   adev->gfx.ip_dump_cp_queues[index + reg]);
+						   adev->gfx.ip_dump_compute_queues[index + reg]);
 				}
 				index += reg_count;
 			}
@@ -9324,7 +9324,7 @@ static void gfx_v10_ip_dump(void *handle)
 	amdgpu_gfx_off_ctrl(adev, true);
 
 	/* dump compute queue registers for all instances */
-	if (!adev->gfx.ip_dump_cp_queues)
+	if (!adev->gfx.ip_dump_compute_queues)
 		return;
 
 	reg_count = ARRAY_SIZE(gc_cp_reg_list_10);
@@ -9337,7 +9337,7 @@ static void gfx_v10_ip_dump(void *handle)
 				nv_grbm_select(adev, 1 + i, j, k, 0);
 
 				for (reg = 0; reg < reg_count; reg++) {
-					adev->gfx.ip_dump_cp_queues[index + reg] =
+					adev->gfx.ip_dump_compute_queues[index + reg] =
 						RREG32(SOC15_REG_ENTRY_OFFSET(
 							gc_cp_reg_list_10[reg]));
 				}
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
index 72676bfbac8c..e4e669d91a57 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v11_0.c
@@ -1496,9 +1496,9 @@ static void gfx_v11_0_alloc_ip_dump(struct amdgpu_device *adev)
 	ptr = kcalloc(reg_count * inst, sizeof(uint32_t), GFP_KERNEL);
 	if (ptr == NULL) {
 		DRM_ERROR("Failed to allocate memory for GFX CP IP Dump\n");
-		adev->gfx.ip_dump_cp_queues = NULL;
+		adev->gfx.ip_dump_compute_queues = NULL;
 	} else {
-		adev->gfx.ip_dump_cp_queues = ptr;
+		adev->gfx.ip_dump_compute_queues = ptr;
 	}
 
 	/* Allocate memory for gfx queue registers for all the instances */
@@ -1731,7 +1731,7 @@ static int gfx_v11_0_sw_fini(void *handle)
 	gfx_v11_0_free_microcode(adev);
 
 	kfree(adev->gfx.ip_dump_core);
-	kfree(adev->gfx.ip_dump_cp_queues);
+	kfree(adev->gfx.ip_dump_compute_queues);
 	kfree(adev->gfx.ip_dump_gfx_queues);
 
 	return 0;
@@ -6378,7 +6378,7 @@ static void gfx_v11_ip_print(void *handle, struct drm_printer *p)
 			   adev->gfx.ip_dump_core[i]);
 
 	/* print compute queue registers for all instances */
-	if (!adev->gfx.ip_dump_cp_queues)
+	if (!adev->gfx.ip_dump_compute_queues)
 		return;
 
 	reg_count = ARRAY_SIZE(gc_cp_reg_list_11);
@@ -6394,7 +6394,7 @@ static void gfx_v11_ip_print(void *handle, struct drm_printer *p)
 				for (reg = 0; reg < reg_count; reg++) {
 					drm_printf(p, "%-50s \t 0x%08x\n",
 						   gc_cp_reg_list_11[reg].reg_name,
-						   adev->gfx.ip_dump_cp_queues[index + reg]);
+						   adev->gfx.ip_dump_compute_queues[index + reg]);
 				}
 				index += reg_count;
 			}
@@ -6441,7 +6441,7 @@ static void gfx_v11_ip_dump(void *handle)
 	amdgpu_gfx_off_ctrl(adev, true);
 
 	/* dump compute queue registers for all instances */
-	if (!adev->gfx.ip_dump_cp_queues)
+	if (!adev->gfx.ip_dump_compute_queues)
 		return;
 
 	reg_count = ARRAY_SIZE(gc_cp_reg_list_11);
@@ -6453,7 +6453,7 @@ static void gfx_v11_ip_dump(void *handle)
 				/* ME0 is for GFX so start from 1 for CP */
 				soc21_grbm_select(adev, 1+i, j, k, 0);
 				for (reg = 0; reg < reg_count; reg++) {
-					adev->gfx.ip_dump_cp_queues[index + reg] =
+					adev->gfx.ip_dump_compute_queues[index + reg] =
 						RREG32(SOC15_REG_ENTRY_OFFSET(
 							gc_cp_reg_list_11[reg]));
 				}
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
index 59d8f6c4ba25..6180e7a9d89e 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
@@ -2145,9 +2145,9 @@ static void gfx_v9_0_alloc_ip_dump(struct amdgpu_device *adev)
 	ptr = kcalloc(reg_count * inst, sizeof(uint32_t), GFP_KERNEL);
 	if (ptr == NULL) {
 		DRM_ERROR("Failed to allocate memory for GFX CP IP Dump\n");
-		adev->gfx.ip_dump_cp_queues = NULL;
+		adev->gfx.ip_dump_compute_queues = NULL;
 	} else {
-		adev->gfx.ip_dump_cp_queues = ptr;
+		adev->gfx.ip_dump_compute_queues = ptr;
 	}
 }
 
@@ -2366,7 +2366,7 @@ static int gfx_v9_0_sw_fini(void *handle)
 	gfx_v9_0_free_microcode(adev);
 
 	kfree(adev->gfx.ip_dump_core);
-	kfree(adev->gfx.ip_dump_cp_queues);
+	kfree(adev->gfx.ip_dump_compute_queues);
 
 	return 0;
 }
@@ -7017,7 +7017,7 @@ static void gfx_v9_ip_print(void *handle, struct drm_printer *p)
 			   adev->gfx.ip_dump_core[i]);
 
 	/* print compute queue registers for all instances */
-	if (!adev->gfx.ip_dump_cp_queues)
+	if (!adev->gfx.ip_dump_compute_queues)
 		return;
 
 	reg_count = ARRAY_SIZE(gc_cp_reg_list_9);
@@ -7033,7 +7033,7 @@ static void gfx_v9_ip_print(void *handle, struct drm_printer *p)
 				for (reg = 0; reg < reg_count; reg++) {
 					drm_printf(p, "%-50s \t 0x%08x\n",
 						   gc_cp_reg_list_9[reg].reg_name,
-						   adev->gfx.ip_dump_cp_queues[index + reg]);
+						   adev->gfx.ip_dump_compute_queues[index + reg]);
 				}
 				index += reg_count;
 			}
@@ -7057,7 +7057,7 @@ static void gfx_v9_ip_dump(void *handle)
 	amdgpu_gfx_off_ctrl(adev, true);
 
 	/* dump compute queue registers for all instances */
-	if (!adev->gfx.ip_dump_cp_queues)
+	if (!adev->gfx.ip_dump_compute_queues)
 		return;
 
 	reg_count = ARRAY_SIZE(gc_cp_reg_list_9);
@@ -7070,7 +7070,7 @@ static void gfx_v9_ip_dump(void *handle)
 				soc15_grbm_select(adev, 1 + i, j, k, 0, 0);
 
 				for (reg = 0; reg < reg_count; reg++) {
-					adev->gfx.ip_dump_cp_queues[index + reg] =
+					adev->gfx.ip_dump_compute_queues[index + reg] =
 						RREG32(SOC15_REG_ENTRY_OFFSET(
 							gc_cp_reg_list_9[reg]));
 				}
-- 
2.46.1

