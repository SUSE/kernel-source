From 8fc3ad92e86384e3ed28d9015971609732078246 Mon Sep 17 00:00:00 2001
From: Nicolai Stange <nstange@suse.de>
Date: Mon, 8 Jul 2024 11:27:43 +0200
Patch-mainline: Not yet, wait for positive feedback before submitting
References: bsc#1222768
Subject: crypto/ecdsa: make ecdsa_ecc_ctx_deinit() to zeroize the public key

FIPS 140-3 requires that there is a mechanism to zeroize Sensitive
Security Parameters ("SSP"), which are further subcategorized as Public
Security Parameters ("PSP"), i.e. public keys, and Critical Security
Parameters ("CSP"), i.e. private keys. Thus, the public keys must get
zeroized, apparently, and this has been brought up in an actual
FIPS 140-3 validation round.

For further proof that's a FIPS requirement, see e.g. the
IG 9.7.A ("Zeroisation of One Time Programmable (OTP) Memory") section,
which gives references to the primary standard (the latter not being
available free of charge).

I'm still scratching my head what the rationale for zeroizing public
key material could be, I guess it's more related to concerns about
accidental reassociation of public keys with unverified identities due
to bugs in the implementation or so -- but I really don't know.

On the other hand, zeroization doesn't cost an arm and a leg, whereas
others seeking FIPS certification might benefit from having a patch
readily available upstream.

So, make ecdsa_ecc_ctx_deinit() to explicitly zero out the public key
held in struct ecc_ctx if in FIPS mode.

Signed-off-by: Nicolai Stange <nstange@suse.de>
---
 crypto/ecdsa.c |    5 +++++
 1 file changed, 5 insertions(+)

--- a/crypto/ecdsa.c
+++ b/crypto/ecdsa.c
@@ -10,6 +10,7 @@
 #include <crypto/ecdh.h>
 #include <linux/asn1_decoder.h>
 #include <linux/scatterlist.h>
+#include <linux/fips.h>
 
 #include "ecdsasignature.asn1.h"
 
@@ -198,6 +199,10 @@ static int ecdsa_ecc_ctx_init(struct ecc
 
 static void ecdsa_ecc_ctx_deinit(struct ecc_ctx *ctx)
 {
+	if (fips_enabled) {
+		memzero_explicit(ctx->x, sizeof(ctx->x));
+		memzero_explicit(ctx->y, sizeof(ctx->y));
+	}
 	ctx->pub_key_set = false;
 }
 
