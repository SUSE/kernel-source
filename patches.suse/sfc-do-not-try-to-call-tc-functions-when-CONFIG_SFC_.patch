From: Edward Cree <ecree.xilinx@gmail.com>
Date: Thu, 15 Jun 2023 22:52:43 +0100
Subject: sfc: do not try to call tc functions when CONFIG_SFC_SRIOV=n
Patch-mainline: v6.5-rc1
Git-commit: c08afcdcf95288c627267bb20002e8baaf3394e1
References: jsc#PED-6894

Functions efx_tc_netdev_event and efx_tc_netevent_event do not exist
 in that case as object files tc_bindings.o and tc_encap_actions.o
 are not built, so the calls to them from ef100_netdev_event and
 ef100_netevent_event cause link errors.
Wrap the corresponding header files (tc_bindings.h, tc_encap_actions.h)
 with #if IS_ENABLED(CONFIG_SFC_SRIOV), and add an #else with static
 inline stubs for these two functions.

Reported-by: kernel test robot <lkp@intel.com>
Closes: https://lore.kernel.org/oe-kbuild-all/202306102026.ISK5JfUQ-lkp@intel.com/
Fixes: 7e5e7d800011 ("sfc: neighbour lookup for TC encap action offload")
Signed-off-by: Edward Cree <ecree.xilinx@gmail.com>
Reviewed-by: Martin Habets <habetsm.xilinx@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/net/ethernet/sfc/tc_bindings.h      |   12 ++++++++++++
 drivers/net/ethernet/sfc/tc_encap_actions.h |   11 +++++++++++
 2 files changed, 23 insertions(+)

--- a/drivers/net/ethernet/sfc/tc_bindings.h
+++ b/drivers/net/ethernet/sfc/tc_bindings.h
@@ -12,6 +12,7 @@
 #define EFX_TC_BINDINGS_H
 #include "net_driver.h"
 
+#if IS_ENABLED(CONFIG_SFC_SRIOV)
 #include <net/sch_generic.h>
 
 struct efx_rep;
@@ -28,4 +29,15 @@ int efx_tc_indr_setup_cb(struct net_devi
 			 void (*cleanup)(struct flow_block_cb *block_cb));
 int efx_tc_netdev_event(struct efx_nic *efx, unsigned long event,
 			struct net_device *net_dev);
+
+#else /* CONFIG_SFC_SRIOV */
+
+static inline int efx_tc_netdev_event(struct efx_nic *efx, unsigned long event,
+				      struct net_device *net_dev)
+{
+	return NOTIFY_DONE;
+}
+
+#endif /* CONFIG_SFC_SRIOV */
+
 #endif /* EFX_TC_BINDINGS_H */
--- a/drivers/net/ethernet/sfc/tc_encap_actions.h
+++ b/drivers/net/ethernet/sfc/tc_encap_actions.h
@@ -12,6 +12,7 @@
 #define EFX_TC_ENCAP_ACTIONS_H
 #include "net_driver.h"
 
+#if IS_ENABLED(CONFIG_SFC_SRIOV)
 #include <linux/refcount.h>
 #include <net/tc_act/tc_tunnel_key.h>
 
@@ -100,4 +101,14 @@ void efx_tc_unregister_egdev(struct efx_
 int efx_tc_netevent_event(struct efx_nic *efx, unsigned long event,
 			  void *ptr);
 
+#else /* CONFIG_SFC_SRIOV */
+
+static inline int efx_tc_netevent_event(struct efx_nic *efx,
+					unsigned long event, void *ptr)
+{
+	return NOTIFY_DONE;
+}
+
+#endif /* CONFIG_SFC_SRIOV */
+
 #endif /* EFX_TC_ENCAP_ACTIONS_H */
