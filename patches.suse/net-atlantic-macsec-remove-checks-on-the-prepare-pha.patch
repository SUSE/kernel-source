From: Antoine Tenart <atenart@kernel.org>
Date: Wed, 21 Sep 2022 15:51:16 +0200
Subject: net: atlantic: macsec: remove checks on the prepare phase
Patch-mainline: v6.1-rc1
Git-commit: 27418b55f094c3c8bb125759338f6476ab70f043
References: jsc#PED-1549

Remove checks on the prepare phase as it is now unused by the MACsec
core implementation.

Signed-off-by: Antoine Tenart <atenart@kernel.org>
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 drivers/net/ethernet/aquantia/atlantic/aq_macsec.c |   57 ---------------------
 1 file changed, 57 deletions(-)

--- a/drivers/net/ethernet/aquantia/atlantic/aq_macsec.c
+++ b/drivers/net/ethernet/aquantia/atlantic/aq_macsec.c
@@ -292,9 +292,6 @@ static int aq_mdo_dev_open(struct macsec
 	struct aq_nic_s *nic = netdev_priv(ctx->netdev);
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	if (netif_carrier_ok(nic->ndev))
 		ret = aq_apply_secy_cfg(nic, ctx->secy);
 
@@ -306,9 +303,6 @@ static int aq_mdo_dev_stop(struct macsec
 	struct aq_nic_s *nic = netdev_priv(ctx->netdev);
 	int i;
 
-	if (ctx->prepare)
-		return 0;
-
 	for (i = 0; i < AQ_MACSEC_MAX_SC; i++) {
 		if (nic->macsec_cfg->txsc_idx_busy & BIT(i))
 			aq_clear_secy(nic, nic->macsec_cfg->aq_txsc[i].sw_secy,
@@ -452,9 +446,6 @@ static int aq_mdo_add_secy(struct macsec
 	u32 txsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	if (secy->xpn)
 		return -EOPNOTSUPP;
 
@@ -488,9 +479,6 @@ static int aq_mdo_upd_secy(struct macsec
 	int txsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	txsc_idx = aq_get_txsc_idx_from_secy(nic->macsec_cfg, secy);
 	if (txsc_idx < 0)
 		return -ENOENT;
@@ -543,9 +531,6 @@ static int aq_mdo_del_secy(struct macsec
 	struct aq_nic_s *nic = netdev_priv(ctx->netdev);
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	if (!nic->macsec_cfg)
 		return 0;
 
@@ -597,9 +582,6 @@ static int aq_mdo_add_txsa(struct macsec
 	int txsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	txsc_idx = aq_get_txsc_idx_from_secy(cfg, secy);
 	if (txsc_idx < 0)
 		return -EINVAL;
@@ -627,9 +609,6 @@ static int aq_mdo_upd_txsa(struct macsec
 	int txsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	txsc_idx = aq_get_txsc_idx_from_secy(cfg, secy);
 	if (txsc_idx < 0)
 		return -EINVAL;
@@ -677,9 +656,6 @@ static int aq_mdo_del_txsa(struct macsec
 	int txsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	txsc_idx = aq_get_txsc_idx_from_secy(cfg, ctx->secy);
 	if (txsc_idx < 0)
 		return -EINVAL;
@@ -773,9 +749,6 @@ static int aq_mdo_add_rxsc(struct macsec
 	u32 rxsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	if (hweight32(cfg->rxsc_idx_busy) >= rxsc_idx_max)
 		return -ENOSPC;
 
@@ -805,9 +778,6 @@ static int aq_mdo_upd_rxsc(struct macsec
 	int rxsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(nic->macsec_cfg, ctx->rx_sc);
 	if (rxsc_idx < 0)
 		return -ENOENT;
@@ -872,9 +842,6 @@ static int aq_mdo_del_rxsc(struct macsec
 	int rxsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(nic->macsec_cfg, ctx->rx_sc);
 	if (rxsc_idx < 0)
 		return -ENOENT;
@@ -944,9 +911,6 @@ static int aq_mdo_add_rxsa(struct macsec
 	int rxsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(nic->macsec_cfg, rx_sc);
 	if (rxsc_idx < 0)
 		return -EINVAL;
@@ -974,9 +938,6 @@ static int aq_mdo_upd_rxsa(struct macsec
 	int rxsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(cfg, rx_sc);
 	if (rxsc_idx < 0)
 		return -EINVAL;
@@ -1025,9 +986,6 @@ static int aq_mdo_del_rxsa(struct macsec
 	int rxsc_idx;
 	int ret = 0;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(cfg, rx_sc);
 	if (rxsc_idx < 0)
 		return -EINVAL;
@@ -1044,9 +1002,6 @@ static int aq_mdo_get_dev_stats(struct m
 	struct aq_macsec_common_stats *stats = &nic->macsec_cfg->stats;
 	struct aq_hw_s *hw = nic->aq_hw;
 
-	if (ctx->prepare)
-		return 0;
-
 	aq_get_macsec_common_stats(hw, stats);
 
 	ctx->stats.dev_stats->OutPktsUntagged = stats->out.untagged_pkts;
@@ -1069,9 +1024,6 @@ static int aq_mdo_get_tx_sc_stats(struct
 	struct aq_macsec_txsc *aq_txsc;
 	int txsc_idx;
 
-	if (ctx->prepare)
-		return 0;
-
 	txsc_idx = aq_get_txsc_idx_from_secy(nic->macsec_cfg, ctx->secy);
 	if (txsc_idx < 0)
 		return -ENOENT;
@@ -1102,9 +1054,6 @@ static int aq_mdo_get_tx_sa_stats(struct
 	u32 next_pn;
 	int ret;
 
-	if (ctx->prepare)
-		return 0;
-
 	txsc_idx = aq_get_txsc_idx_from_secy(cfg, ctx->secy);
 	if (txsc_idx < 0)
 		return -EINVAL;
@@ -1143,9 +1092,6 @@ static int aq_mdo_get_rx_sc_stats(struct
 	int ret = 0;
 	int i;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(cfg, ctx->rx_sc);
 	if (rxsc_idx < 0)
 		return -ENOENT;
@@ -1192,9 +1138,6 @@ static int aq_mdo_get_rx_sa_stats(struct
 	u32 next_pn;
 	int ret;
 
-	if (ctx->prepare)
-		return 0;
-
 	rxsc_idx = aq_get_rxsc_idx_from_rxsc(cfg, ctx->rx_sc);
 	if (rxsc_idx < 0)
 		return -EINVAL;
