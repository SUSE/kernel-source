From 085e423b4d51dfe71e1967c9e508d1cb845063d3 Mon Sep 17 00:00:00 2001
From: Andreas Gruenbacher <agruenba@redhat.com>
Date: Fri, 13 Sep 2024 23:07:31 +0200
Subject: [PATCH] gfs2: Randomize GLF_VERIFY_DELETE work delay
Git-commit: 085e423b4d51dfe71e1967c9e508d1cb845063d3
Patch-mainline: v6.13-rc1
References: bsc#1247220

Randomize the delay of GLF_VERIFY_DELETE work.  This avoids thundering
herd problems when multiple nodes schedule that kind of work in response
to an inode being unlinked remotely.

Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
Signed-off-by: Su Yue <glass.su@suse.com>
---
 fs/gfs2/glock.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/fs/gfs2/glock.c b/fs/gfs2/glock.c
index d219150b2ab5..64bc168c062b 100644
--- a/fs/gfs2/glock.c
+++ b/fs/gfs2/glock.c
@@ -36,6 +36,7 @@
 #include <linux/pid_namespace.h>
 #include <linux/fdtable.h>
 #include <linux/file.h>
+#include <linux/random.h>
 
 #include "gfs2.h"
 #include "incore.h"
@@ -1018,7 +1019,7 @@ bool gfs2_queue_verify_delete(struct gfs2_glock *gl, bool later)
 
 	if (test_and_set_bit(GLF_VERIFY_DELETE, &gl->gl_flags))
 		return false;
-	delay = later ? 5 * HZ : 0;
+	delay = later ? HZ + get_random_long() % (HZ * 9) : 0;
 	return queue_delayed_work(sdp->sd_delete_wq, &gl->gl_delete, delay);
 }
 
-- 
2.43.0

