From c0921e51dab767ef5adf6175c4a0ba3c6e1074a3 Mon Sep 17 00:00:00 2001
From: Wojciech Lukowicz <wlukowicz01@gmail.com>
Date: Sat, 1 Apr 2023 20:50:38 +0100
Subject: [PATCH] io_uring: fix return value when removing provided buffers
Git-commit: c0921e51dab767ef5adf6175c4a0ba3c6e1074a3
Patch-mainline: v6.3-rc6
References: git-fixes

When a request to remove buffers is submitted, and the given number to be
removed is larger than available in the specified buffer group, the
resulting CQE result will be the number of removed buffers + 1, which is
1 more than it should be.

Previously, the head was part of the list and it got removed after the
loop, so the increment was needed. Now, the head is not an element of
the list, so the increment shouldn't be there anymore.

Fixes: dbc7d452e7cf ("io_uring: manage provided buffers strictly ordered")
Signed-off-by: Wojciech Lukowicz <wlukowicz01@gmail.com>
Link: https://lore.kernel.org/r/20230401195039.404909-2-wlukowicz01@gmail.com
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Gabriel Krisman Bertazi <krisman@suse.de>
---
 fs/io_uring.c |    2 --
 1 file changed, 2 deletions(-)

--- a/fs/io_uring.c
+++ b/fs/io_uring.c
@@ -5270,7 +5270,6 @@ static int __io_remove_buffers(struct io
 		return i;
 	}
 
-	/* the head kbuf is the list itself */
 	while (!list_empty(&bl->buf_list)) {
 		struct io_buffer *nxt;
 
@@ -5280,7 +5279,6 @@ static int __io_remove_buffers(struct io
 			return i;
 		cond_resched();
 	}
-	i++;
 
 	return i;
 }
