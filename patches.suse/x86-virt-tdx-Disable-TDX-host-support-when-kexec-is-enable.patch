From: Dave Hansen <dave.hansen@linux.intel.com>
Date: Fri, 8 Dec 2023 09:07:40 -0800
Subject: x86/virt/tdx: Disable TDX host support when kexec is enabled
Git-repo: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
Git-commit: cb8eb06d50fcf4a478813a612f68c38cca45c742
Patch-mainline: Queued in subsystem maintainer repo
References: jsc#PED-5824

TDX host support currently lacks the ability to handle kexec.  Disable TDX
when kexec is enabled.

Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
Link: https://lore.kernel.org/all/20231208170740.53979-20-dave.hansen%40intel.com

Acked-by: Nikolay Borisov <nik.borisov@suse.com>
---
 arch/x86/virt/vmx/tdx/tdx.c |    5 +++++
 include/linux/kexec.h       |    1 +
 kernel/kexec_core.c         |    5 +++++
 3 files changed, 11 insertions(+)

--- a/arch/x86/virt/vmx/tdx/tdx.c
+++ b/arch/x86/virt/vmx/tdx/tdx.c
@@ -15,6 +15,7 @@
 #include <linux/cpu.h>
 #include <linux/spinlock.h>
 #include <linux/percpu-defs.h>
+#include <linux/kexec.h>
 #include <linux/mutex.h>
 #include <linux/list.h>
 #include <linux/memblock.h>
@@ -1478,6 +1479,10 @@ void __init tdx_init(void)
 	acpi_suspend_lowlevel = NULL;
 #endif
 
+#ifdef CONFIG_KEXEC_CORE
+	pr_info("Disable kexec. Turn off TDX in the BIOS to use kexec.\n");
+	kexec_disable();
+#endif
 	/*
 	 * Just use the first TDX KeyID as the 'global KeyID' and
 	 * leave the rest for TDX guests.
--- a/include/linux/kexec.h
+++ b/include/linux/kexec.h
@@ -382,6 +382,7 @@ extern void __crash_kexec(struct pt_regs
 extern void crash_kexec(struct pt_regs *);
 int kexec_should_crash(struct task_struct *);
 int kexec_crash_loaded(void);
+void kexec_disable(void);
 void crash_save_cpu(struct pt_regs *regs, int cpu);
 extern int kimage_crash_copy_vmcoreinfo(struct kimage *image);
 
--- a/kernel/kexec_core.c
+++ b/kernel/kexec_core.c
@@ -944,6 +944,11 @@ struct kimage *kexec_image;
 struct kimage *kexec_crash_image;
 static int kexec_load_disabled;
 
+void kexec_disable(void)
+{
+	kexec_load_disabled = 1;
+}
+
 #ifdef CONFIG_SYSCTL
 static int kexec_limit_handler(struct ctl_table *table, int write,
 			       void *buffer, size_t *lenp, loff_t *ppos)
