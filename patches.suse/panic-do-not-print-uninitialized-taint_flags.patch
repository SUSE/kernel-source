From: Jessica Yu <jeyu@suse.de>
Date: Mon, 15 Jun 2020 16:51:03 +0200
Subject: panic: do not print uninitialized taint_flags
Patch-mainline: Never, SUSE-specific
References: bsc#1172814

In print_tainted(), the taint_flags array is iterated over and a character
is printed depending on whether the taint bit is set (c_true and c_false).
However, since TAINT_NO_SUPPORT is at the end of the taint_flags array, the
uninitialized elements in-between are initialized to 0. Hence, the
character for TAINT_NO_SUPPORT does not get printed as the first 0 in
between serves as the null terminator for the taint string.

Fix that by skipping any uninitialized taint_flag structs in the
taint_flags array.

Suggested-by: Michal Kubecek <mkubecek@suse.cz>
Signed-off-by: Jessica Yu <jeyu@suse.de>
---
 kernel/panic.c | 2 ++
 1 file changed, 2 insertions(+)

--- a/kernel/panic.c
+++ b/kernel/panic.c
@@ -525,6 +525,8 @@ static void print_tainted_seq(struct seq_buf *s, bool verbose)
 		bool is_set = test_bit(i, &tainted_mask);
 		char c = is_set ? t->c_true : t->c_false;
 
+		if (!c)
+			continue;
 		if (verbose) {
 			if (is_set) {
 				seq_buf_printf(s, "%s[%c]=%s", sep, c, t->desc);
