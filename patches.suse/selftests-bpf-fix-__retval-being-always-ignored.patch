From: Eduard Zingerman <eddyz87@gmail.com>
Date: Fri, 21 Apr 2023 02:23:15 +0300
Subject: selftests/bpf: fix __retval() being always ignored
Patch-mainline: v6.4-rc1
Git-commit: 7cdddb99e4a69c26881d279472f1487cd67740c4
References: bsc#1225903

Florian Westphal found a bug in and suggested a fix for test_loader.c
processing of __retval tag. Because of this bug the function
test_loader.c:do_prog_test_run() never executed and all __retval test
tags were ignored.

If this bug is fixed a number of test cases from
progs/verifier_array_access.c fail with retval not matching the
expected value. This test was recently converted to use test_loader.c
and inline assembly in [1]. When doing the conversion I missed the
important detail of test_verifier.c operation: when it creates
fixup_map_array_ro, fixup_map_array_wo and fixup_map_array_small it
populates these maps with a dummy record.

Disabling the __retval checks for the affected verifier_array_access
in this commit to avoid false-postivies in any potential bisects.
The issue is addressed in the next patch.

I verified that the __retval tags are now respected by changing
expected return values for all tests annotated with __retval, and
checking that these tests started to fail.

[1] https://lore.kernel.org/bpf/20230325025524.144043-1-eddyz87@gmail.com/

Fixes: 19a8e06f5f91 ("selftests/bpf: Tests execution support for test_loader.c")
Reported-by: Florian Westphal <fw@strlen.de>
Link: https://lore.kernel.org/bpf/f4c4aee644425842ee6aa8edf1da68f0a8260e7c.camel@gmail.com/T/
Signed-off-by: Eduard Zingerman <eddyz87@gmail.com>
Link: https://lore.kernel.org/r/20230420232317.2181776-3-eddyz87@gmail.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
[shung-hsi.yu: change to
tools/testing/selftests/bpf/progs/verifier_array_access.c dropped because it is
not present]
Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>

# Please enter the message for your patch. Lines starting with
# '#' will be ignored. An empty message aborts the new patch.
# The patch name and author information may also be modified.
# The diff below may be edited.
# ------------------------ >8 ------------------------
# Do not modify or remove the line above.
---
# tools/testing/selftests/bpf/test_loader.c |    2 +-
# 1 file changed, 1 insertion(+), 1 deletion(-)
#
--- a/tools/testing/selftests/bpf/test_loader.c
+++ b/tools/testing/selftests/bpf/test_loader.c
@@ -587,7 +587,7 @@ void run_subtest(struct test_loader *tes
 		/* For some reason test_verifier executes programs
 		 * with all capabilities restored. Do the same here.
 		 */
-		if (!restore_capabilities(&caps))
+		if (restore_capabilities(&caps))
 			goto tobj_cleanup;
 
 		do_prog_test_run(bpf_program__fd(tprog), &retval);
