Date: Thu, 03 Apr 2025 16:49:11 -0300
From: Enzo Matsumiya <ematsumiya@suse.de>
Subject: smb: client: fix open_cached_dir retries with 'hard' mount option
References: bsc#1240616
Patch-mainline: Never, fixes another SUSE-only patch

Patch "smb: client: properly close cfids on umount" fixed the usage of a
possibly leasebroken cfid returned by find_or_create_cached_dir().

When that was the case though, it set the return value to -EAGAIN
(Resource temporarily unavailable), which makes is_replayable_error()
return true.

However, smb2_should_replay() checks if tcon->retry (defined by 'hard' mount option)
is true, so with mounts using that mount option, open_cached_dir() will keep retrying
until the cfid gets its lease broken.

Fix this by changing the return code from -EAGAIN to -ENOENT and leave it up to
callers to act.

Signed-off-by: Enzo Matsumiya <ematsumiya@suse.de>

---
 fs/smb/client/cached_dir.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/smb/client/cached_dir.c
+++ b/fs/smb/client/cached_dir.c
@@ -229,7 +229,7 @@
 		 */
 		cond_resched();
 
-		rc = -EAGAIN;
+		rc = -ENOENT;
 		goto reval_cfid;
 	}
 	spin_unlock(&cfids->cfid_list_lock);
