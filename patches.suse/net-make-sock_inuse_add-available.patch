From: Eric Dumazet <edumazet@google.com>
Date: Mon, 15 Nov 2021 09:11:48 -0800
Subject: net: make sock_inuse_add() available
Git-commit: d477eb9004845cb2dc92ad5eed79a437738a868a
Patch-mainline: v5.17-rc1
References: CVE-2024-53168 bsc#1234887

MPTCP hard codes it, let us instead provide this helper.

Signed-off-by: Eric Dumazet <edumazet@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
Acked-by: Pedro Falcato <pfalcato@suse.de>
---
 include/net/sock.h |   10 ++++++++++
 net/core/sock.c    |   10 ----------
 2 files changed, 10 insertions(+), 10 deletions(-)

--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -1362,6 +1362,12 @@ proto_memory_pressure(struct proto *prot
 #ifdef CONFIG_PROC_FS
 /* Called with local bh disabled */
 void sock_prot_inuse_add(struct net *net, struct proto *prot, int inc);
+
+static inline void sock_inuse_add(const struct net *net, int val)
+{
+	this_cpu_add(*net->core.sock_inuse, val);
+}
+
 int sock_prot_inuse_get(struct net *net, struct proto *proto);
 int sock_inuse_get(struct net *net);
 #else
@@ -1369,6 +1375,10 @@ static inline void sock_prot_inuse_add(s
 		int inc)
 {
 }
+
+static inline void sock_inuse_add(const struct net *net, int val)
+{
+}
 #endif
 
 
--- a/net/core/sock.c
+++ b/net/core/sock.c
@@ -141,8 +141,6 @@
 static DEFINE_MUTEX(proto_list_mutex);
 static LIST_HEAD(proto_list);
 
-static void sock_inuse_add(struct net *net, int val);
-
 /**
  * sk_ns_capable - General socket capability test
  * @sk: Socket to use a capability on or through
@@ -3273,11 +3271,6 @@ int sock_prot_inuse_get(struct net *net,
 }
 EXPORT_SYMBOL_GPL(sock_prot_inuse_get);
 
-static void sock_inuse_add(struct net *net, int val)
-{
-	this_cpu_add(*net->core.sock_inuse, val);
-}
-
 int sock_inuse_get(struct net *net)
 {
 	int cpu, res = 0;
@@ -3356,9 +3349,6 @@ static inline void release_proto_idx(str
 {
 }
 
-static void sock_inuse_add(struct net *net, int val)
-{
-}
 #endif
 
 static void tw_prot_cleanup(struct timewait_sock_ops *twsk_prot)
