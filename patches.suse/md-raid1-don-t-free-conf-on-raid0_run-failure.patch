From: Christoph Hellwig <hch@lst.de>
Date: Thu, 13 Jun 2024 10:48:13 +0200
Subject: md/raid1: don't free conf on raid0_run failure
Git-commit: 799af947ed132956d6de6d77a5bc053817ccb06b
Alt-commit: 17f91ac0843b50462a9c9c8f18df962338bd3db2
Patch-mainline: v6.11-rc1
References: git-fixes

The core md code calls the ->free method which already frees conf.

[lduncan: hunk 1 fuzz=1, hunk 2 not needed]

Fixes: 07f1a6850c5d ("md/raid1: fail run raid1 array when active disk less than one")
Signed-off-by: Christoph Hellwig <hch@lst.de>
Reviewed-by: Martin K. Petersen <martin.petersen@oracle.com>
Link: https://lore.kernel.org/r/20240613084839.1044015-4-hch@lst.de
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: Lee Duncan <lduncan@suse.com>
---
 drivers/md/raid1.c |   12 ++----------
 1 file changed, 2 insertions(+), 10 deletions(-)

--- a/drivers/md/raid1.c
+++ b/drivers/md/raid1.c
@@ -3201,7 +3201,6 @@ static struct r1conf *setup_conf(struct
 	return ERR_PTR(err);
 }
 
-static void raid1_free(struct mddev *mddev, void *priv);
 static int raid1_run(struct mddev *mddev)
 {
 	struct r1conf *conf;
@@ -3254,8 +3253,7 @@ static int raid1_run(struct mddev *mddev
 	 */
 	if (conf->raid_disks - mddev->degraded < 1) {
 		md_unregister_thread(mddev, &conf->thread);
-		ret = -EINVAL;
-		goto abort;
+		return -EINVAL;
 	}
 
 	if (conf->raid_disks - mddev->degraded == 1)
@@ -3279,14 +3277,8 @@ static int raid1_run(struct mddev *mddev
 	md_set_array_sectors(mddev, raid1_size(mddev, 0, 0));
 
 	ret = md_integrity_register(mddev);
-	if (ret) {
+	if (ret)
 		md_unregister_thread(mddev, &mddev->thread);
-		goto abort;
-	}
-	return 0;
-
-abort:
-	raid1_free(mddev, conf);
 	return ret;
 }
 
