From: Damien Le Moal <dlemoal@kernel.org>
Date: Wed, 25 Jun 2025 18:33:23 +0900
Subject: block: Make REQ_OP_ZONE_FINISH a write operation
Patch-mainline: v6.17-rc1
Git-commit: 3f66ccbaaef3a0c5bd844eab04e3207b4061c546
References: git-fixes, bsc#1249552

REQ_OP_ZONE_FINISH is defined as "12", which makes
op_is_write(REQ_OP_ZONE_FINISH) return false, despite the fact that a
zone finish operation is an operation that modifies a zone (transition
it to full) and so should be considered as a write operation (albeit
one that does not transfer any data to the device).

[ Fix this by redefining REQ_OP_ZONE_FINISH to be an odd number (13), and
redefine REQ_OP_ZONE_RESET and REQ_OP_ZONE_RESET_ALL using sequential
odd numbers from that new value. ]

Notes about the backport (mwilck):

This patch is part of the series "Fix write operation handling for zoned DM devices"
(https://lore.kernel.org/all/20250625093327.548866-1-dlemoal@kernel.org/),
which will not work as designed without it.

The upstram patch breaks KABI by redefinding several enums values.
This backport modifies op_is_write() instead, checking explicitly
for the value REQ_OP_ZONE_RESET.


Fixes: 6c1b1da58f8c ("block: add zone open, close and finish operations")
Cc: stable@vger.kernel.org
Signed-off-by: Damien Le Moal <dlemoal@kernel.org>
Reviewed-by: Bart Van Assche <bvanassche@acm.org>
Reviewed-by: Johannes Thumshirn <johannes.thumshirn@wdc.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Link: https://lore.kernel.org/r/20250625093327.548866-2-dlemoal@kernel.org
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: Martin Wilck <mwilck@suse.com>
---
 include/linux/blk_types.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/include/linux/blk_types.h
+++ b/include/linux/blk_types.h
@@ -435,7 +435,7 @@ static inline enum req_op bio_op(const s
 
 static inline bool op_is_write(blk_opf_t op)
 {
-	return !!(op & (__force blk_opf_t)1);
+	return !!(op & (__force blk_opf_t)1 || unlikely(op == REQ_OP_ZONE_FINISH));
 }
 
 /*
