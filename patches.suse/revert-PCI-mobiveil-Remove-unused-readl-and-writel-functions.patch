From 42d7a8dc195f99e2e99d8f38a683e0852a29f6af Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Krzysztof=20Wilczy=C5=84ski?= <kw@linux.com>
Date: Mon, 10 May 2021 02:30:32 +0000
Subject: revert: PCI: mobiveil: Remove unused readl and writel functions
Patch-mainline: Never, only required by patches.suse/PCI-mobiveil-ls_pcie_g4-add-Workaround-for-A-011577.patch
Reverted-commit: 42d7a8dc195f99e2e99d8f38a683e0852a29f6af
References: bsc#1161495

The PCIe host controller driver for Layerscape 4th generation SoC was
added in the commit d29ad70a813b ("PCI: mobiveil: Add PCIe Gen4 RC
driver for Layerscape SoCs").

At this time two static functions were introduced that appear to
currently have no users.  Since nothing is using neither of these
functions at the moment they can be safely removed.

This resolves the following build time warnings:

  drivers/pci/controller/mobiveil/pcie-layerscape-gen4.c:45:19: warning: unused function 'ls_pcie_g4_lut_readl' [-Wunused-function]
  drivers/pci/controller/mobiveil/pcie-layerscape-gen4.c:50:20: warning: unused function 'ls_pcie_g4_lut_writel' [-Wunused-function]

Link: https://lore.kernel.org/r/20210510023032.3063932-1-kw@linux.com
Signed-off-by: Krzysztof Wilczy≈Ñski <kw@linux.com>
Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
Signed-off-by: Jeff Mahoney <jeffm@suse.com>
---
 drivers/pci/controller/mobiveil/pcie-layerscape-gen4.c |   11 +++++++++++
 1 file changed, 11 insertions(+)

--- a/drivers/pci/controller/mobiveil/pcie-layerscape-gen4.c
+++ b/drivers/pci/controller/mobiveil/pcie-layerscape-gen4.c
@@ -48,6 +48,17 @@ struct ls_pcie_g4 {
 	int irq;
 };
 
+static inline u32 ls_pcie_g4_lut_readl(struct ls_pcie_g4 *pcie, u32 off)
+{
+	return ioread32(pcie->pci.csr_axi_slave_base + PCIE_LUT_OFF + off);
+}
+
+static inline void ls_pcie_g4_lut_writel(struct ls_pcie_g4 *pcie,
+					 u32 off, u32 val)
+{
+	iowrite32(val, pcie->pci.csr_axi_slave_base + PCIE_LUT_OFF + off);
+}
+
 static inline u32 ls_pcie_g4_pf_readl(struct ls_pcie_g4 *pcie, u32 off)
 {
 	return ioread32(pcie->pci.csr_axi_slave_base + PCIE_PF_OFF + off);
