From 20f87eaa93e8a0455c20a1273c74fc51c45a90d3 Mon Sep 17 00:00:00 2001
From: Sung-huai Wang <danny.wang@amd.com>
Date: Fri, 31 May 2024 15:43:44 +0800
Subject: Revert "drm/amd/display: Handle HPD_IRQ for internal link"
Git-commit: a2919b25778b7479e477cf49af8c680017eafc24
Patch-mainline: v6.11-rc1
References: jsc#PED-9898 jsc#PED-10191 jsc#PED-10197 jsc#PED-10226 jsc#PED-10237 jsc#PED-10340 jsc#PED-10852 jsc#PED-11022

[How&Why]
This reverts commit 239b31bd5c3fef3698440bf6436b2068c6bb08a3.

Due to the it effects Replay resync.

Reviewed-by: Wenjing Liu <wenjing.liu@amd.com>
Acked-by: Zaeem Mohamed <zaeem.mohamed@amd.com>
Signed-off-by: Sung-huai Wang <danny.wang@amd.com>
Tested-by: Daniel Wheeler <daniel.wheeler@amd.com>
Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
Acked-by: Patrik Jakobsson <pjakobsson@suse.de>
---
 .../dc/link/protocols/link_dp_irq_handler.c   | 24 +++++++------------
 1 file changed, 9 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/dc/link/protocols/link_dp_irq_handler.c b/drivers/gpu/drm/amd/display/dc/link/protocols/link_dp_irq_handler.c
index 5f087e930cb6..96bf135b6f05 100644
--- a/drivers/gpu/drm/amd/display/dc/link/protocols/link_dp_irq_handler.c
+++ b/drivers/gpu/drm/amd/display/dc/link/protocols/link_dp_irq_handler.c
@@ -387,7 +387,6 @@ bool dp_handle_hpd_rx_irq(struct dc_link *link,
 	union device_service_irq device_service_clear = {0};
 	enum dc_status result;
 	bool status = false;
-	bool allow_active = false;
 
 	if (out_link_loss)
 		*out_link_loss = false;
@@ -442,6 +441,12 @@ bool dp_handle_hpd_rx_irq(struct dc_link *link,
 		return false;
 	}
 
+	if (handle_hpd_irq_psr_sink(link))
+		/* PSR-related error was detected and handled */
+		return true;
+
+	handle_hpd_irq_replay_sink(link);
+
 	/* If PSR-related error handled, Main link may be off,
 	 * so do not handle as a normal sink status change interrupt.
 	 */
@@ -463,8 +468,10 @@ bool dp_handle_hpd_rx_irq(struct dc_link *link,
 	 * If we got sink count changed it means
 	 * Downstream port status changed,
 	 * then DM should call DC to do the detection.
+	 * NOTE: Do not handle link loss on eDP since it is internal link
 	 */
-	if (dp_parse_link_loss_status(
+	if ((link->connector_signal != SIGNAL_TYPE_EDP) &&
+			dp_parse_link_loss_status(
 					link,
 					&hpd_irq_dpcd_data)) {
 		/* Connectivity log: link loss */
@@ -473,11 +480,6 @@ bool dp_handle_hpd_rx_irq(struct dc_link *link,
 					sizeof(hpd_irq_dpcd_data),
 					"Status: ");
 
-		if (link->psr_settings.psr_feature_enabled)
-			edp_set_psr_allow_active(link, &allow_active, true, false, NULL);
-		else if (link->replay_settings.replay_allow_active)
-			edp_set_replay_allow_active(link, &allow_active, true, false, NULL);
-
 		if (defer_handling && has_left_work)
 			*has_left_work = true;
 		else
@@ -490,14 +492,6 @@ bool dp_handle_hpd_rx_irq(struct dc_link *link,
 		dp_trace_link_loss_increment(link);
 	}
 
-	if (*out_link_loss == false) {
-		if (handle_hpd_irq_psr_sink(link))
-			/* PSR-related error was detected and handled */
-			return true;
-
-		handle_hpd_irq_replay_sink(link);
-	}
-
 	if (link->type == dc_connection_sst_branch &&
 		hpd_irq_dpcd_data.bytes.sink_cnt.bits.SINK_COUNT
 			!= link->dpcd_sink_count)
-- 
2.46.1

