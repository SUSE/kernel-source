From: Takashi Iwai <tiwai@suse.de>
Subject: kABI padding for media drivers
Patch-mainline: Never, kABI padding
References: kABI padding

Add a few kABI padding fields to media-related structs.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 include/media/cec.h           |    6 ++++++
 include/media/dvb_frontend.h  |    1 +
 include/media/dvb_net.h       |    1 +
 include/media/dvbdev.h        |    2 ++
 include/media/v4l2-ctrls.h    |    1 +
 include/media/v4l2-dev.h      |    2 ++
 include/media/v4l2-device.h   |    2 ++
 include/media/videobuf-core.h |    2 ++
 8 files changed, 17 insertions(+)

--- a/include/media/cec.h
+++ b/include/media/cec.h
@@ -54,6 +54,8 @@ struct cec_devnode {
 	/* protect access to fhs */
 	struct mutex lock_fhs;
 	struct list_head fhs;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 struct cec_adapter;
@@ -103,6 +105,8 @@ struct cec_fh {
 	struct cec_event_entry	core_events[CEC_NUM_CORE_EVENTS];
 	struct list_head	msgs; /* queued messages */
 	unsigned int		queued_msgs;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 #define CEC_SIGNAL_FREE_TIME_RETRY		3
@@ -276,6 +280,8 @@ struct cec_adapter {
 	u32 sequence;
 
 	char input_phys[32];
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline void *cec_get_drvdata(const struct cec_adapter *adap)
--- a/include/media/dvb_frontend.h
+++ b/include/media/dvb_frontend.h
@@ -704,6 +704,7 @@ struct dvb_frontend {
 	int (*callback)(void *adapter_priv, int component, int cmd, int arg);
 	int id;
 	unsigned int exit;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/media/dvb_net.h
+++ b/include/media/dvb_net.h
@@ -55,6 +55,7 @@ struct dvb_net {
 	struct dmx_demux *demux;
 	struct mutex ioctl_mutex;
 	struct mutex remove_mutex;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/media/dvbdev.h
+++ b/include/media/dvbdev.h
@@ -124,6 +124,8 @@ struct dvb_adapter {
 	struct media_entity *conn;
 	struct media_pad *conn_pads;
 #endif
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/media/v4l2-ctrls.h
+++ b/include/media/v4l2-ctrls.h
@@ -408,6 +408,7 @@ struct v4l2_ctrl_handler {
 	struct list_head requests;
 	struct list_head requests_queued;
 	struct media_request_object req_obj;
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/media/v4l2-dev.h
+++ b/include/media/v4l2-dev.h
@@ -306,6 +306,8 @@ struct video_device {
 	DECLARE_BITMAP(valid_ioctls, BASE_VIDIOC_PRIVATE);
 
 	struct mutex *lock;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/media/v4l2-device.h
+++ b/include/media/v4l2-device.h
@@ -56,6 +56,8 @@ struct v4l2_device {
 	struct v4l2_prio_state prio;
 	struct kref ref;
 	void (*release)(struct v4l2_device *v4l2_dev);
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 /**
--- a/include/media/videobuf-core.h
+++ b/include/media/videobuf-core.h
@@ -157,6 +157,8 @@ struct videobuf_queue {
 
 	/* driver private data */
 	void                       *priv_data;
+
+	void *suse_kabi_padding;	/* XXX SLE-specific kABI placeholder */
 };
 
 static inline void videobuf_queue_lock(struct videobuf_queue *q)
