From 4646ea47b18641ffe9c84e3741f9817f404ff17d Mon Sep 17 00:00:00 2001
From: Mel Gorman <mgorman@techsingularity.net>
Date: Thu, 7 Dec 2023 10:05:40 +0000
Subject: [PATCH] sched: Temporarily restore deprecated scheduler sysctls with
 a warning

References: bsc#1192327, bsc#1191396, bsc#1216929
Patch-mainline: Never, upstream wanted bug report to improve the default CPU scheduler and now EEVDF has replaced CFS

SLE15-SP6 note: Deprecation warning extended until a kernel revison
	replaces CFS with EEVDF.

Commit 8a99b6833c88 ("sched: Move SCHED_DEBUG sysctl to debugfs") removed
the following sysctls in kernel 5.13;

	sched_min_granularity_ns sched_latency_ns sched_wakeup_granularity_ns sched_tunable_scaling sched_migration_cost_ns sched_nr_migrate numa_balancing_scan_delay_ms numa_balancing_scan_period_min_ms numa_balancing_scan_period_max_ms numa_balancing_scan_size_mb

They were removed as their behaviour is undocumented, poorly understood,
can have unexpected side-effects and in most cases the change is to
workaround a CPU scheduler corner case. In other cases, the exact value
used is very machine and workload dependant.

Upstream was unlikely to revert changes instead wanted bug reports to fix
any CPU scheduler corner case that is discovered. This patch is intended
to give customers a grace period for four service packs to determine why
these sysctls improve performance in a given case and work with SUSE to
get the problems fixed upstream before the next major kernel revision
when CFS is replaced by EEVDF.

Before behaviour
----------------
host:~/:[0]# sysctl kernel.sched_min_granularity_ns
sysctl: cannot stat /proc/sys/kernel/sched_min_granularity_ns: No such file or directory
host:~/:[255]#

After behaviour
---------------
host:~/:[130]# sysctl kernel.sched_min_granularity_ns
sched_min_granularity_ns = 3000000
host:~/:[0]# sysctl kernel.sched_min_granularity_ns=4000000
sched_min_granularity_ns = 4000000
host:~/:[0]# dmesg | tail -1
[  131.110313] The sched.sched_min_granularity_ns sysctl was moved to debugfs in kernel 5.13 for CPU scheduler debugging only. This sysctl will be removed in a future SLE release.

Signed-off-by: Mel Gorman <mgorman@suse.de>
---
 kernel/sched/fair.c | 175 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 175 insertions(+)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 2dab2be2dd6b..7397a776c797 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -182,6 +182,82 @@ static unsigned int sysctl_numa_balancing_promote_rate_limit = 65536;
 #endif
 
 #ifdef CONFIG_SYSCTL
+
+#ifdef CONFIG_SCHED_DEBUG
+static int min_sched_granularity_ns = 100000;		/* 100 usecs */
+static int max_sched_granularity_ns = NSEC_PER_SEC;	/* 1 second */
+static int min_wakeup_granularity_ns;			/* 0 usecs */
+static int max_wakeup_granularity_ns = NSEC_PER_SEC;	/* 1 second */
+#ifdef CONFIG_SMP
+static int min_sched_tunable_scaling = SCHED_TUNABLESCALING_NONE;
+static int max_sched_tunable_scaling = SCHED_TUNABLESCALING_END-1;
+#endif /* CONFIG_SMP */
+
+#define SCHED_NR_DEPRECATED 10
+static char *sched_proc_deprecated[SCHED_NR_DEPRECATED] = {
+	"sched_min_granularity_ns",
+	"sched_latency_ns",
+	"sched_wakeup_granularity_ns",
+	"sched_tunable_scaling",
+	"sched_migration_cost_ns",
+	"sched_nr_migrate",
+	"numa_balancing_scan_delay_ms",
+	"numa_balancing_scan_period_min_ms",
+	"numa_balancing_scan_period_max_ms",
+	"numa_balancing_scan_size_mb",
+};
+
+static bool sched_proc_deprecated_warned[SCHED_NR_DEPRECATED];
+
+static void warn_proc_deprecated(const char *procname)
+{
+	int i;
+
+	for (i = 0; i < SCHED_NR_DEPRECATED; i++) {
+		if (!strcmp(procname, sched_proc_deprecated[i]))
+			break;
+	}
+
+	/*
+	 * Warn once that the sysctl will be removed in a future SLE release.
+	 * Bugs in relation to this should gather details on what the workload
+	 * that requires this to be set to determine if the default scheduler
+	 * behaviour can be improved.
+	 */
+	if (i < SCHED_NR_DEPRECATED && !sched_proc_deprecated_warned[i]) {
+		pr_warn("The sched.%s sysctl was moved to debugfs in kernel "
+			"5.13 for CPU scheduler debugging only. This sysctl "
+			"will be removed in a future SLE release.\n",
+			procname);
+		sched_proc_deprecated_warned[i] = true;
+	}
+}
+
+int sched_deprecated_proc_update_handler(struct ctl_table *table, int write,
+		void *buffer, size_t *lenp, loff_t *ppos)
+{
+	int ret = proc_dointvec_minmax(table, write, buffer, lenp, ppos);
+
+	if (ret || !write)
+		return ret;
+
+	warn_proc_deprecated(table->procname);
+	return sched_update_scaling();
+}
+
+int sched_warn_deprecated_proc_uint_handler(struct ctl_table *table, int write,
+		void *buffer, size_t *lenp, loff_t *ppos)
+{
+	int ret = proc_dointvec_minmax(table, write, buffer, lenp, ppos);
+
+	if (ret || !write)
+		return 0;
+
+	warn_proc_deprecated(table->procname);
+	return ret;
+}
+#endif /* CONFIG_SCHED_DEBUG */
+
 static struct ctl_table sched_fair_sysctls[] = {
 	{
 		.procname       = "sched_child_runs_first",
@@ -210,6 +286,105 @@ static struct ctl_table sched_fair_sysctls[] = {
 		.extra1		= SYSCTL_ZERO,
 	},
 #endif /* CONFIG_NUMA_BALANCING */
+#ifdef CONFIG_SCHED_DEBUG
+	/*
+	 * WARNING: DEPRECATED
+	 *
+	 * These sysctls no longer exist upstream and are being preserved only
+	 * for SLE 15 SP4 to SLE 15 SP7 with a warning displayed once if they
+	 * are used. After that, a kernel revision is expected to replace
+	 * CFS with EEVDF and any tuning guidelines will have to be revisted.
+	 */
+	{
+		.procname	= "sched_min_granularity_ns",
+		.data		= &sysctl_sched_min_granularity,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_deprecated_proc_update_handler,
+		.extra1		= &min_sched_granularity_ns,
+		.extra2		= &max_sched_granularity_ns,
+	},
+	{
+		.procname	= "sched_latency_ns",
+		.data		= &sysctl_sched_latency,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_deprecated_proc_update_handler,
+		.extra1		= &min_sched_granularity_ns,
+		.extra2		= &max_sched_granularity_ns,
+	},
+	{
+		.procname	= "sched_wakeup_granularity_ns",
+		.data		= &sysctl_sched_wakeup_granularity,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_deprecated_proc_update_handler,
+		.extra1		= &min_wakeup_granularity_ns,
+		.extra2		= &max_wakeup_granularity_ns,
+	},
+#ifdef CONFIG_SMP
+	{
+		.procname	= "sched_tunable_scaling",
+		.data		= &sysctl_sched_tunable_scaling,
+		.maxlen		= sizeof(enum sched_tunable_scaling),
+		.mode		= 0644,
+		.proc_handler	= sched_deprecated_proc_update_handler,
+		.extra1		= &min_sched_tunable_scaling,
+		.extra2		= &max_sched_tunable_scaling,
+	},
+	{
+		.procname	= "sched_migration_cost_ns",
+		.data		= &sysctl_sched_migration_cost,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_warn_deprecated_proc_uint_handler,
+		.extra1		= SYSCTL_ONE,
+	},
+	{
+		.procname	= "sched_nr_migrate",
+		.data		= &sysctl_sched_nr_migrate,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_warn_deprecated_proc_uint_handler,
+		.extra1		= SYSCTL_ONE,
+	},
+#endif /* CONFIG_SMP */
+#ifdef CONFIG_NUMA_BALANCING
+	{
+		.procname	= "numa_balancing_scan_delay_ms",
+		.data		= &sysctl_numa_balancing_scan_delay,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_warn_deprecated_proc_uint_handler,
+		.extra1		= SYSCTL_ZERO,
+	},
+	{
+		.procname	= "numa_balancing_scan_period_min_ms",
+		.data		= &sysctl_numa_balancing_scan_period_min,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_warn_deprecated_proc_uint_handler,
+		.extra1		= SYSCTL_ZERO,
+	},
+	{
+		.procname	= "numa_balancing_scan_period_max_ms",
+		.data		= &sysctl_numa_balancing_scan_period_max,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_warn_deprecated_proc_uint_handler,
+		.extra1		= SYSCTL_ZERO,
+	},
+	{
+		.procname	= "numa_balancing_scan_size_mb",
+		.data		= &sysctl_numa_balancing_scan_size,
+		.maxlen		= sizeof(unsigned int),
+		.mode		= 0644,
+		.proc_handler	= sched_warn_deprecated_proc_uint_handler,
+		.extra1		= SYSCTL_ZERO,
+	},
+#endif /* CONFIG_NUMA_BALANCING */
+#endif /* CONFIG_SCHED_DEBUG */
+
 	{}
 };
 
