From 7adbd5ff8d15f976a5c4dce96f03f8112ccbbc88 Mon Sep 17 00:00:00 2001
From: Baochen Qiang <quic_bqiang@quicinc.com>
Date: Thu, 27 Jul 2023 13:11:44 +0300
Subject: [PATCH 5/6] wifi: ath11k: handle thermal device registeration together with MAC
References: bsc#1207948
Git-commit: 7adbd5ff8d15f976a5c4dce96f03f8112ccbbc88 Mon
Git-repo: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath.git
Patch-mainline: Queued in subsystem maintainer repository

We are see below warning when resume,
[12841.841607] hwmon hwmon11: PM: parent phy0 should not be sleeping

This is because ath11k_thermal_register() is called in
ath11k_pci_pm_resume(), while at that time ar->hw->wiphy->dev
is still sleeping.

To fix it, change to handle thermal device together with MAC
register/unregister which are not involved in suspend/resume.

Tested-on: WCN6855 hw2.1 PCI WLAN.HSP.1.1-03125-QCAHSPSWPL_V1_V2_SILICONZ_LITE-3.6510.23

Signed-off-by: Baochen Qiang <quic_bqiang@quicinc.com>
Signed-off-by: Kalle Valo <quic_kvalo@quicinc.com>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/net/wireless/ath/ath11k/core.c    | 13 +---
 drivers/net/wireless/ath/ath11k/mac.c     |  8 ++-
 drivers/net/wireless/ath/ath11k/thermal.c | 80 +++++++++--------------
 drivers/net/wireless/ath/ath11k/thermal.h |  8 +--
 4 files changed, 43 insertions(+), 66 deletions(-)

diff --git a/drivers/net/wireless/ath/ath11k/core.c b/drivers/net/wireless/ath/ath11k/core.c
index 4a5e78a8b06c..239166c9e737 100644
--- a/drivers/net/wireless/ath/ath11k/core.c
+++ b/drivers/net/wireless/ath/ath11k/core.c
@@ -1441,23 +1441,14 @@ static int ath11k_core_pdev_create(struct ath11k_base *ab)
 		goto err_dp_pdev_free;
 	}
 
-	ret = ath11k_thermal_register(ab);
-	if (ret) {
-		ath11k_err(ab, "could not register thermal device: %d\n",
-			   ret);
-		goto err_mac_unregister;
-	}
-
 	ret = ath11k_spectral_init(ab);
 	if (ret) {
 		ath11k_err(ab, "failed to init spectral %d\n", ret);
-		goto err_thermal_unregister;
+		goto err_mac_unregister;
 	}
 
 	return 0;
 
-err_thermal_unregister:
-	ath11k_thermal_unregister(ab);
 err_mac_unregister:
 	ath11k_mac_unregister(ab);
 err_dp_pdev_free:
@@ -1471,7 +1462,6 @@ static int ath11k_core_pdev_create(struct ath11k_base *ab)
 static void ath11k_core_pdev_destroy(struct ath11k_base *ab)
 {
 	ath11k_spectral_deinit(ab);
-	ath11k_thermal_unregister(ab);
 	ath11k_mac_unregister(ab);
 	ath11k_hif_irq_disable(ab);
 	ath11k_dp_pdev_free(ab);
@@ -1679,7 +1669,6 @@ static int ath11k_core_reconfigure_on_crash(struct ath11k_base *ab)
 	int ret;
 
 	mutex_lock(&ab->core_lock);
-	ath11k_thermal_unregister(ab);
 	ath11k_dp_pdev_free(ab);
 	ath11k_spectral_deinit(ab);
 	ath11k_ce_cleanup_pipes(ab);
diff --git a/drivers/net/wireless/ath/ath11k/mac.c b/drivers/net/wireless/ath/ath11k/mac.c
index 8c77ade49437..7bebdd98dffa 100644
--- a/drivers/net/wireless/ath/ath11k/mac.c
+++ b/drivers/net/wireless/ath/ath11k/mac.c
@@ -9388,6 +9388,7 @@ void ath11k_mac_unregister(struct ath11k_base *ab)
 		if (!ar)
 			continue;
 
+		ath11k_thermal_unregister(ar);
 		__ath11k_mac_unregister(ar);
 	}
 
@@ -9686,17 +9687,22 @@ int ath11k_mac_register(struct ath11k_base *ab)
 			goto err_cleanup;
 
 		init_waitqueue_head(&ar->txmgmt_empty_waitq);
+
+		ret = ath11k_thermal_register(ar);
+		if (ret)
+			goto err_mac_unregister;
 	}
 
 	return 0;
 
-err_cleanup:
+err_mac_unregister:
 	for (i = i - 1; i >= 0; i--) {
 		pdev = &ab->pdevs[i];
 		ar = pdev->ar;
 		__ath11k_mac_unregister(ar);
 	}
 
+err_cleanup:
 	ath11k_peer_rhash_tbl_destroy(ab);
 
 	return ret;
diff --git a/drivers/net/wireless/ath/ath11k/thermal.c b/drivers/net/wireless/ath/ath11k/thermal.c
index 23ed01bd44f9..44d81dac9780 100644
--- a/drivers/net/wireless/ath/ath11k/thermal.c
+++ b/drivers/net/wireless/ath/ath11k/thermal.c
@@ -154,73 +154,55 @@ int ath11k_thermal_set_throttling(struct ath11k *ar, u32 throttle_state)
 	return ret;
 }
 
-int ath11k_thermal_register(struct ath11k_base *sc)
+int ath11k_thermal_register(struct ath11k *ar)
 {
 	struct thermal_cooling_device *cdev;
 	struct device *hwmon_dev;
-	struct ath11k *ar;
-	struct ath11k_pdev *pdev;
-	int i, ret;
+	struct ath11k_base *sc = ar->ab;
+	int ret;
 
-	for (i = 0; i < sc->num_radios; i++) {
-		pdev = &sc->pdevs[i];
-		ar = pdev->ar;
-		if (!ar)
-			continue;
+	cdev = thermal_cooling_device_register("ath11k_thermal", ar,
+					       &ath11k_thermal_ops);
 
-		cdev = thermal_cooling_device_register("ath11k_thermal", ar,
-						       &ath11k_thermal_ops);
+	if (IS_ERR(cdev)) {
+		ath11k_err(sc, "failed to setup thermal device result: %ld\n",
+			   PTR_ERR(cdev));
+		return -EINVAL;
+	}
 
-		if (IS_ERR(cdev)) {
-			ath11k_err(sc, "failed to setup thermal device result: %ld\n",
-				   PTR_ERR(cdev));
-			ret = -EINVAL;
-			goto err_thermal_destroy;
-		}
+	ar->thermal.cdev = cdev;
 
-		ar->thermal.cdev = cdev;
+	ret = sysfs_create_link(&ar->hw->wiphy->dev.kobj, &cdev->device.kobj,
+				"cooling_device");
+	if (ret) {
+		ath11k_err(sc, "failed to create cooling device symlink\n");
+		goto err_thermal_destroy;
+	}
 
-		ret = sysfs_create_link(&ar->hw->wiphy->dev.kobj, &cdev->device.kobj,
-					"cooling_device");
-		if (ret) {
-			ath11k_err(sc, "failed to create cooling device symlink\n");
-			goto err_thermal_destroy;
-		}
+	if (!IS_REACHABLE(CONFIG_HWMON))
+		return 0;
 
-		if (!IS_REACHABLE(CONFIG_HWMON))
-			return 0;
-
-		hwmon_dev = devm_hwmon_device_register_with_groups(&ar->hw->wiphy->dev,
-								   "ath11k_hwmon", ar,
-								   ath11k_hwmon_groups);
-		if (IS_ERR(hwmon_dev)) {
-			ath11k_err(ar->ab, "failed to register hwmon device: %ld\n",
-				   PTR_ERR(hwmon_dev));
-			ret = -EINVAL;
-			goto err_thermal_destroy;
-		}
+	hwmon_dev = devm_hwmon_device_register_with_groups(&ar->hw->wiphy->dev,
+							   "ath11k_hwmon", ar,
+							   ath11k_hwmon_groups);
+	if (IS_ERR(hwmon_dev)) {
+		ath11k_err(ar->ab, "failed to register hwmon device: %ld\n",
+			   PTR_ERR(hwmon_dev));
+		ret = -EINVAL;
+		goto err_remove_link;
 	}
 
 	return 0;
 
+err_remove_link:
+	sysfs_remove_link(&ar->hw->wiphy->dev.kobj, "cooling_device");
 err_thermal_destroy:
-	ath11k_thermal_unregister(sc);
+	thermal_cooling_device_unregister(ar->thermal.cdev);
 	return ret;
 }
 
-void ath11k_thermal_unregister(struct ath11k_base *sc)
+void ath11k_thermal_unregister(struct ath11k *ar)
 {
-	struct ath11k *ar;
-	struct ath11k_pdev *pdev;
-	int i;
-
-	for (i = 0; i < sc->num_radios; i++) {
-		pdev = &sc->pdevs[i];
-		ar = pdev->ar;
-		if (!ar)
-			continue;
-
 		sysfs_remove_link(&ar->hw->wiphy->dev.kobj, "cooling_device");
 		thermal_cooling_device_unregister(ar->thermal.cdev);
-	}
 }
diff --git a/drivers/net/wireless/ath/ath11k/thermal.h b/drivers/net/wireless/ath/ath11k/thermal.h
index 3e39675ef7f5..d96f9e74ef3d 100644
--- a/drivers/net/wireless/ath/ath11k/thermal.h
+++ b/drivers/net/wireless/ath/ath11k/thermal.h
@@ -26,17 +26,17 @@ struct ath11k_thermal {
 };
 
 #if IS_REACHABLE(CONFIG_THERMAL)
-int ath11k_thermal_register(struct ath11k_base *sc);
-void ath11k_thermal_unregister(struct ath11k_base *sc);
+int ath11k_thermal_register(struct ath11k *ar);
+void ath11k_thermal_unregister(struct ath11k *ar);
 int ath11k_thermal_set_throttling(struct ath11k *ar, u32 throttle_state);
 void ath11k_thermal_event_temperature(struct ath11k *ar, int temperature);
 #else
-static inline int ath11k_thermal_register(struct ath11k_base *sc)
+static inline int ath11k_thermal_register(struct ath11k *ar)
 {
 	return 0;
 }
 
-static inline void ath11k_thermal_unregister(struct ath11k_base *sc)
+static inline void ath11k_thermal_unregister(struct ath11k *ar)
 {
 }
 
-- 
2.35.3

