From: Petr Pavlu <petr.pavlu@suse.com>
Date: Tue Jan 30 17:27:10 2024 +0100
Subject: [PATCH] tracing: Add kabi placeholders
Patch-mainline: Never, kABI padding
References: git-fixes

Signed-off-by: Petr Pavlu <petr.pavlu@suse.com>
---
 include/linux/trace_events.h |    3 +++
 kernel/trace/trace.h         |    3 +++
 2 files changed, 6 insertions(+)

--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@ -113,6 +113,8 @@ struct trace_iterator {
 	/* it's true when current open file is snapshot */
 	bool			snapshot;
 
+	void			*suse_kabi_padding;
+
 	/* The below is zeroed out in pipe_read */
 	struct trace_seq	seq;
 	struct trace_entry	*ent;
@@ -674,6 +676,7 @@ struct trace_event_file {
 	refcount_t		ref;	/* ref count for opened files */
 	atomic_t		sm_ref;	/* soft-mode reference counter */
 	atomic_t		tm_ref;	/* trigger-mode reference counter */
+	void			*suse_kabi_padding;
 };
 
 #define __TRACE_EVENT_FLAGS(name, value)				\
--- a/kernel/trace/trace.h
+++ b/kernel/trace/trace.h
@@ -181,6 +181,7 @@ struct trace_array_cpu {
 	int			ftrace_ignore_pid;
 #endif
 	bool			ignore_pid;
+	void			*suse_kabi_padding;
 };
 
 struct tracer;
@@ -192,6 +193,7 @@ struct array_buffer {
 	struct trace_array_cpu __percpu	*data;
 	u64				time_start;
 	int				cpu;
+	void				*suse_kabi_padding;
 };
 
 #define TRACE_FLAGS_MAX_SIZE		32
@@ -392,6 +394,7 @@ struct trace_array {
 	 * we do not waste memory on systems that are not using tracing.
 	 */
 	bool ring_buffer_expanded;
+	void *suse_kabi_padding;
 };
 
 enum {
