From 2b520c6104f34e3a548525173c38ebca4402cac3 Mon Sep 17 00:00:00 2001
From: Connor Abbott <cwabbott0@gmail.com>
Date: Tue, 20 May 2025 18:28:06 -0400
Subject: [PATCH] drm/msm/a7xx: Call CP_RESET_CONTEXT_STATE
Git-commit: 2b520c6104f34e3a548525173c38ebca4402cac3
Patch-mainline: v6.16-rc3
References: CVE-2025-38188 bsc#1246098

[ backport note: added missing register definitions locally in
  adreno_pm4.xml.h; the contents copied from commit ae22a94997b8
  -- tiwai ]

Calling this packet is necessary when we switch contexts because there
are various pieces of state used by userspace to synchronize between BR
and BV that are persistent across submits and we need to make sure that
they are in a "safe" state when switching contexts. Otherwise a
userspace submission in one context could cause another context to
function incorrectly and hang, effectively a denial of service (although
without leaking data). This was missed during initial a7xx bringup.

Fixes: af66706accdf ("drm/msm/a6xx: Add skeleton A7xx support")
Signed-off-by: Connor Abbott <cwabbott0@gmail.com>
Patchwork: https://patchwork.freedesktop.org/patch/654924/
Signed-off-by: Rob Clark <robin.clark@oss.qualcomm.com>
Acked-by: Takashi Iwai <tiwai@suse.de>

---
 drivers/gpu/drm/msm/adreno/a6xx_gpu.c       |   14 ++++++++++++++
 drivers/gpu/drm/msm/adreno/adreno_pm4.xml.h |    5 +++++
 2 files changed, 19 insertions(+)

--- a/drivers/gpu/drm/msm/adreno/a6xx_gpu.c
+++ b/drivers/gpu/drm/msm/adreno/a6xx_gpu.c
@@ -122,6 +122,20 @@ static void a6xx_set_pagetable(struct a6
 		OUT_RING(ring, lower_32_bits(rbmemptr(ring, fence)));
 		OUT_RING(ring, upper_32_bits(rbmemptr(ring, fence)));
 		OUT_RING(ring, submit->seqno - 1);
+
+		OUT_PKT7(ring, CP_THREAD_CONTROL, 1);
+		OUT_RING(ring, CP_SET_THREAD_BOTH);
+
+		/* Reset state used to synchronize BR and BV */
+		OUT_PKT7(ring, CP_RESET_CONTEXT_STATE, 1);
+		OUT_RING(ring,
+			 CP_RESET_CONTEXT_STATE_0_CLEAR_ON_CHIP_TS |
+			 CP_RESET_CONTEXT_STATE_0_CLEAR_RESOURCE_TABLE |
+			 CP_RESET_CONTEXT_STATE_0_CLEAR_BV_BR_COUNTER |
+			 CP_RESET_CONTEXT_STATE_0_RESET_GLOBAL_LOCAL_TS);
+
+		OUT_PKT7(ring, CP_THREAD_CONTROL, 1);
+		OUT_RING(ring, CP_SET_THREAD_BR);
 	}
 
 	if (!sysprof) {
--- a/drivers/gpu/drm/msm/adreno/adreno_pm4.xml.h
+++ b/drivers/gpu/drm/msm/adreno/adreno_pm4.xml.h
@@ -327,6 +327,7 @@ enum adreno_pm4_type3_packets {
 	CP_WAIT_TIMESTAMP = 20,
 	CP_THREAD_CONTROL = 23,
 	CP_CONTEXT_REG_BUNCH2 = 93,
+	CP_RESET_CONTEXT_STATE = 31,
 	CP_UNK15 = 21,
 	CP_UNK16 = 22,
 	CP_UNK18 = 24,
@@ -2440,5 +2441,9 @@ static inline uint32_t CP_THREAD_CONTROL
 #define CP_THREAD_CONTROL_0_CONCURRENT_BIN_DISABLE		0x08000000
 #define CP_THREAD_CONTROL_0_SYNC_THREADS			0x80000000
 
+#define CP_RESET_CONTEXT_STATE_0_CLEAR_ON_CHIP_TS		0x00000001
+#define CP_RESET_CONTEXT_STATE_0_CLEAR_RESOURCE_TABLE		0x00000002
+#define CP_RESET_CONTEXT_STATE_0_CLEAR_BV_BR_COUNTER		0x00000004
+#define CP_RESET_CONTEXT_STATE_0_RESET_GLOBAL_LOCAL_TS		0x00000008
 
 #endif /* ADRENO_PM4_XML */
