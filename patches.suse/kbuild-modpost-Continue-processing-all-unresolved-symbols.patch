From: Petr Mladek <pmladek@suse.com>
Date: Thu, 2 Oct 2025 14:12:51 +0200
Subject: kbuild/modpost: Continue processing all unresolved symbols when KLP_SYM_RELA is found
Patch-mainline: Not yet, on review <20231106162513.17556-1-lhruska@suse.cz>
References: bsc#1218644, bsc#1250655

The patch ("kbuild/modpost: integrate klp-convert") did teach "modpost"
how to handle unresolved symbols with a kernel livepatch specific
relocation (KLP_SYM_RELA).

Unfortunately, the code which detected these special symbols skipped
the rest of the cycle for handling unresolved symbols. As a result,
crc was not defined for the remaining "normal" external symbols.

It later caused depmod warning, for example:

depmod: WARNING: //lib/modules/6.4.0-150600.23.42-default/livepatch/livepatch-5-150600_2_1.ko disagrees about version of symbol up_read
depmod: WARNING: //lib/modules/6.4.0-150600.23.42-default/livepatch/livepatch-5-150600_2_1.ko disagrees about version of symbol __kmalloc
depmod: WARNING: //lib/modules/6.4.0-150600.23.42-default/livepatch/livepatch-5-150600_2_1.ko disagrees about version of symbol kmalloc_caches
depmod: WARNING: //lib/modules/6.4.0-150600.23.42-default/livepatch/livepatch-5-150600_2_1.ko disagrees about version of symbol release_sock

Fix the problem by continuing the cycle instead of breaking from it.

Signed-off-by: Petr Mladek <pmladek@suse.com>
---
 scripts/mod/modpost.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/scripts/mod/modpost.c
+++ b/scripts/mod/modpost.c
@@ -2017,7 +2017,7 @@ static void check_exports(struct module
 				 */
 				if (mod->is_livepatch &&
 				    strncmp(s->name, KLP_SYM_RELA, strlen(KLP_SYM_RELA)) == 0)
-					break;
+					continue;
 				modpost_log(warn_unresolved ? LOG_WARN : LOG_ERROR,
 					    "\"%s\" [%s.ko] undefined!\n",
 					    s->name, mod->name);
