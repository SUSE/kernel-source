From: Christoph Hellwig <hch@lst.de>
Date: Wed, 26 Jun 2024 16:26:27 +0200
Subject: block: remove disk_update_readahead
Git-commit: 73781b3b81e76583708a652c853d54d03dce031d
Patch-mainline: v6.11-rc1
References: bsc#1228325 jsc#PED-9783

Mark blk_apply_bdi_limits non-static and open code disk_update_readahead
in the only caller.

[lduncan: several files added for our code base.]

Signed-off-by: Christoph Hellwig <hch@lst.de>
Reviewed-by: Damien Le Moal <dlemoal@kernel.org>
Link: https://lore.kernel.org/r/20240626142637.300624-7-hch@lst.de
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Acked-by: Lee Duncan <lduncan@suse.com>
---
 block/blk-settings.c   |   10 ++--------
 block/blk.h            |    2 ++
 block/genhd.c          |    2 +-
 include/linux/blkdev.h |    1 -
 4 files changed, 5 insertions(+), 10 deletions(-)

--- a/block/blk-settings.c
+++ b/block/blk-settings.c
@@ -49,7 +49,7 @@ void blk_set_stacking_limits(struct queu
 }
 EXPORT_SYMBOL(blk_set_stacking_limits);
 
-static void blk_apply_bdi_limits(struct backing_dev_info *bdi,
+void blk_apply_bdi_limits(struct backing_dev_info *bdi,
 		struct queue_limits *lim)
 {
 	/*
@@ -555,12 +555,6 @@ void blk_queue_alignment_offset(struct r
 }
 EXPORT_SYMBOL(blk_queue_alignment_offset);
 
-void disk_update_readahead(struct gendisk *disk)
-{
-	blk_apply_bdi_limits(disk->bdi, &disk->queue->limits);
-}
-EXPORT_SYMBOL_GPL(disk_update_readahead);
-
 /**
  * blk_limits_io_min - set minimum request size for a device
  * @limits: the queue limits
@@ -869,7 +863,7 @@ void disk_stack_limits(struct gendisk *d
 		pr_notice("%s: Warning: Device %pg is misaligned\n",
 			disk->disk_name, bdev);
 
-	disk_update_readahead(disk);
+	blk_apply_bdi_limits(disk->bdi, &disk->queue->limits);
 }
 EXPORT_SYMBOL(disk_stack_limits);
 
--- a/block/blk.h
+++ b/block/blk.h
@@ -330,6 +330,8 @@ bool blk_rq_merge_ok(struct request *rq,
 enum elv_merge blk_try_merge(struct request *rq, struct bio *bio);
 
 int blk_set_default_limits(struct queue_limits *lim);
+void blk_apply_bdi_limits(struct backing_dev_info *bdi,
+		struct queue_limits *lim);
 int blk_dev_init(void);
 
 /*
--- a/block/genhd.c
+++ b/block/genhd.c
@@ -524,7 +524,7 @@ int __must_check device_add_disk(struct
 		disk->part0->bd_dev = MKDEV(disk->major, disk->first_minor);
 	}
 
-	disk_update_readahead(disk);
+	blk_apply_bdi_limits(disk->bdi, &disk->queue->limits);
 	disk_add_events(disk);
 	set_bit(GD_ADDED, &disk->state);
 	return 0;
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -944,7 +944,6 @@ void blk_queue_zone_write_granularity(st
 				      unsigned int size);
 extern void blk_queue_alignment_offset(struct request_queue *q,
 				       unsigned int alignment);
-void disk_update_readahead(struct gendisk *disk);
 extern void blk_limits_io_min(struct queue_limits *limits, unsigned int min);
 extern void blk_queue_io_min(struct request_queue *q, unsigned int min);
 extern void blk_limits_io_opt(struct queue_limits *limits, unsigned int opt);
