From: Tony Jones <tonyj@suse.de>
Date: Mon Feb 10 05:10:57 PM PST 2025
Subject: Add perf events kabi padding
Patch-mainline: Never, kabi
References: kabi

SUSE kabi padding for perf events.

Signed-off-by: Tony Jones <tonyj@suse.de>

---
 include/linux/perf_event.h |   13 +++++++++++++
 kernel/events/internal.h   |    1 +
 2 files changed, 14 insertions(+)

--- a/include/linux/perf_event.h
+++ b/include/linux/perf_event.h
@@ -322,6 +322,8 @@ struct pmu {
 	/* number of address filters this PMU can do */
 	unsigned int			nr_addr_filters;
 
+	void				*suse_kabi_padding;
+
 	/*
 	 * Fully disable/enable this PMU, can be used to protect from the PMI
 	 * as well as for lazy/batch writing of the MSRs.
@@ -807,6 +809,9 @@ struct perf_event {
 	u64				(*clock)(void);
 	perf_overflow_handler_t		overflow_handler;
 	void				*overflow_handler_context;
+
+	void 				*suse_kabi_padding;
+
 #ifdef CONFIG_BPF_SYSCALL
 	perf_overflow_handler_t		orig_overflow_handler;
 	struct bpf_prog			*prog;
@@ -885,6 +890,8 @@ struct perf_event_pmu_context {
 	 * such as cgroups.
 	 */
 	int				rotate_necessary;
+
+	void				*suse_kabi_padding;
 };
 
 struct perf_event_groups {
@@ -955,6 +962,8 @@ struct perf_event_context {
 	 * that until the signal is delivered.
 	 */
 	local_t				nr_pending;
+
+	void				*suse_kabi_padding;
 };
 
 struct perf_cpu_pmu_context {
@@ -971,6 +980,8 @@ struct perf_cpu_pmu_context {
 	struct hrtimer			hrtimer;
 	ktime_t				hrtimer_interval;
 	unsigned int			hrtimer_active;
+
+	void				*suse_kabi_padding;
 };
 
 /**
@@ -985,6 +996,8 @@ struct perf_cpu_context {
 	struct perf_cgroup		*cgrp;
 #endif
 
+	void				*suse_kabi_padding;
+
 	/*
 	 * Per-CPU storage for iterators used in visit_groups_merge. The default
 	 * storage is of size 2 to hold the CPU and any CPU event iterators.
--- a/kernel/events/internal.h
+++ b/kernel/events/internal.h
@@ -55,6 +55,7 @@ struct perf_buffer {
 	void				*aux_priv;
 
 	struct perf_event_mmap_page	*user_page;
+	void				*suse_kabi_padding;
 	void				*data_pages[];
 };
 
