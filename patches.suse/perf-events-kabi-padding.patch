From: Tony Jones <tonyj@suse.de>
Date: Mon Apr 28 02:31:14 PM PDT 2025
Subject: Add perf events kabi padding
Patch-mainline: Never, kabi
References: kabi

---
 include/linux/perf_event.h |   12 ++++++++++++
 kernel/events/internal.h   |    1 +
 2 files changed, 13 insertions(+)

--- a/include/linux/perf_event.h
+++ b/include/linux/perf_event.h
@@ -351,6 +351,8 @@
 	/* number of address filters this PMU can do */
 	unsigned int			nr_addr_filters;
 
+	void				*suse_kabi_padding;
+
 	/*
 	 * Fully disable/enable this PMU, can be used to protect from the PMI
 	 * as well as for lazy/batch writing of the MSRs.
@@ -850,6 +852,8 @@
 	struct bpf_prog			*prog;
 	u64				bpf_cookie;
 
+	void				*suse_kabi_padding;
+
 #ifdef CONFIG_EVENT_TRACING
 	struct trace_event_call		*tp_event;
 	struct event_filter		*filter;
@@ -930,6 +934,8 @@
 	 * such as cgroups.
 	 */
 	int				rotate_necessary;
+
+	void				*suse_kabi_padding;
 };
 
 static inline bool perf_pmu_ctx_is_active(struct perf_event_pmu_context *epc)
@@ -1008,6 +1014,8 @@
 	 * that until the signal is delivered.
 	 */
 	local_t				nr_no_switch_fast;
+
+	void				*suse_kabi_padding;
 };
 
 /**
@@ -1060,6 +1068,8 @@
 	struct hrtimer			hrtimer;
 	ktime_t				hrtimer_interval;
 	unsigned int			hrtimer_active;
+
+	void				*suse_kabi_padding;
 };
 
 /**
@@ -1074,6 +1084,8 @@
 	struct perf_cgroup		*cgrp;
 #endif
 
+	void				*suse_kabi_padding;
+
 	/*
 	 * Per-CPU storage for iterators used in visit_groups_merge. The default
 	 * storage is of size 2 to hold the CPU and any CPU event iterators.
--- a/kernel/events/internal.h
+++ b/kernel/events/internal.h
@@ -57,6 +57,7 @@
 	void				*aux_priv;
 
 	struct perf_event_mmap_page	*user_page;
+	void				*suse_kabi_padding;
 	void				*data_pages[];
 };
 
