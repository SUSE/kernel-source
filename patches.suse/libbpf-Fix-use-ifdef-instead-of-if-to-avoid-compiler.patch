From: Andrii Nakryiko <andrii@kernel.org>
Date: Thu, 7 Apr 2022 13:38:42 -0700
Subject: libbpf: Fix use #ifdef instead of #if to avoid compiler warning
Patch-mainline: v5.19-rc1
Git-commit: ded6dffaed5edc68f1e64b523353da14db673460
References: jsc#PED-1377

As reported by Naresh:

  perf build errors on i386 [1] on Linux next-20220407 [2]

  usdt.c:1181:5: error: "__x86_64__" is not defined, evaluates to 0
  [-Werror=undef]
   1181 | #if __x86_64__
        |     ^~~~~~~~~~
  usdt.c:1196:5: error: "__x86_64__" is not defined, evaluates to 0
  [-Werror=undef]
   1196 | #if __x86_64__
        |     ^~~~~~~~~~
  cc1: all warnings being treated as errors

Use #ifdef instead of #if to avoid this.

Fixes: 4c59e584d158 ("libbpf: Add x86-specific USDT arg spec parsing logic")
Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Link: https://lore.kernel.org/bpf/20220407203842.3019904-1-andrii@kernel.org
Acked-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 tools/lib/bpf/usdt.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/tools/lib/bpf/usdt.c
+++ b/tools/lib/bpf/usdt.c
@@ -1178,7 +1178,7 @@ static int calc_pt_regs_off(const char *
 		const char *names[4];
 		size_t pt_regs_off;
 	} reg_map[] = {
-#if __x86_64__
+#ifdef __x86_64__
 #define reg_off(reg64, reg32) offsetof(struct pt_regs, reg64)
 #else
 #define reg_off(reg64, reg32) offsetof(struct pt_regs, reg32)
@@ -1193,7 +1193,7 @@ static int calc_pt_regs_off(const char *
 		{ {"rbp", "ebp", "bp", "bpl"}, reg_off(rbp, ebp) },
 		{ {"rsp", "esp", "sp", "spl"}, reg_off(rsp, esp) },
 #undef reg_off
-#if __x86_64__
+#ifdef __x86_64__
 		{ {"r8", "r8d", "r8w", "r8b"}, offsetof(struct pt_regs, r8) },
 		{ {"r9", "r9d", "r9w", "r9b"}, offsetof(struct pt_regs, r9) },
 		{ {"r10", "r10d", "r10w", "r10b"}, offsetof(struct pt_regs, r10) },
