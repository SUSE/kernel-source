From: Hannes Reinecke <hare@suse.de>
Date: Tue, 24 Oct 2023 08:13:36 +0200
Subject: nvme-loop: always quiesce and cancel commands before destroying admin
 q
Patch-mainline: v6.7-rc1
Git-commit: 55adcdbbdd349de935de677ccb59ff8be8c67f6a
References: bsc#1211515

Once ->init_ctrl_finish() is called there may be commands outstanding,
so we should quiesce the admin queue and cancel all commands prior
to call nvme_loop_destroy_admin_queue().

Signed-off-by: Hannes Reinecke <hare@suse.de>
Tested-by: Mark O'Donovan <shiftee@posteo.net>
Signed-off-by: Keith Busch <kbusch@kernel.org>
Acked-by: Daniel Wagner <dwagner@suse.de>
---
 drivers/nvme/target/loop.c |    4 ++++
 1 file changed, 4 insertions(+)

--- a/drivers/nvme/target/loop.c
+++ b/drivers/nvme/target/loop.c
@@ -495,6 +495,8 @@ static void nvme_loop_reset_ctrl_work(st
 out_destroy_io:
 	nvme_loop_destroy_io_queues(ctrl);
 out_destroy_admin:
+	nvme_start_admin_queue(&ctrl->ctrl);
+	nvme_cancel_admin_tagset(&ctrl->ctrl);
 	nvme_loop_destroy_admin_queue(ctrl);
 out_disable:
 	dev_warn(ctrl->ctrl.device, "Removing after reset failure\n");
@@ -645,6 +647,8 @@ static struct nvme_ctrl *nvme_loop_creat
 	return &ctrl->ctrl;
 
 out_remove_admin_queue:
+	nvme_start_admin_queue(&ctrl->ctrl);
+	nvme_cancel_admin_tagset(&ctrl->ctrl);
 	nvme_loop_destroy_admin_queue(ctrl);
 out_free_queues:
 	kfree(ctrl->queues);
