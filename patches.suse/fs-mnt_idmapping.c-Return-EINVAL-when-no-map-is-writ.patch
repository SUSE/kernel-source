From: Taylor Jackson <taylor.a.jackson@me.com>
Date: Thu, 8 Feb 2024 03:02:54 +0000
Subject: [PATCH] fs/mnt_idmapping.c: Return -EINVAL when no map is written
Mime-version: 1.0
Content-type: text/plain; charset=UTF-8
Content-transfer-encoding: 8bit
Git-commit: dacfd001eaf252a81537aece602ae2fc16e6ebd5
Patch-mainline: v6.9-rc1
References: bsc#1233120

[ Adapted backport, from https://bugzilla.suse.com/show_bug.cgi?id=1233120#c4 .
  Equvalent check to skip when there are zero mappings. ]

Currently, it is possible to create an idmapped mount using a user
namespace without any mappings. However, this yields an idmapped
mount that doesn't actually map the ids. With the following change,
it will no longer be possible to create an idmapped mount when using
a user namespace with no mappings, and will instead return EINVAL,
an “invalid argument” error code.

Reviewed-by: Christian Brauner <brauner@kernel.org>
Signed-off-by: Taylor Jackson <taylor.a.jackson@me.com>
Link: https://lore.kernel.org/r/20240208-mnt-idmap-inval-v2-1-58ef26d194e0@me.com
Signed-off-by: Christian Brauner <brauner@kernel.org>
Signed-off-by: David Sterba <dsterba@suse.com>
---
 fs/namespace.c |    5 +++++
 1 file changed, 5 insertions(+)

--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -3995,6 +3995,11 @@ static int can_idmap_mount(const struct
 	if (!kattr->mnt_idmap)
 		return 0;
 
+	/* Don't allow idmaps with no mapping defined */
+	if (kattr->mnt_userns->uid_map.nr_extents == 0 ||
+	    kattr->mnt_userns->gid_map.nr_extents == 0)
+		return -EINVAL;
+
 	/*
 	 * Creating an idmapped mount with the filesystem wide idmapping
 	 * doesn't make sense so block that. We don't allow mushy semantics.
