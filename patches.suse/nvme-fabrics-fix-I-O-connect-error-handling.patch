From: Chaitanya Kulkarni <kch@nvidia.com>
Date: Tue, 13 Feb 2024 00:26:46 -0800
Subject: nvme-fabrics: fix I/O connect error handling
Patch-mainline: v6.8-rc5
Git-commit: 79bd7eab8366b29eaa099908d5694cb473684b9d
References: git-fixes

In nvmf_connect_io_queue(), if connect I/O command fails, we log the
error and continue for authentication. This overrides error captured
from __nvme_submit_sync_cmd(), causing wrong return value.

Add goto out_free_data after logging connect error to fix the issue.

Fixes: f50fff73d620c ("nvme: implement In-Band authentication")
Signed-off-by: Chaitanya Kulkarni <kch@nvidia.com>
Reviewed-by: Hannes Reinecke <hare@suse.de>
Signed-off-by: Keith Busch <kbusch@kernel.org>
Acked-by: Daniel Wagner <dwagner@suse.de>
---
 drivers/nvme/host/fabrics.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/drivers/nvme/host/fabrics.c
+++ b/drivers/nvme/host/fabrics.c
@@ -484,6 +484,7 @@ int nvmf_connect_io_queue(struct nvme_ct
 	if (ret) {
 		nvmf_log_connect_error(ctrl, ret, le32_to_cpu(res.u32),
 				       &cmd, data);
+		goto out_free_data;
 	}
 	result = le32_to_cpu(res.u32);
 	if ((result >> 16) & 2) {
@@ -500,6 +501,7 @@ int nvmf_connect_io_queue(struct nvme_ct
 					 "qid %u: authentication failed\n", qid);
 		}
 	}
+out_free_data:
 	kfree(data);
 	return ret;
 }
