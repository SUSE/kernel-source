From 19d340a2988d4f3e673cded9dde405d727d7e248 Mon Sep 17 00:00:00 2001
From: Jann Horn <jannh@google.com>
Date: Tue, 14 Jan 2025 18:49:00 +0100
Subject: [PATCH] io_uring/rsrc: require cloned buffers to share accounting
 contexts
Git-commit: 19d340a2988d4f3e673cded9dde405d727d7e248
Patch-mainline: v6.14-rc1
References: CVE-2025-21686 bsc#1237043

When IORING_REGISTER_CLONE_BUFFERS is used to clone buffers from uring
instance A to uring instance B, where A and B use different MMs for
accounting, the accounting can go wrong:
If uring instance A is closed before uring instance B, the pinned memory
counters for uring instance B will be decremented, even though the pinned
memory was originally accounted through uring instance A; so the MM of
uring instance B can end up with negative locked memory.

Cc: stable@vger.kernel.org
Closes: https://lore.kernel.org/r/CAG48ez1zez4bdhmeGLEFxtbFADY4Czn3CV0u9d_TMcbvRA01bg@mail.gmail.com
Fixes: 7cc2a6eadcd7 ("io_uring: add IORING_REGISTER_COPY_BUFFERS method")
Signed-off-by: Jann Horn <jannh@google.com>
Link: https://lore.kernel.org/r/20250114-uring-check-accounting-v1-1-42e4145aa743@google.com
Signed-off-by: Jens Axboe <axboe@kernel.dk>
Signed-off-by: Oscar Salvador <osalvador@suse.de>
---
 io_uring/rsrc.c |    5 +++++
 1 file changed, 5 insertions(+)

--- a/io_uring/rsrc.c
+++ b/io_uring/rsrc.c
@@ -1160,6 +1160,11 @@ static int io_clone_buffers(struct io_ri
 	mutex_unlock(&ctx->uring_lock);
 
 	mutex_lock(&src_ctx->uring_lock);
+
+	ret = -EINVAL;
+	if (ctx->user != src_ctx->user || ctx->mm_account != src_ctx->mm_account)
+		goto out_unlock;
+
 	ret = -ENXIO;
 	nbufs = src_ctx->nr_user_bufs;
 	if (!nbufs)
