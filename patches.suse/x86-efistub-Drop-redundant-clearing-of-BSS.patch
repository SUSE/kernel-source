From: Ard Biesheuvel <ardb@kernel.org>
Date: Thu, 4 Jul 2024 11:03:24 +0200
Subject: x86/efistub: Drop redundant clearing of BSS
Patch-mainline: v6.11-rc1
Git-commit: ebf5a79acf9a2970e93d30a9e97b08913ef15711
References: jsc#PED-11167

As it turns out, clearing the BSS was not the right fix for the issue
that was ultimately fixed by commit decd347c2a75 ("x86/efistub:
Reinstate soft limit for initrd loading"), and given that the Windows
EFI loader becomes very unhappy when entered with garbage in BSS, this
is one thing that x86 PC EFI implementations can be expected to get
right.

So drop it from the pure PE entrypoint. The handover protocol entrypoint
still needs this - it is used by the flaky distro bootloaders that
barely implement PE/COFF at all.

Signed-off-by: Ard Biesheuvel <ardb@kernel.org>
Acked-by: Chun-Yi Lee <jlee@suse.com>
---
 drivers/firmware/efi/libstub/x86-stub.c |    3 ---
 1 file changed, 3 deletions(-)

--- a/drivers/firmware/efi/libstub/x86-stub.c
+++ b/drivers/firmware/efi/libstub/x86-stub.c
@@ -476,9 +476,6 @@ efi_status_t __efiapi efi_pe_entry(efi_h
 	efi_status_t status;
 	char *cmdline_ptr;
 
-	if (efi_is_native())
-		memset(_bss, 0, _ebss - _bss);
-
 	efi_system_table = sys_table_arg;
 
 	/* Check if we were booted by the EFI firmware */
