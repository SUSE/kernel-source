From: Alan Maguire <alan.maguire@oracle.com>
Date: Fri, 16 Jul 2021 23:46:57 +0100
Subject: libbpf: Btf typed dump does not need to allocate dump data
Patch-mainline: v5.15-rc1
Git-commit: add192f81ab21b58471577c75e7be9c9add98223
References: jsc#PED-1377

By using the stack for this small structure, we avoid the need
for freeing memory in error paths.

Suggested-by: Andrii Nakryiko <andrii@kernel.org>
Signed-off-by: Alan Maguire <alan.maguire@oracle.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Link: https://lore.kernel.org/bpf/1626475617-25984-4-git-send-email-alan.maguire@oracle.com
Acked-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 tools/lib/bpf/btf_dump.c |    9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

--- a/tools/lib/bpf/btf_dump.c
+++ b/tools/lib/bpf/btf_dump.c
@@ -2238,6 +2238,7 @@ int btf_dump__dump_type_data(struct btf_
 			     const void *data, size_t data_sz,
 			     const struct btf_dump_type_data_opts *opts)
 {
+	struct btf_dump_data typed_dump = {};
 	const struct btf_type *t;
 	int ret;
 
@@ -2248,12 +2249,10 @@ int btf_dump__dump_type_data(struct btf_
 	if (!t)
 		return libbpf_err(-ENOENT);
 
-	d->typed_dump = calloc(1, sizeof(struct btf_dump_data));
-	if (!d->typed_dump)
-		return libbpf_err(-ENOMEM);
-
+	d->typed_dump = &typed_dump;
 	d->typed_dump->data_end = data + data_sz;
 	d->typed_dump->indent_lvl = OPTS_GET(opts, indent_level, 0);
+
 	/* default indent string is a tab */
 	if (!opts->indent_str)
 		d->typed_dump->indent_str[0] = '\t';
@@ -2267,7 +2266,7 @@ int btf_dump__dump_type_data(struct btf_
 
 	ret = btf_dump_dump_type_data(d, NULL, t, id, data, 0, 0);
 
-	free(d->typed_dump);
+	d->typed_dump = NULL;
 
 	return libbpf_err(ret);
 }
