From 757a5b6fe60719cdb4d2377041139c12744fc4c1 Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Fri, 23 Jun 2023 14:58:51 +0100
Subject: [PATCH] printk: Check only for migration in printk_deferred_*().

From 1920cc8ee256687edf2f1ac202eea8352f435681 Mon Sep 17 00:00:00 2001

References: SLE Realtime Extension
Git-commit: b991a54c5f6441f24f1b8960dc2371d9a7a580b1
Patch-mainline: v6.5-rc1

Atomic context is not required by the implementation. The only
requirement is that the caller does not migrate to another CPU between
the _enter() and _exit() invocation. The reason is to increment and
decrement the per-CPU variable on the same CPU.
Checking for migration only allows to use deferred printk on PREEMPT_RT
when only sleeping locks are acquired.

Check for disabled migration instead for atomic context in
printk_deferred_*()

Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Signed-off-by: Mel Gorman <mgorman@suse.de>

---
 kernel/printk/printk_safe.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/printk/printk_safe.c b/kernel/printk/printk_safe.c
index 5c1470bd60bc..a324eaeb2533 100644
--- a/kernel/printk/printk_safe.c
+++ b/kernel/printk/printk_safe.c
@@ -39,13 +39,13 @@ void __printk_safe_exit(unsigned long *flags)
 
 void __printk_deferred_enter(void)
 {
-	WARN_ON_ONCE(!in_atomic());
+	cant_migrate();
 	this_cpu_inc(printk_context.recursion);
 }
 
 void __printk_deferred_exit(void)
 {
-	WARN_ON_ONCE(!in_atomic());
+	cant_migrate();
 	this_cpu_dec(printk_context.recursion);
 }
 
