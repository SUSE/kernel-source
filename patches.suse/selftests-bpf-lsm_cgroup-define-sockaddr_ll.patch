From: Shung-Hsi Yu <shung-hsi.yu@suse.com>
Date: Fri, 29 Dec 2023 18:17:44 +0800
Subject: selftests/bpf: lsm_cgroup define sockaddr_ll
Patch-mainline: never, SUSE-specific
References: jsc#PED-6811

Fix BPF kselftest compilation error in lsm_cgroup due to CONFIG_PACKET not
being built-in, and thus vmlinux.h will not have struct sockaddr_ll defined.
Upstream does not intent to ensure that BPF kselftest compile against all
kernel config (see link below), so we need a SUSE-specific workaround.

Luckily struct socketaddr_ll is UAPI and is rather simple, so let's just
include its definition directly within lsm_cgroup.c.

Link: https://lore.kernel.org/bpf/CAADnVQKMy_YchC2RVaGFiho7Qgdwxm9uPaQ74BMcwNE_zwbR4Q@mail.gmail.com/
Signed-off-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 tools/testing/selftests/bpf/progs/lsm_cgroup.c |   11 +++++++++++
 1 file changed, 11 insertions(+)
--- a/tools/testing/selftests/bpf/progs/lsm_cgroup.c
+++ b/tools/testing/selftests/bpf/progs/lsm_cgroup.c
@@ -24,6 +24,17 @@ extern bool CONFIG_SECURITY_APPARMOR __k
 #define EPERM 1
 #endif
 
+/* We have CONFIG_PACKET=m, so socketaddr_ll won't be in vmlinux.h */
+struct sockaddr_ll {
+	unsigned short	sll_family;
+	__be16		sll_protocol;
+	int		sll_ifindex;
+	unsigned short	sll_hatype;
+	unsigned char	sll_pkttype;
+	unsigned char	sll_halen;
+	unsigned char	sll_addr[8];
+};
+
 struct {
 	__uint(type, BPF_MAP_TYPE_CGROUP_STORAGE);
 	__type(key, __u64);
