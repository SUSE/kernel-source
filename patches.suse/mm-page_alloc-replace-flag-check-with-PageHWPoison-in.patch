From b909481cdaaa8c82ded1fad8e23d5f5c5ef5a4f2 Mon Sep 17 00:00:00 2001
From: Ye Liu <liuye@kylinos.cn>
Date: Thu, 20 Mar 2025 06:33:46 +0000
Subject: [PATCH] mm/page_alloc: replace flag check with PageHWPoison() in
 check_new_page_bad()

References: bsc#1241169 (MM functional and performance backports)
Patch-mainline: v6.15-rc1
Git-commit: bd145bdd26c6845b5403d47b3b094bb5d020c6ef

This patch replaces the direct check for the __PG_HWPOISON flag with the
PageHWPoison() macro, improving code readability and maintaining
consistency with other parts of the memory management code.

Link: https://lkml.kernel.org/r/20250320063346.489030-1-ye.liu@linux.dev
Signed-off-by: Ye Liu <liuye@kylinos.cn>
Reviewed-by: Sidhartha Kumar <sidhartha.kumar@oracle.com>
Reviewed-by: Anshuman Khandual <anshuman.khandual@arm.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Mel Gorman <mgorman@suse.de>

---
 mm/page_alloc.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index ddd77781f6a5..42b7d4a94530 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -1449,7 +1449,7 @@ static __always_inline void page_del_and_expand(struct zone *zone,
 
 static void check_new_page_bad(struct page *page)
 {
-	if (unlikely(page->flags & __PG_HWPOISON)) {
+	if (unlikely(PageHWPoison(page))) {
 		/* Don't complain about hwpoisoned pages */
 		if (PageBuddy(page))
 			__ClearPageBuddy(page);
