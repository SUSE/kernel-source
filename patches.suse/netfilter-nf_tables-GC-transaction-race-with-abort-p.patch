From d18e2de505e813c986da41ac7ce42fa153d50c19 Mon Sep 17 00:00:00 2001
From: Pablo Neira Ayuso <pablo@netfilter.org>
Date: Fri, 18 Aug 2023 01:13:52 +0200
Subject: [PATCH 04/11] netfilter: nf_tables: GC transaction race with abort
 path
References: git-fixes
Patch-mainline: v6.5
Git-commit: 720344340fb9be2765bbaab7b292ece0a4570eae

Abort path is missing a synchronization point with GC transactions. Add
GC sequence number hence any GC transaction losing race will be
discarded.

Fixes: 5f68718b34a5 ("netfilter: nf_tables: GC transaction API to avoid race with control plane")
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
Signed-off-by: Florian Westphal <fw@strlen.de>
Signed-off-by: Denis Kirjanov <denis.kirjanov@suse.com>
---
 net/netfilter/nf_tables_api.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index 3b61a3f1be126..3eacf1b68459f 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -7355,8 +7355,12 @@ static void nf_tables_cleanup(struct net *net)
 
 static int nf_tables_abort(struct net *net, struct sk_buff *skb, bool autoload)
 {
-	int ret = __nf_tables_abort(net, autoload);
+	unsigned int gc_seq;
+	int ret;
 
+	gc_seq = nft_gc_seq_begin(net);
+	ret = __nf_tables_abort(net, autoload);
+	nft_gc_seq_end(net, gc_seq);
 	mutex_unlock(&net->nft.commit_mutex);
 
 	return ret;
-- 
2.16.4

