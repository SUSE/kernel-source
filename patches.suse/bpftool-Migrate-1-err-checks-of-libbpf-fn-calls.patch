From: Dave Marchevsky <davemarchevsky@fb.com>
Date: Mon, 1 Nov 2021 15:43:54 -0700
Subject: bpftool: Migrate -1 err checks of libbpf fn calls
Patch-mainline: v5.17-rc1
Git-commit: 60f270753960291895cdd07d360c4e09c56c4596
References: jsc#PED-1377

Per [0], callers of libbpf functions with LIBBPF_STRICT_DIRECT_ERRS set
should handle negative error codes of various values (e.g. -EINVAL).
Migrate two callsites which were explicitly checking for -1 only to
handle the new scheme.

  [0]: https://github.com/libbpf/libbpf/wiki/Libbpf-1.0-migration-guide#direct-error-code-returning-libbpf_strict_direct_errs

Signed-off-by: Dave Marchevsky <davemarchevsky@fb.com>
Signed-off-by: Andrii Nakryiko <andrii@kernel.org>
Acked-by: Quentin Monnet <quentin@isovalent.com>
Link: https://lore.kernel.org/bpf/20211101224357.2651181-2-davemarchevsky@fb.com
Acked-by: Shung-Hsi Yu <shung-hsi.yu@suse.com>
---
 tools/bpf/bpftool/btf_dumper.c |    2 +-
 tools/bpf/bpftool/struct_ops.c |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

--- a/tools/bpf/bpftool/btf_dumper.c
+++ b/tools/bpf/bpftool/btf_dumper.c
@@ -52,7 +52,7 @@ static int dump_prog_id_as_func_ptr(cons
 
 	/* Get the bpf_prog's name.  Obtain from func_info. */
 	prog_fd = bpf_prog_get_fd_by_id(prog_id);
-	if (prog_fd == -1)
+	if (prog_fd < 0)
 		goto print;
 
 	prog_info = bpf_program__get_prog_info_linear(prog_fd,
--- a/tools/bpf/bpftool/struct_ops.c
+++ b/tools/bpf/bpftool/struct_ops.c
@@ -252,7 +252,7 @@ static struct res do_one_id(const char *
 	}
 
 	fd = bpf_map_get_fd_by_id(id);
-	if (fd == -1) {
+	if (fd < 0) {
 		p_err("can't get map by id (%lu): %s", id, strerror(errno));
 		res.nr_errs++;
 		return res;
