From: Daniel Wagner <dwagner@suse.de>
Date: Mon, 8 Nov 2021 14:53:38 +0100
Subject: [PATCH] nvme: Add sibling to list after full initialization
Patch-mainline: Not yet, posted https://lore.kernel.org/linux-nvme/20211111130603.16547-1-dwagner@suse.de/
References: bsc#1191793 bsc#1192507

Adding the newly created namespace before the object is fully
initialized is opening a race with nvme_mpath_revalidate_paths() which
tries to access ns->disk. ns->disk can still be NULL when iterating
over the sibling list.

Signed-off-by: Daniel Wagner <dwagner@suse.de>
---
 drivers/nvme/host/core.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/drivers/nvme/host/core.c
+++ b/drivers/nvme/host/core.c
@@ -3711,7 +3711,6 @@ static int nvme_init_ns_head(struct nvme
 		}
 	}
 
-	list_add_tail_rcu(&ns->siblings, &head->list);
 	ns->head = head;
 	mutex_unlock(&ctrl->subsys->lock);
 	return 0;
@@ -3808,6 +3807,10 @@ static void nvme_alloc_ns(struct nvme_ct
 	if (nvme_update_ns_info(ns, id))
 		goto out_unlink_ns;
 
+	mutex_lock(&ctrl->subsys->lock);
+	list_add_tail_rcu(&ns->siblings, &ns->head->list);
+	mutex_unlock(&ctrl->subsys->lock);
+
 	down_write(&ctrl->namespaces_rwsem);
 	nvme_ns_add_to_ctrl_list(ns);
 	up_write(&ctrl->namespaces_rwsem);
