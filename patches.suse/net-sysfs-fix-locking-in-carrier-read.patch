From: Johannes Berg <johannes.berg@intel.com>
Date: Wed, 6 Dec 2023 17:21:23 +0100
Subject: net: sysfs: fix locking in carrier read
Patch-mainline: v6.8-rc1
Git-commit: bf17b36ccdd5b7b9dd482d7753bcb9aff2d21d39
References: jsc#PED-7574

My previous patch added a call to linkwatch_sync_dev(),
but that of course needs to be called under RTNL, which
I missed earlier, but now saw RCU warnings from.

Fix that by acquiring the RTNL in a similar fashion to
how other files do it here.

Fixes: facd15dfd691 ("net: core: synchronize link-watch when carrier is queried")
Signed-off-by: Johannes Berg <johannes.berg@intel.com>
Link: https://lore.kernel.org/r/20231206172122.859df6ba937f.I9c80608bcfbab171943ff4942b52dbd5e97fe06e@changeid
Signed-off-by: Jakub Kicinski <kuba@kernel.org>
Acked-by: Thomas Bogendoerfer <tbogendoerfer@suse.de>
---
 net/core/net-sysfs.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

--- a/net/core/net-sysfs.c
+++ b/net/core/net-sysfs.c
@@ -193,6 +193,10 @@ static ssize_t carrier_show(struct devic
 			    struct device_attribute *attr, char *buf)
 {
 	struct net_device *netdev = to_net_dev(dev);
+	int ret = -EINVAL;
+
+	if (!rtnl_trylock())
+		return restart_syscall();
 
 	if (netif_running(netdev)) {
 		/* Synchronize carrier state with link watch,
@@ -200,10 +204,11 @@ static ssize_t carrier_show(struct devic
 		 */
 		linkwatch_sync_dev(netdev);
 
-		return sysfs_emit(buf, fmt_dec, !!netif_carrier_ok(netdev));
+		ret = sysfs_emit(buf, fmt_dec, !!netif_carrier_ok(netdev));
 	}
+	rtnl_unlock();
 
-	return -EINVAL;
+	return ret;
 }
 static DEVICE_ATTR_RW(carrier);
 
