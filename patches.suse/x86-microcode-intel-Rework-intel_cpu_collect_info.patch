From: Thomas Gleixner <tglx@linutronix.de>
Date: Tue, 17 Oct 2023 23:23:45 +0200
Subject: x86/microcode/intel: Rework intel_cpu_collect_info()
Git-commit: 164aa1ca537238c46923ccacd8995b4265aee47b
Patch-mainline: v6.7-rc1
References: git-fixes

Nothing needs struct ucode_cpu_info. Make it take struct cpu_signature,
let it return a boolean and simplify the implementation. Rename it now
that the silly name clash with collect_cpu_info() is gone.

Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Signed-off-by: Borislav Petkov (AMD) <bp@alien8.de>
Link: https://lore.kernel.org/r/20231017211722.851573238@linutronix.de

Acked-by: Nikolay Borisov <nik.borisov@suse.com>
---
 arch/x86/include/asm/cpu.h            |    1 +
 arch/x86/kernel/cpu/microcode/intel.c |   26 +++++++-------------------
 2 files changed, 8 insertions(+), 19 deletions(-)

--- a/arch/x86/include/asm/cpu.h
+++ b/arch/x86/include/asm/cpu.h
@@ -75,6 +75,7 @@ static inline void init_ia32_feat_ctl(st
 extern __noendbr void cet_disable(void);
 
 struct ucode_cpu_info;
+struct cpu_signature;
 
 int intel_cpu_collect_info(struct ucode_cpu_info *uci);
 
--- a/arch/x86/kernel/cpu/microcode/intel.c
+++ b/arch/x86/kernel/cpu/microcode/intel.c
@@ -70,31 +70,19 @@ static inline unsigned int exttable_size
 
 int intel_cpu_collect_info(struct ucode_cpu_info *uci)
 {
-	unsigned int val[2];
-	unsigned int family, model;
-	struct cpu_signature csig = { 0 };
-	unsigned int eax, ebx, ecx, edx;
+	struct cpu_signature *sig = &uci->cpu_sig;
+	sig->sig = cpuid_eax(1);
+	sig->pf = 0;
+	sig->rev = intel_get_microcode_revision();
 
-	memset(uci, 0, sizeof(*uci));
+	if (x86_model(sig->sig) >= 5 || x86_family(sig->sig) > 6) {
+		unsigned int val[2];
 
-	eax = 0x00000001;
-	ecx = 0;
-	native_cpuid(&eax, &ebx, &ecx, &edx);
-	csig.sig = eax;
-
-	family = x86_family(eax);
-	model  = x86_model(eax);
-
-	if (model >= 5 || family > 6) {
 		/* get processor flags from MSR 0x17 */
 		native_rdmsr(MSR_IA32_PLATFORM_ID, val[0], val[1]);
-		csig.pf = 1 << ((val[1] >> 18) & 7);
+		sig->pf = 1 << ((val[1] >> 18) & 7);
 	}
 
-	csig.rev = intel_get_microcode_revision();
-
-	uci->cpu_sig = csig;
-
 	return 0;
 }
 EXPORT_SYMBOL_GPL(intel_cpu_collect_info);
