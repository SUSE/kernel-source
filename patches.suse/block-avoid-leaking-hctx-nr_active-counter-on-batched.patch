From: Jan Kara <jack@suse.cz>
Subject: block: Avoid leaking hctx->nr_active counter on batched completion
References: bsc#1231923
Patch-mainline: Never, fixed by commit b8643d6826699 which is much more inclusive

When batched request completion races with request iteration using bt_iter()
hctx->nr_active counter can be leaked like:

bt_iter()                            blk_mq_end_request_batch()    
...
  rq = blk_mq_find_and_get_req(tags, bitnr);   /* grabs request reference */
                                       if (!req_ref_put_and_test(rq))
                                         continue; /* skips de-accounting */
  ...
  blk_mq_put_rq_ref()
    else if (req_ref_put_and_test(rq))
      __blk_mq_free_request(rq);

Fix the problem by decrementing hctx->nr_active in __blk_mq_free_request()
instead of in blk_mq_free_request().

Signed-off-by: Jan Kara <jack@suse.cz>

---
 block/blk-mq.c |    5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

--- a/block/blk-mq.c
+++ b/block/blk-mq.c
@@ -617,6 +617,8 @@ static void __blk_mq_free_request(struct
 	blk_crypto_free_request(rq);
 	blk_pm_mark_last_busy(rq);
 	rq->mq_hctx = NULL;
+	if (rq->rq_flags & RQF_MQ_INFLIGHT)
+		__blk_mq_dec_active_requests(hctx);
 	if (rq->tag != BLK_MQ_NO_TAG)
 		blk_mq_put_tag(hctx->tags, ctx, rq->tag);
 	if (sched_tag != BLK_MQ_NO_TAG)
@@ -634,9 +636,6 @@ void blk_mq_free_request(struct request
 	    q->elevator->type->ops.finish_request)
 		q->elevator->type->ops.finish_request(rq);
 
-	if (rq->rq_flags & RQF_MQ_INFLIGHT)
-		__blk_mq_dec_active_requests(hctx);
-
 	if (unlikely(laptop_mode && !blk_rq_is_passthrough(rq)))
 		laptop_io_completion(q->disk->bdi);
 
