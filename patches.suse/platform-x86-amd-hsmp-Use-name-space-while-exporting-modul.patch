From: Suma Hegde <suma.hegde@amd.com>
Date: Mon, 21 Oct 2024 11:14:26 +0000
Subject: platform/x86/amd/hsmp: Use name space while exporting module symbols
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Git-commit: 4fc0366ef83f493c63ecf732cbb7ed49edd62072
Patch-mainline: v6.13-rc1
References: jsc#PED-13094

hsmp_send_message() is exported with AMD_HSMP name space.
The other modules who would like to use this symbol,
need to import AMD_HSMP namespace using MODULE_IMPORT_NS()
to get away with warning.

Signed-off-by: Suma Hegde <suma.hegde@amd.com>
Reviewed-by: Naveen Krishna Chatradhi <naveenkrishna.chatradhi@amd.com>
Link: https://lore.kernel.org/r/20241021111428.2676884-9-suma.hegde@amd.com
Reviewed-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>
Acked-by: Nikolay Borisov <nik.borisov@suse.com>
---
 drivers/platform/x86/amd/hsmp/acpi.c |    1 +
 drivers/platform/x86/amd/hsmp/hsmp.c |   17 +++++++++--------
 drivers/platform/x86/amd/hsmp/plat.c |    1 +
 3 files changed, 11 insertions(+), 8 deletions(-)

--- a/drivers/platform/x86/amd/hsmp/acpi.c
+++ b/drivers/platform/x86/amd/hsmp/acpi.c
@@ -343,6 +343,7 @@ static struct platform_driver amd_hsmp_d
 
 module_platform_driver(amd_hsmp_driver);
 
+MODULE_IMPORT_NS(AMD_HSMP);
 MODULE_DESCRIPTION("AMD HSMP Platform Interface Driver");
 MODULE_VERSION(DRIVER_VERSION);
 MODULE_LICENSE("GPL");
--- a/drivers/platform/x86/amd/hsmp/hsmp.c
+++ b/drivers/platform/x86/amd/hsmp/hsmp.c
@@ -36,7 +36,7 @@
 #define DRIVER_VERSION		"2.3"
 
 struct hsmp_plat_device hsmp_pdev;
-EXPORT_SYMBOL_GPL(hsmp_pdev);
+EXPORT_SYMBOL_NS_GPL(hsmp_pdev, AMD_HSMP);
 
 /*
  * Send a message to the HSMP port via PCI-e config space registers
@@ -193,7 +193,7 @@ int hsmp_send_message(struct hsmp_messag
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(hsmp_send_message);
+EXPORT_SYMBOL_NS_GPL(hsmp_send_message, AMD_HSMP);
 
 int hsmp_test(u16 sock_ind, u32 value)
 {
@@ -224,7 +224,7 @@ int hsmp_test(u16 sock_ind, u32 value)
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(hsmp_test);
+EXPORT_SYMBOL_NS_GPL(hsmp_test, AMD_HSMP);
 
 long hsmp_ioctl(struct file *fp, unsigned int cmd, unsigned long arg)
 {
@@ -309,7 +309,7 @@ ssize_t hsmp_metric_tbl_read(struct file
 
 	return bin_attr->size;
 }
-EXPORT_SYMBOL_GPL(hsmp_metric_tbl_read);
+EXPORT_SYMBOL_NS_GPL(hsmp_metric_tbl_read, AMD_HSMP);
 
 static int hsmp_get_tbl_dram_base(u16 sock_ind)
 {
@@ -352,7 +352,7 @@ umode_t hsmp_is_sock_attr_visible(struct
 	else
 		return 0;
 }
-EXPORT_SYMBOL_GPL(hsmp_is_sock_attr_visible);
+EXPORT_SYMBOL_NS_GPL(hsmp_is_sock_attr_visible, AMD_HSMP);
 
 static int hsmp_init_metric_tbl_bin_attr(struct bin_attribute **hattrs, u16 sock_ind)
 {
@@ -391,7 +391,7 @@ int hsmp_create_attr_list(struct attribu
 
 	return hsmp_init_metric_tbl_bin_attr(hsmp_bin_attrs, sock_ind);
 }
-EXPORT_SYMBOL_GPL(hsmp_create_attr_list);
+EXPORT_SYMBOL_NS_GPL(hsmp_create_attr_list, AMD_HSMP);
 
 int hsmp_cache_proto_ver(u16 sock_ind)
 {
@@ -408,6 +408,7 @@ int hsmp_cache_proto_ver(u16 sock_ind)
 
 	return ret;
 }
+EXPORT_SYMBOL_NS_GPL(hsmp_cache_proto_ver, AMD_HSMP);
 
 static const struct file_operations hsmp_fops = {
 	.owner		= THIS_MODULE,
@@ -426,13 +427,13 @@ int hsmp_misc_register(struct device *de
 
 	return misc_register(&hsmp_pdev.mdev);
  }
-EXPORT_SYMBOL_GPL(hsmp_misc_register);
+EXPORT_SYMBOL_NS_GPL(hsmp_misc_register, AMD_HSMP);
 
 void hsmp_misc_deregister(void)
 {
 	misc_deregister(&hsmp_pdev.mdev);
 }
-EXPORT_SYMBOL_GPL(hsmp_misc_deregister);
+EXPORT_SYMBOL_NS_GPL(hsmp_misc_deregister, AMD_HSMP);
 
 MODULE_DESCRIPTION("AMD HSMP Common Driver");
 MODULE_VERSION(DRIVER_VERSION);
--- a/drivers/platform/x86/amd/hsmp/plat.c
+++ b/drivers/platform/x86/amd/hsmp/plat.c
@@ -265,6 +265,7 @@ static void __exit hsmp_plt_exit(void)
 device_initcall(hsmp_plt_init);
 module_exit(hsmp_plt_exit);
 
+MODULE_IMPORT_NS(AMD_HSMP);
 MODULE_DESCRIPTION("AMD HSMP Platform Interface Driver");
 MODULE_VERSION(DRIVER_VERSION);
 MODULE_LICENSE("GPL");
